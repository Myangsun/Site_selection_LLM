[
  {
    "Query": "find parcels larger than 500000 square feet",
    "Code": "import geopandas as gpd\n\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\n\n# Define projected CRS for Cambridge, MA\ncambridge_crs = 26986\n\n# Project to accurate CRS\nparcels_proj = parcels.to_crs(cambridge_crs)\n\n# Filter by size: large parcels (>500000 sq ft)\nlarge_parcels = parcels_proj[parcels_proj['land_area'] > 500000]\n\n# Sort by ml (parcel ID) for consistency\nlarge_parcels = large_parcels.sort_values('ml')\n\n# Convert back to original CRS\nlarge_parcels = large_parcels.to_crs(parcels.crs)\n\n# Extract parcel IDs\nlarge_parcel_ids = large_parcels['ml'].tolist()\n\n# Print results\nprint(large_parcel_ids)",
    "Answer": "['144-1', '157-69', '159-1', '1A-207', '243-1', '245-1', '264-102', '265C-25', '266-31', '266-32', '266-34', '267.1-280', '267.2-263', '269-138', '38-1', '52A-21', '57-173', '58-166']"
  },
  {
    "Query": "find retail parcels",
    "Code": "import geopandas as gpd\nimport pandas as pd\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\nspend = pd.read_csv('cambridge_spend_processed.csv')\n# Convert to projected CRS for accurate analysis\nparcels_proj = parcels.to_crs(epsg=26986)\n# Define retail use codes\nretail_use_codes = [320, 321, 323, 324, 325, 326, 327, 328, 330]\n# Filter for retail parcels\nretail_parcels = parcels_proj[parcels_proj['use_code'].astype(str).str.startswith('32')]\n# Sort by parcel ID\nretail_parcels = retail_parcels.sort_values('ml')\n# Convert back to original CRS\nretail_parcels = retail_parcels.to_crs(parcels.crs)\n# Output results\nretail_ids = retail_parcels['ml'].tolist()\nprint(retail_ids)",
    "Answer": "['100-62', '102-46', '105-68', '105-82', '106-109', '106-124', '107-117', '107-9', '108-54', '109-50', '110-91', '114A-120', '116-12', '116-94', '119-90', '120-48', '122-12', '125-73', '126-27', '128-63', '128-72', '133-12', '133-48', '133-52', '134-33', '136-15', '139-83', '140-148', '141-80', '150-114', '152-25', '154-111', '154-89', '154-97', '155-42', '156-25', '157-26', '159-2', '16-11', '160-63', '160-66', '160-76', '160-83', '160-84', '160-85', '162-18', '162-19', '162-26', '162-29', '162-54', '166-106', '166-13', '169-46', '169-47', '169-67', '169-68', '169-7', '169-86', '173-65', '174-27', '174-30', '174-33', '174-36', '174-37', '174-73', '175-37', '175-75', '175-84', '176-15', '176-64', '178-79', '179-75', '179-87', '18-64', '18-65', '180-57', '182-88', '182-89', '182-90', '183-100', '184-109', '184-159', '184-193', '189-4', '189-72', '191-65', '191-85', '192-121', '192-177', '195-59', '196-123', '196-154', '199-30', '199-31', '199-67', '199-90', '1A-189', '1A-192', '1A-211', '20-75', '200-22', '200-79', '21-121', '21-16', '226-46', '228-33', '228-55', '229-117', '229-131', '23-156', '230-116', '230-41', '230-71', '230-97', '231-27', '233-147', '233-175', '234-193', '236-146', '236-84', '236-95', '252-158', '252-172', '254-76', '254-78', '254-82', '255-21', '260-46', '260-76', '261-112', '261-6', '261-7', '265A-35', '265A-46', '265B-26', '265B-28', '265B-61', '265C-25', '267D-259', '267E-234', '268B-15', '271-32', '273-2', '273-20', '34-8', '36-137', '42-81', '42-91', '69-162', '70-91', '70-92', '74-1', '74-6', '74-8', '75-128', '79-22', '8-88', '81-100', '82-31', '83-15', '83-80', '83-90', '83-98', '83-99', '84-101', '84-12', '84-91', '85-66', '86-84', '88-48', '90-125', '90-127', '90-155', '90-162', '91-191', '91-52', '92-88', '93-76', '93-78', '93-79', '93-80', '96-152', '97-111']"
  },
  {
    "Query": "find office parcels",
    "Code": "import geopandas as gpd\nimport pandas as pd\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\nspending = pd.read_csv('cambridge_spend_processed.csv')\n\n# Project to metric CRS for accurate distance measurement\nparcels_proj = parcels.to_crs(epsg=26986)\npoi_proj = poi.to_crs(epsg=26986)\ncensus_proj = census.to_crs(epsg=26986)\n# Define office use codes (those starting with '34')\noffice_use_codes = ['340', '341', '342', '343', '344', '345', '346', '347', '348', '349']\n# Filter for office parcels (use_code starting with '34')\noffice_parcels = parcels_proj[parcels_proj['use_code'].astype(str).str.startswith('34')].copy()\n# Sort by parcel ID (ml)\nresult_ids = sorted(office_parcels['ml'].tolist())\n# Print results\nprint(result_ids)",
    "Answer": "['10-31', '10-38', '10-39', '102-25', '105-123', '105-58', '105-74', '105-77', '105-81', '105-89', '106-123', '107-135', '107-136', '109-22', '109-51', '11-40', '110-16', '110-18', '110-21', '110-55', '110-90', '114A-66', '116-117', '117-1', '117-25', '117-29', '117-56', '118-1', '118-34', '118-79', '119-93', '119-95', '12-19', '120-17', '120-74', '121-13', '121-2', '121-94', '128-70', '129-11', '13-16', '13-23', '133-14', '133-15', '133-20', '133-23', '133-27', '133-28', '133-30', '133-33', '133-49', '133-51', '134-59', '14-26', '14-36', '14-47', '14-58', '140-157', '15-3', '15-30', '15-31', '152-52', '154-64', '154-65', '154-73', '156-55', '156-60', '16-23', '160-11', '160-14', '160-48', '160-57', '160-58', '160-59', '160-64', '160-67', '160-69', '160-71', '160-72', '160-77', '162-17', '162-36', '162-64', '162-65', '162-67', '162-68', '162-73', '165-53', '165-55', '165-57', '166-24', '166-33', '166-35', '166-37', '166-52', '166-77', '168-13', '168-20', '168-21', '168-22', '168-25', '168-33', '168-36', '168-41', '168-48', '168-49', '168-59', '168-60', '168-64', '169-102', '169-42', '169-50', '169-81', '169-82', '169-84', '169-93', '169-98', '169-99', '17-10', '17-74', '17-84', '172-29', '174-25', '174-26', '174-31', '175-68', '175-77', '178-1', '178-106', '178-117', '178-133', '178-91', '179-42', '18-73', '18-74', '18-76', '181-65', '181-88', '182-8', '182-84', '182-98', '183-119', '183-97', '184-155', '184-168', '186-14', '189-57', '19-23', '190-33', '191-112', '192-39', '192-73', '192-74', '192-75', '196-153', '1A-105', '1A-172', '1A-190', '1A-200', '1A-201', '1A-209', '1A-70', '20-103', '20-31', '203B-52', '21-115', '21-120', '216-7', '226-67', '227-24', '229-150', '23-149', '23-90', '230-42', '233-89', '236-148', '24-133', '251-255', '251-9', '252-160', '254-81', '254-86', '261-186', '261-77', '262-116', '265A-29', '265A-31', '265A-40', '265B-59', '265D-53', '267.2-267', '267.3-253', '267.4-288', '267.4-305', '267C-70', '267D-282', '267D-285', '267D-299', '267D-300', '267D-305', '267D-310', '267D-311', '267D-316', '267D-319', '267D-329', '267E-279', '267E-280', '267E-282', '267F-274', '267F-279', '267F-281', '267F-283', '267F-293', '267F-296', '267F-301', '267F-391', '268C-32', '268C-35', '27-34', '27-82', '273-29', '273-40', '273-51', '28-23', '28-31', '29-50', '31-20', '34-116', '35-89', '36-248', '39-173', '39-88', '40-153', '41-36', '41-38', '42-70', '42-86', '42-87', '42-94', '42-97', '42-99', '43-70', '43-73', '43-78', '43A-21', '44-100', '44-104', '44-105', '44-99', '46-12', '47-94', '54-25', '55-18', '68-19', '68-50', '69-159', '70-22', '70-74', '70-86', '75-44', '77-41', '8-75', '8-76', '80-172', '80-175', '80-3', '80-51', '81-103', '83-1', '83-7', '83-92', '84-1', '84-67', '84-97', '85-76', '87-153', '88-53', '9-41', '90-13', '90-133', '90-14', '90-161', '90-169', '90-170', '90-185', '90-20', '90-52', '90-70', '91-118', '91-208', '91-63', '91-64', '91-87', '93-48', '93-72', '93-73', '93-74', '93-75', '93-99', '94-6', '95-76', '95-79', '96-109', '96-110', '96-124', '96-98']"
  },
  {
    "Query": "find residential parcels",
    "Code": "import geopandas as gpd\nimport pandas as pd\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\nspending = pd.read_csv('cambridge_spend_processed.csv')\n\n# Project to metric CRS for accurate distance measurement\nparcels_proj = parcels.to_crs(epsg=26986)\npoi_proj = poi.to_crs(epsg=26986)\ncensus_proj = census.to_crs(epsg=26986)\n\n# Filter for residential parcels\nresidential_parcels = parcels_proj[parcels_proj['use_code'].astype(str).str.startswith('01')].copy()\n\n# Sort by parcel ID (ml)\nresult_ids = sorted(residential_parcels['ml'].tolist())\n\n# Print results\nprint(result_ids)",
    "Answer": "['10-67', '101-120', '102-17', '102-47', '105-107', '105-112', '105-117', '105-119', '105-128', '105-134', '105-16', '105-17', '105-55', '105-59', '106-103', '106-105', '106-122', '106-125', '106-51', '107-138', '108-23', '108-60', '108-70', '108-8', '109-23', '109-40', '109-87', '11-43', '111-53', '113-38', '114-37', '114A-16', '116-54', '116-68', '116-98', '117-24', '118-32', '119-113', '119-22', '119-4', '119-7', '119-8', '119-9', '12-17', '120-40', '120-73', '121-102', '121-112', '121-114', '122-175', '122-24', '123-89', '125-117', '125-39', '125-52', '125-57', '125-88', '126-159', '126-82', '128-30', '129-32', '131-33', '132-106', '133-11', '133-21', '133-26', '133-29', '133-31', '133-41', '133-43', '133-53', '133-55', '134-50', '134-56', '135-26', '135-87', '139-18', '14-1038', '14-59', '141-14', '150-41', '151-39', '152-1', '152-47', '152-7', '155-32', '156-68', '157-39', '16-33', '16-35', '160-25', '160-53', '160-74', '162-72', '162-9', '165-40', '168-16', '168-45', '169-85', '17-17', '17-76', '173-34', '173-48', '174-62', '176-85', '176-86', '177-46', '177-55', '179-51', '179-52', '179-74', '179-81', '18-47', '180-14', '180-18', '181-207', '181-38', '182-65', '182-7', '182-82', '183-102', '183-104', '183-130', '183-63', '183-64', '184-9', '189-100', '189-32', '189-33', '189-34', '189-36', '189-53', '19-18', '190-244', '191-103', '191-118', '191-74', '192-152', '192-157', '192-16', '192-38', '194-15', '196-15', '198-29', '198-98', '199-32', '1A-109', '1A-174', '1A-210', '20-15', '20-68', '200-47', '200-48', '200-68', '201-2', '208-16', '21-110', '21-111', '21-12', '21-18', '21-19', '21-84', '216-4', '220-137', '224-42', '227-25', '227-99', '229-110', '229-165', '229-67', '23-110', '23-111', '23-112', '23-113', '23-126', '23-127', '23-135', '23-138', '23-141', '23-142', '23-17', '23-38', '23-39', '23-46', '23-48', '23-49', '23-57', '23-61', '23-62', '23-65', '230-2', '230-70', '234-169', '24-22', '24-98', '24-99', '254-91', '255-20', '255-22', '263-53', '265D-58', '267.3-28', '27-29', '273-47', '29-34', '34-127', '34-144', '34-145', '34-146', '34-2', '34-24', '34-26', '34-27', '34-3', '34-40', '34-41', '34-42', '34-43', '34-44', '34-45', '34-7', '35-32', '35-33', '35-37', '35-50', '35-51', '35-52', '35-53', '35-60', '35-85', '36-117', '36-118', '36-119', '36-120', '36-125', '36-151', '36-157', '36-159', '36-167', '36-168', '36-176', '36-197', '36-204', '36-210', '36-217', '36-243', '36-249', '36-250', '36-26', '37-114', '37-12', '37-13', '37-14', '37-17', '37-18', '37-19', '37-88', '40-138', '40-84', '42-58', '66-1', '66-96', '70-87', '74-7', '76-29', '76-52', '76-62', '77-39', '77-63', '78-24', '79-21', '79-25', '79-73', '79-92', '79-97', '8-61', '80-128', '80-160', '80-2', '80-52', '80-58', '82-11', '82-12', '82-54', '82-56', '82-58', '82-68', '82-71', '82-79', '83-35', '83-6', '83-67', '83-93', '83-94', '83-95', '83-96', '84-105', '84-20', '84-22', '84-23', '84-36', '84-48', '84-68', '84-87', '85-101', '85-26', '85-27', '85-28', '85-64', '85-7', '85-83', '85-95', '86-111', '86-49', '86-82', '87-34', '87-40', '88-17', '88-18', '88-31', '88-69', '88-71', '89-73', '90-101', '90-111', '90-194', '91-206', '91-207', '92-126', '93-71', '93-81', '94-10', '95-7', '97-34']"
  },
  {
    "Query": "find industrial parcels",
    "Code": "import geopandas as gpd\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\n# Define industrial use codes\nindustrial_use_codes = [ '400', '404', '406', '410', '412', '413', '414', '415', '416', '417', '418', '419' ]\n# Filter for industrial parcels\nindustrial_parcels = parcels[parcels['use_code'].astype(str).str.startswith('40')]\n# Sort by parcel ID (ml)\nresult_ids = industrial_parcels['ml'].sort_values().tolist()\n# Print results\nprint(result_ids)",
    "Answer": "['10-16', '11-146', '110-87', '127-119', '128-71', '129-58', '130-63', '14-39', '14-44', '14-45', '14-49', '14-64', '15-28', '15-29', '16-24', '16-32', '18-77', '184-138', '184-198', '1A-213', '1A-67', '203A-76', '21-109', '261-167', '265B-34', '267.1-278', '267.2-272', '267.2-273', '267.3-226', '267.3-228', '267.3-276', '267.3-279', '267.3-280', '267.3-285', '267.4-218', '267.4-221', '267.4-254', '267.4-264', '267.4-285', '267.4-307', '267.4-310', '267.4-311', '267.4-313', '267.4-319', '267.4-322', '267.4-323', '267C-62', '267C-71', '267C-73', '267C-95', '267D-286', '267D-294', '267D-303', '267D-315', '267D-332', '267D-334', '267E-283', '267E-284', '267E-285', '269-138', '27-69', '27-70', '27-86', '273-43', '30-35', '30-38', '30-40', '30-41', '30-42', '31-15', '31-21', '32-52', '32-53', '33-88', '41-26', '41-29', '41-37', '43-76', '43-77', '43A-16', '43A-24', '43A-28', '47-97', '54-19', '63-128', '63-132', '63-135', '64-6', '66-10', '66-11', '66-12', '66-125', '66-153', '66-29', '67-14', '67-47', '67-48', '67-66', '67-67', '68-47', '68-76', '68-77', '69-113', '69-148', '69-165', '69-173', '69-179', '69-182', '69-183', '7-29', '70-85', '71-55', '8-91', '88-47', '90-146', '92-127', '95-71', '95-72', '95-73', '95-74', '95-75', '95-78', '96-117']"
  },
  {
    "Query": "find parcels with land_area between 3000 and 4000 sq ft",
    "Code": "import geopandas as gpd\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\n# Project to metric CRS for accurate analysis\nparcels_proj = parcels.to_crs(epsg=26986)\n# Filter parcels with land_area between 3000 and 4000 sq ft \nfiltered_parcels = parcels_proj[(parcels_proj['land_area'] >= 3000) & (parcels_proj['land_area'] <= 4000)]\n# Sort by parcel ID (ml)\nresult_ids = filtered_parcels['ml'].sort_values().tolist()\n# Print results\nprint(result_ids)",
    "Answer": "['10-30', '10-39', '100-18', '100-20', '100-22', '100-26', '100-37', '100-38', '100-39', '100-46', '100-87', '100-94', '101-116', '101-117', '101-123', '101-124', '101-127', '101-130', '101-136', '101-137', '101-141', '101-147', '101-186', '101-190', '101-191', '101-203', '101-208', '101-209', '101-31', '101-39', '101-49', '101-55', '101-57', '101-58', '101-62', '101-63', '102-100', '102-101', '102-102', '102-103', '102-104', '102-108', '102-109', '102-117', '102-118', '102-119', '102-130', '102-131', '102-137', '102-139', '102-140', '102-20', '102-25', '102-43', '102-90', '102-93', '102-94', '102-99', '103-117', '103-16', '103-36', '103-48', '103-49', '103-50', '103-75', '103-88', '103-97', '103-98', '104-110', '104-114', '104-123', '104-124', '104-127', '104-129', '104-146', '104-147', '104-151', '104-154', '104-18', '104-25', '104-3', '104-4', '104-45', '104-48', '104-81', '104-85', '104-86', '104-88', '105-101', '105-116', '105-123', '105-24', '105-27', '105-59', '105-83', '105-84', '105-92', '106-109', '106-128', '106-13', '106-14', '106-15', '106-16', '106-25', '106-26', '106-33', '106-42', '106-50', '106-51', '106-54', '106-95', '107-105', '107-49', '107-62', '107-91', '107-98', '108-16', '108-28', '108-29', '108-54', '108-55', '108-58', '108-60', '108-61', '108-62', '108-77', '109-1', '109-19', '109-20', '109-32', '109-33', '109-34', '109-35', '109-40', '109-47', '109-54', '109-60', '109-69', '109-71', '109-76', '109-81', '109-83', '109-90', '11-46', '110-100', '110-103', '110-104', '110-110', '110-123', '110-14', '110-23', '110-26', '110-42', '110-51', '110-53', '110-55', '110-66', '110-72', '110-88', '110-89', '110-90', '111-10', '111-16', '111-2', '111-3', '111-4', '111-5', '111-6', '111-7', '111-8', '111-9', '112-11', '112-122', '112-123', '112-126', '112-13', '112-14', '112-15', '112-19', '112-28', '112-32', '112-39', '112-40', '112-51', '112-52', '112-53', '112-54', '112-7', '112-75', '112-76', '112-77', '112-82', '112-83', '112-84', '112-85', '112-88', '112-91', '112-93', '112-94', '113-29', '113-30', '113-31', '113-33', '113-34', '113-41', '113-42', '113-43', '113-45', '113-46', '113-50', '113-56', '113-58', '113-60', '113-77', '114-148', '114-149', '114-28', '114-47', '114-48', '114-49', '114-50', '114-51', '114-80', '114-82', '114-86', '114A-101', '114A-102', '114A-105', '114A-107', '114A-109', '114A-110', '114A-111', '114A-112', '114A-120', '114A-121', '114A-16', '114A-19', '114A-20', '114A-21', '114A-22', '114A-23', '114A-24', '114A-54', '114A-58', '114A-60', '114A-61', '114A-64', '114A-76', '114A-77', '114A-78', '114A-79', '115-105', '115-14A', '115-24', '115-26', '115-27', '115-29', '115-30', '115-31', '115-40', '115-41', '115-49', '115-50', '115-51', '115-52', '115-53', '115-54', '115-56', '115-60', '115-77', '115-78', '115-79', '115-80', '115-82', '115-83', '116-18', '116-46', '116-80', '116-90', '117-24', '117-27', '117-28', '117-33', '117-46', '117-60', '117-79', '118-37', '118-38', '118-39', '118-6', '118-62', '118-68', '118-84', '118-85', '119-14', '119-15', '119-18', '119-21', '119-38', '119-47', '119-73', '119-74', '119-75', '119-76', '119-77', '119-85', '119-99', '120-15', '120-26', '120-28', '120-3', '120-7', '120-73', '120-74', '120-8', '120-9', '121-110', '121-111', '121-126', '121-129', '121-25', '121-26', '121-32', '121-40', '121-41', '121-43', '121-47', '121-65', '121-68', '121-69', '121-74', '121-76', '121-86', '121-87', '121-89', '121-90', '122-102', '122-103', '122-11', '122-113', '122-117', '122-118', '122-12', '122-135', '122-136', '122-137', '122-139', '122-140', '122-15', '122-156', '122-166', '122-169', '122-172', '122-174', '122-18', '122-197', '122-201', '122-29', '123-1', '123-13', '123-2', '123-3', '123-37', '123-4', '123-43', '123-44', '123-45', '123-47', '123-49', '123-5', '123-50', '123-51', '123-52', '123-53', '123-54', '123-6', '123-63', '123-65', '123-67', '123-7', '123-80', '123-83', '124-19', '124-20', '124-26', '124-3', '124-32', '124-33', '124-34', '124-61', '124-62', '124-69', '124-76', '124-79', '124-84', '124-89', '125-101', '125-107', '125-137', '125-18', '125-19', '125-20', '125-24', '125-33', '125-46', '125-48', '125-56', '125-59', '125-62', '125-74', '125-75', '125-77', '125-81', '125-96', '126-120', '126-122', '126-127', '126-128', '126-13', '126-140', '126-159', '126-26', '126-27', '126-3', '126-31', '126-32', '126-37', '126-38', '126-4', '126-7', '126-79', '127-10', '127-106', '127-107', '127-108', '127-110', '127-122', '127-123', '127-13', '127-138', '127-150', '127-153', '127-154', '127-168', '127-28', '127-36', '127-37', '127-42', '127-44', '127-47', '127-58', '127-68', '127-69', '127-70', '127-71', '127-73', '127-75', '127-78', '127-88', '127-98', '130-113', '130-127', '130-13', '130-137', '130-14', '130-6', '130-86', '130-87', '130-88', '131-41', '131-42', '131-43', '131-44', '131-45', '131-52', '132-109', '132-120', '132-14', '132-155', '132-24', '132-33', '132-37', '132-59', '132-61', '132-63', '132-73', '132-74', '132-75', '132-80', '133-12', '133-15', '134-13', '134-48', '135-100', '135-101', '135-57', '135-65', '135-67', '135-68', '135-8', '135-82', '135-83', '135-96', '136-33', '138-6', '138-7', '138-8', '139-19', '139-20', '139-48', '139-74', '139-76', '139-81', '139-89', '139-94', '139-96', '14-49', '140-107', '140-111', '140-112', '140-113', '140-114', '140-115', '140-116', '140-126', '140-133', '140-145', '140-150', '140-151', '140-152', '140-48', '140-49', '140-5', '140-50', '140-51', '140-52', '140-53', '140-54', '140-55', '140-56', '140-57', '140-82', '140-83', '140-97', '141-25', '141-26', '141-50', '141-6', '141-7', '141-72', '141-73', '141-79', '141-8', '141-81', '141-84', '141-86', '142-104', '142-109', '142-110', '142-131', '142-146', '142-36', '142-7', '142-72', '142-73', '142-76', '142-77', '142-8', '142-82', '142-9', '142-90', '142-95', '142-96', '143-6', '146A-109', '146A-141', '146A-142', '146A-143', '146A-144', '147-62', '149-100', '149-102', '149-103', '149-107', '149-111', '149-113', '149-120', '149-121', '149-144', '149-146', '149-148', '149-149', '149-80', '149-82', '149-83', '149-84', '149-85', '149-88', '149-89', '149-95', '150-104', '150-111', '150-112', '150-113', '150-116', '150-124', '150-127', '150-13', '150-135', '150-42', '150-44', '150-45', '150-46', '150-49', '150-50', '150-59', '150-65', '150-74', '150-79', '150-85', '150-86', '151-104', '151-106', '151-3', '151-44', '151-86', '152-9', '153-5', '154-103', '154-104', '154-105', '154-115', '154-119', '154-121', '154-126', '154-133', '154-32', '154-33', '154-34', '154-35', '154-37', '154-59', '154-60', '154-61', '154-64', '154-65', '154-66', '154-67', '154-68', '154-69', '154-73', '154-76', '154-77', '154-80', '154-81', '154-82', '154-83', '154-84', '154-85', '154-89', '154-92', '154-93', '155-17', '155-22', '155-41', '155-44', '156-106', '156-51', '156-94', '156-95', '156-96', '156-99', '157-52', '160-53', '160-66', '160-67', '161-1', '161-2', '161-92', '162-11', '162-17', '162-18', '162-35', '162-9', '166-10', '166-11', '166-27', '166-3', '166-35', '166-57', '166-75', '166-76', '166-78', '167-100', '167-102', '167-103', '167-20', '167-21', '167-23', '167-33', '167-55', '167-62', '167-63', '167-71', '167-74', '167-87', '168-40', '168-5', '168-6', '169-17', '169-18', '169-19', '17-19', '17-2', '17-22', '17-66', '17-67', '170-28', '172-49', '172-57', '172-98', '173-12', '173-13', '173-14', '173-27', '173-38', '173-56', '173-57', '173-79', '174-13', '174-18', '174-19', '174-30', '174-67', '174-78', '174-79', '174-8', '174-84', '174-9', '174-92', '174-94', '174-97', '174-99', '175-18', '175-32', '175-44', '175-46', '175-77', '175-83', '175-89', '176-24', '176-25', '176-83', '176-88', '176-91', '176-92', '177-52', '178-101', '178-102', '178-126', '178-13', '178-16', '178-59', '178-60', '178-63', '178-79', '179-12', '179-18', '179-3', '179-45', '179-46', '179-47', '179-48', '179-56', '179-59', '179-6', '179-81', '179-85', '179-89', '180-10', '180-16', '180-25', '180-35', '180-36', '180-51', '180-52', '180-60', '180-61', '180-9', '181-12', '181-13', '181-204', '181-206', '181-41', '181-42', '181-43', '181-45', '181-46', '181-66', '181-67', '181-68', '181-69', '181-70', '181-71', '181-72', '182-54', '182-67', '182-68', '182-69', '182-77', '182-80', '182-81', '182-90', '182-95', '183-106', '183-122', '183-25', '183-26', '183-33', '183-34', '183-35', '183-36', '183-39', '183-42', '183-43', '183-55', '183-56', '183-58', '183-70', '183-80', '183-81', '183-82', '183-95', '183-96', '184-128', '184-129', '184-130', '184-131', '184-132', '184-133', '184-14', '184-142', '184-143', '184-144', '184-161', '184-162', '184-163', '184-194', '184-195', '184-196', '184-3', '184-33', '184-34', '184-4', '184-46', '184-65', '184-67', '184-69', '184-79', '184-80', '185-12', '185-13', '185-14', '185-15', '185-20', '185-21', '185-33', '185-34', '185-5', '186-14', '186-15', '186-20', '186-21', '186-22', '186-23', '186-24', '186-25', '186-26', '186-27', '186-28', '186-29', '186-30', '186-31', '186-35', '186-36', '186-50', '186-60', '186-65', '186-69', '186-78', '186-8', '186-89', '186-9', '186-92', '186-98', '187-29', '187-30', '187-31', '187-32', '187-33', '187-34', '187-35', '187-36', '187-49', '187-52', '187-53', '187-54', '187-55', '187-56', '187-57', '187-65', '187-71', '188-127', '188-128', '188-129', '188-138', '188-139', '188-55', '188-56', '188-57', '188-58', '188-59', '188-60', '188-61', '188-62', '188-63', '188-64', '188-65', '188-66', '188-70', '188-71', '188-72', '188-73', '188-74', '188-75', '188-76', '188-77', '188-78', '188-79', '188-80', '189-21', '189-22', '189-23', '189-24', '189-25', '189-26', '189-27', '189-28', '189-29', '189-30', '189-31', '189-32', '189-36', '189-53', '189-64', '189-94', '19-15', '19-43', '190-117', '190-118', '190-127', '190-167', '190-171', '190-175', '190-184', '190-185', '190-189', '190-201', '190-204', '190-205', '190-216', '190-217', '190-218', '190-220', '190-221', '190-227', '190-238', '190-241', '190-249', '190-251', '190-256', '190-261', '190-262', '190-263', '190-282', '190-30', '191-107', '191-113', '191-117', '191-27', '191-79', '191-93', '191-94', '191-95', '192-106', '192-107', '192-119', '192-120', '192-124', '192-126', '192-131', '192-143', '192-145', '192-146', '192-149', '192-153', '192-158', '192-160', '192-169', '192-172', '192-173', '192-175', '192-50', '192-51', '192-52', '192-59', '192-62', '193-1', '193-100', '193-120', '193-136', '193-151', '193-152', '193-153', '193-154', '193-155', '193-160', '193-161', '193-171', '193-174', '193-176', '193-186', '193-188', '193-189', '193-190', '193-195', '193-196', '193-2', '193-206', '193-209', '193-214', '193-216', '193-217', '193-29', '193-3', '193-30', '193-31', '193-32', '193-33', '193-36', '193-4', '193-52', '193-98', '193-99', '194-17', '194-37', '194-57', '194-58', '194-62', '194-64', '194-65', '194-66', '194-69', '194-71', '195-101', '195-102', '195-119', '195-120', '195-129', '195-130', '195-132', '195-133', '195-134', '195-135', '195-137', '195-140', '195-145', '195-146', '195-147', '195-148', '195-150', '195-151', '195-34', '195-35', '195-36', '195-65', '195-66', '195-67', '195-70', '195-71', '195-74', '195-75', '195-76', '195-77', '195-78', '195-96', '196-100', '196-101', '196-106', '196-108', '196-115', '196-116', '196-123', '196-132', '196-135', '196-14', '196-147', '196-15', '196-150', '196-155', '196-156', '196-158', '196-161', '196-162', '196-50', '196-51', '196-52', '196-53', '196-54', '196-55', '196-56', '196-58', '196-74', '196-85', '196-86', '196-88', '196-89', '196-90', '196-91', '196-96', '196-97', '196-99', '198-19', '198-21', '198-22', '198-4', '198-44', '198-45', '198-47', '198-48', '198-49', '198-5', '198-58', '198-6', '198-7', '198-74', '198-87', '198-88', '198-89', '199-1', '199-108', '199-119', '199-13', '199-14', '199-15', '199-16', '199-17', '199-174', '199-18', '199-20', '199-22', '199-23', '199-24', '199-25', '199-26', '199-28', '199-29', '199-43', '199-44', '199-45', '199-46', '199-5', '20-12', '20-68', '20-70', '20-83', '20-93', '200-14', '200-15', '200-16', '200-2', '200-3', '200-35', '200-36', '200-37', '200-39', '200-4', '200-59', '200-60', '200-61', '200-63', '200-64', '200-65', '200-7', '200-8', '200-81', '200-82', '200-9', '201-10', '201-100', '201-103', '201-104', '201-123', '201-127', '201-128', '201-129', '201-138', '201-139', '201-3', '201-33', '201-34', '201-35', '201-36', '201-37', '201-39', '201-40', '201-71', '201-78', '201-84', '201-89', '201-90', '201-91', '201-92', '201-93', '201-94', '201-95', '201-96', '201-97', '201-98', '201-99', '201.5-48', '201.5-60', '201.5-61', '201.5-62', '201.5-63', '201.5-67', '201.5-68', '201.5-75', '201.5-80', '201.5-81', '201.5-82', '201.5-83', '202-105', '202-109', '202-134', '202-15', '202-16', '202-39', '202-40', '202-42', '202-43', '202-44', '202-46', '202-5', '202-51', '202-6', '202-64', '202-81', '202-82', '202-86', '203A-31', '203A-64', '203A-65', '204-121', '204-125', '204-127', '204-128', '204-129', '204-136', '204-137', '204-138', '204-139', '204-151', '204-33', '205-10', '205-11', '205-12', '205-13', '205-17', '205-25', '205-3', '205-32', '205-33', '205-34', '205-4', '205-44', '205-45', '205-46', '205-48', '205-5', '205-58', '205-59', '205-60', '205-61', '205-76', '205-77', '205-79', '205-80', '205-81', '205-87', '205-93', '206-1', '206-14', '206-23', '206-27', '206-33', '206-34', '206-37', '206-38', '206-51', '206-53', '206-54', '206-55', '206-56', '206-58', '206-60', '206-68', '206-69', '206-79', '206-80', '206-88', '207-16', '207-17', '207-18', '207-19', '208-10', '208-11', '208-8', '208-9', '209-34', '209-35', '209-55', '209-56', '209-57', '209-62', '209-66', '21-124', '21-41', '21-42', '21-78', '210-37', '210-38', '210-64', '210-69', '210-70', '210-74', '210-75', '210-76', '210-77', '210-79', '211-14', '211-51', '211-52', '214-12', '214-14', '214-15', '214-40', '214-51', '214-53', '214-56', '214-59', '214-60', '214-62', '215-47', '215-51', '215-60', '215-61', '215-64', '215-65', '215-9', '22-123', '22-142', '22-27', '22-59', '22-78', '220-102', '220-105', '220-122', '220-123', '220-132', '220-133', '220-141', '220-151', '220-168', '220-17', '220-183', '220-185', '220-186', '220-32', '220-77', '221-105', '221-113', '221-17', '221-19', '221-22', '221-27', '221-28', '221-29', '221-31', '221-37', '221-40', '221-41', '221-50', '221-54', '221-62', '221-63', '221-7', '221-76', '221-99', '223-54', '223-55', '223-56', '225-11', '225-27', '225-28', '225-58', '226-64', '227-18', '227-24', '228-10', '228-17', '228-18', '228-19', '228-20', '228-21', '228-22', '228-23', '228-24', '228-25', '228-26', '228-27', '228-31', '228-32', '228-33', '228-34', '228-44', '228-45', '228-53', '228-7', '228-8', '229-113', '229-114', '229-115', '229-116', '229-133', '229-134', '229-136', '229-137', '229-139', '229-140', '229-141', '229-143', '229-144', '229-149', '229-151', '229-157', '229-158', '229-30', '229-31', '229-32', '229-34', '229-35', '229-36', '229-37', '229-42', '229-43', '229-69', '229-79', '229-80', '229-81', '23-11', '23-136', '23-143', '23-154', '23-157', '23-23', '23-27', '23-28', '23-29', '23-60', '23-61', '23-67', '23-88', '230-111', '230-113', '230-114', '230-116', '230-130', '230-134', '230-138', '230-139', '230-144', '230-25', '230-29', '230-30', '230-34', '230-37', '230-72', '230-76', '230-79', '230-84', '230-85', '230-86', '230-89', '230-96', '230-97', '231-18', '231-23', '231-24', '232-14', '232-21', '232-22', '233-102', '233-103', '233-111', '233-112', '233-117', '233-118', '233-119', '233-120', '233-131', '233-132', '233-133', '233-134', '233-135', '233-136', '233-137', '233-138', '233-139', '233-140', '233-141', '233-142', '233-143', '233-144', '233-145', '233-164', '233-165', '233-176', '233-187', '233-192', '233-193', '233-200', '233-201', '233-207', '233-208', '233-215', '233-216', '233-57', '233-58', '233-59', '233-60', '233-61', '233-62', '233-68', '233-69', '233-76', '233-83', '233-84', '233-85', '233-91', '233-92', '233-93', '233-97', '234-101', '234-102', '234-103', '234-104', '234-110', '234-111', '234-112', '234-113', '234-117', '234-119', '234-120', '234-168', '234-169', '234-18', '234-198', '234-200', '234-201', '234-76', '234-77', '234-96', '234-97', '235-41', '235-43', '235-44', '235-58', '235-86', '235-87', '236-145', '236-41', '236-42', '236-68', '236-78', '236-79', '236-80', '236-81', '236-82', '236-83', '236-89', '236-90', '236-91', '237-32', '237-33', '237-34', '237-64', '237-69', '239-54', '24-10', '24-11', '24-132', '24-20', '24-41', '24-65', '24-69', '24-70', '24-73', '24-75', '24-89', '24-92', '242A-155', '246A-35', '246A-37', '246A-38', '246A-41', '246A-52', '246A-53', '246A-57', '247-138', '247-139', '247-68', '247-69', '247-71', '247-73', '247-74', '248-31', '248-39', '248-48', '248-53', '248-56', '248-57', '248-58', '248-59', '248-62', '248-63', '248-70', '248-71', '248-72', '248-76', '248-77', '248-78', '248-81', '248-83', '25-1', '25-117', '25-133', '25-147', '25-15', '25-20', '25-23', '25-37', '25-4', '25-5', '25-6', '25-62', '25-69', '25-73', '25-75', '25-87', '25-88', '25-89', '25-90', '251-242', '251-243', '252-146', '253-111', '253-112', '253-133', '253-134', '253-135', '253-136', '253-137', '253-138', '253-145', '253-27', '253-31', '253-34', '253-35', '253-36', '253-37', '253-41', '253-48', '253-49', '253-50', '253-51', '253-52', '253-53', '253-61', '253-89', '253-96', '253-97', '253-98', '253-99', '254-104', '254-17', '254-18', '254-3', '254-49', '254-50', '254-67', '254-70', '254-95', '255-101', '255-112', '255-33', '255-34', '255-35', '255-38', '255-44', '255-53', '255-54', '255-55', '255-56', '255-57', '255-59', '255-60', '255-61', '255-62', '255-63', '255-69', '255-70', '255-71', '255-78', '255-83', '255-86', '255-87', '255-88', '255-89', '255-92', '256-102', '256-104', '256-115', '256-31', '256-58', '256-62', '256-65', '256-77', '256-78', '256-79', '256-86', '256-87', '256-89', '256-90', '256-91', '257-26', '257-27', '257-44', '258-11', '258-21', '258-22', '258-23', '258-26', '258-27', '258-29', '258-36', '258-40', '258-41', '258-45', '258-47', '258-8', '259-11', '259-13', '259-14', '259-28', '259-29', '26-103', '26-118', '26-128', '26-129', '26-148', '26-161', '26-164', '26-171', '26-173', '26-2', '26-28', '26-4', '26-5', '26-78', '26-86', '26-89', '26-90', '26-91', '26-92', '26-93', '261-108', '261-109', '261-110', '261-111', '261-112', '261-117', '261-118', '261-121', '261-130', '261-146', '261-147', '261-156', '261-196', '261-65', '261-73', '262-104', '262-131', '262-132', '262-136', '262-138', '262-140', '262-142', '262-145', '262-148', '262-151', '262-20', '262-21', '262-23', '262-27', '262-28', '262-29', '262-30', '262-33', '262-34', '262-35', '262-37', '262-60', '262-61', '262-62', '262-63', '262-64', '262-67', '262-69', '262-70', '262-71', '262-72', '262-73', '262-78', '262-79', '262-80', '262-81', '262-82', '263-112', '263-115', '263-117', '263-118', '263-128', '263-4', '263-5', '263-6', '263-69', '263-72', '267A-152', '267A-170', '267A-195', '267A-204', '267A-241', '267A-255', '267A-264', '267B-129', '267B-13', '267B-132', '267B-143', '267B-145', '267B-15', '267B-158', '267B-161', '267B-175', '267B-177', '267B-18', '267B-180', '267B-181', '267B-182', '267B-19', '267B-22', '267B-23', '267B-5', '267B-50', '267B-6', '267D-257', '267E-287', '268B-34', '268B-7', '27-16', '27-17', '27-22', '27-23', '27-29', '27-51', '27-74', '271-31', '271-36', '271-37', '271-59', '272-27', '274-1J', '32-11', '33-18', '33-49', '33-82', '33-83', '34-144', '34-24', '34-29', '34-71', '34-72', '34-90', '35-70', '35-71', '35-72', '35-73', '36-112', '36-113', '36-134', '36-17', '36-172', '36-177', '36-180', '36-188', '36-20', '36-200', '36-216', '36-26', '36-268', '36-36', '36-39', '36-43', '36-44', '36-63', '36-71', '36-75', '36-98', '36-99', '37-1', '37-111', '37-112', '37-117', '37-120', '37-122', '37-14', '37-15', '37-39', '37-43', '37-58', '37-60', '37-65', '37-66', '37-67', '39-10', '39-11', '39-114', '39-115', '39-12', '39-122', '39-124', '39-127', '39-136', '39-138', '39-141', '39-142', '39-143', '39-144', '39-153', '39-154', '39-155', '39-156', '39-162', '39-163', '39-17', '39-21', '39-22', '39-23', '39-24', '39-25', '39-32', '39-33', '39-34', '39-4', '39-44', '39-61', '39-62', '39-95', '40-105', '40-107', '40-113', '40-114', '40-117', '40-140', '40-143', '40-144', '40-153', '40-166', '40-167', '40-177', '40-18', '40-182', '40-214', '40-221', '40-234', '40-24', '40-42', '40-47', '40-53', '40-84', '40-9', '42-57', '42-58', '42-92', '65-53', '65-54', '65-6', '65-7', '65-9', '66-43', '66-53', '70-36', '70-5', '74-11', '74-131', '74-2', '74-27', '74-31', '74-37', '74-38', '74-44', '74-45', '74-46', '74-47', '74-48', '74-6', '74-8', '74-9', '75-10', '75-108', '75-109', '75-113', '75-117', '75-123', '75-139', '75-145', '75-15', '75-156', '75-169', '75-41', '75-45', '75-61', '75-67', '75-7', '75-76', '75-87', '75-92', '75-95', '76-102', '76-105', '76-128', '76-18', '76-28', '76-29', '76-55', '77-10', '77-11', '77-24', '77-28', '77-30', '77-33', '77-54', '77-84', '77-9', '78-100', '78-12', '78-143', '78-149', '78-16', '78-22', '78-31', '78-32', '78-40', '78-45', '78-48', '78-49', '78-50', '78-57', '78-58', '78-6', '78-64', '78-68', '78-71', '78-74', '78-75', '78-78', '78-82', '78-86', '78-90', '78-91', '78-92', '78-94', '78-99', '79-100', '79-101', '79-105', '79-118', '79-123', '79-138', '79-14', '79-17', '79-2', '79-28', '79-29', '79-31', '79-35', '79-5', '79-58', '79-73', '79-76', '79-77', '79-78', '79-92', '79-93', '79-95', '80-10', '80-11', '80-12', '80-126', '80-16', '80-160', '80-164', '80-179', '80-2', '80-5', '80-53', '80-6', '80-60', '80-66', '80-69', '80-70', '80-71', '80-74', '80-8', '80-91', '80-93', '82-102', '82-22', '82-23', '82-24', '82-25', '82-26', '82-27', '82-28', '82-3', '82-34', '82-36', '82-37', '82-38', '82-39', '82-61', '82-62', '82-65', '82-93', '83-21', '83-4', '83-49', '83-50', '83-74', '83-90', '83-99', '84-25', '84-33', '84-41', '84-42', '84-44', '84-51', '84-56', '84-69', '84-75', '85-101', '85-11', '85-12', '85-14', '85-81', '85-83', '86-1', '86-103', '86-104', '86-106', '86-27', '86-32', '86-35', '86-38', '86-39', '86-42', '86-6', '86-69', '86-7', '86-72', '86-73', '86-8', '86-80', '86-89', '86-98', '87-110', '87-12', '87-140', '87-143', '87-2', '87-47', '87-48', '87-61', '87-74', '87-82', '87-86', '87-89', '88-17', '88-2', '88-29', '88-36', '89-15', '89-23', '89-26', '89-34', '89-37', '89-44', '89-5', '89-53', '89-58', '89-61', '89-63', '89-65', '89-66', '89-68', '89-69', '89-76', '89-85', '89-9', '89-90', '90-101', '90-106', '90-107', '90-109', '90-158', '90-159', '90-172', '90-173', '90-177', '90-181', '90-190', '90-191', '90-192', '90-98', '91-16', '91-184', '91-191', '91-192', '91-204', '91-35', '91-4', '91-52', '91-61', '91-63', '91-65', '91-68', '91-82', '91-83', '91-88', '91-91', '92-116', '92-58', '92-62', '92-69', '93-110', '93-118', '93-131', '93-22', '93-25', '93-26', '93-27', '93-35', '93-36', '93-40', '93-42', '93-98', '94-112', '94-138', '94-156', '94-17', '94-208', '94-226', '94-24', '94-6', '94-98', '95-2', '95-3', '96-100', '96-112', '96-113', '96-114', '96-122', '96-15', '96-153', '96-16', '96-25', '96-26', '96-31', '96-32', '96-34', '96-4', '96-51', '96-52', '96-53', '96-60', '96-89', '96-90', '96-92', '96-93', '96-94', '96-95', '96-99', '97-101', '97-105', '97-106', '97-107', '97-110', '97-112', '97-121', '97-127', '97-128', '97-131', '97-139', '97-48', '97-50', '97-54', '97-82', '98-12', '98-13', '98-14', '98-17', '98-22', '98-40', '98-41', '98-44', '98-45', '98-47', '98-48', '98-59', '98-62', '98-74', '98-91', '99-47', '99-49', '99-50', '99-60', '99-61', '99-62', '99-63', '99-72', '99-73', '99-74', '99-75']"
  },
  {
    "Query": "find large residential parcels (larger than 9000 sq ft)",
    "Code": "import geopandas as gpd\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\n# Project to metric CRS for accurate analysis\nparcels_proj = parcels.to_crs(epsg=26986)\n# Define residential use codes\nresidential_use_codes = [\n    '101', '1014', '102', '1028', '104', '109', '1094', '1095', '1098',\n    '121', '970', '942', '9420', '943', '9430', '946', '9460', '947',\n    '9470', '151', '152', '153', '840', '841', '3454'\n]\n# Filter for residential parcels\nresidential_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(residential_use_codes)].copy()\n# Filter large residential parcels (>9000 sq ft)\nlarge_residential = residential_parcels[residential_parcels['land_area'] > 9000].copy()\n# Sort by parcel ID (ml)\nresult_ids = large_residential['ml'].sort_values().tolist()\n# Print results\nprint(result_ids)",
    "Answer": "['101-52', '101-54', '102-2', '106-129', '112-102', '112-137', '112-138', '113-10', '113-2', '113-82', '115-108', '115-16', '116-120', '116-14', '116-62', '121-113', '131-65', '131-68', '131-70', '132-137', '132-152', '133-3', '134-1', '134-3', '134-44', '136-2', '136-34', '136-39', '137-2', '137-42', '139-88', '140-9', '142-18', '142-21', '143-11', '143-13', '143-17', '143-20', '143-4', '144-1', '145-10', '145-11', '145-14', '145-15', '145-28', '145-29', '145-36', '145-37', '145-38', '145-40', '145-42', '145-43', '145-9', '146-10', '146-11', '146-15', '146-20', '146-42', '146-48', '146-49', '146-54', '146-62', '146-7', '146-8', '146-81', '146-82', '146-9', '146-90', '146-91', '146A-110', '146A-115', '146A-129', '146A-130', '146A-28', '146A-37', '146A-63', '146A-67', '147-12', '147-24', '147-26', '147-29', '147-30', '147-31', '147-33', '147-35', '147-36', '147-38', '147-39', '147-41', '147-46', '147-50', '147-59', '147-61', '149-38', '153-34', '153-36', '153-85', '155-33', '155-43', '156-107', '156-37', '156-88', '157-20', '157-61', '157-62', '157-64', '157-66', '157-68', '157-69', '159-1', '160-30', '160-38', '160-60', '161-3', '161-58', '161-73', '161-76', '161-85', '161-93', '161-94', '162-61', '164-5', '167-11', '167-2', '167-28', '167-3', '167-6', '167-69', '167-96', '167-97', '168-47', '169-12', '169-14', '169-69', '169-94', '170-19', '170-35', '170-36', '172-16', '172-18', '172-19', '172-21', '172-24', '172-25', '172-26', '172-30', '172-37', '172-38', '172-50', '172-59', '172-67', '172-68', '172-69', '172-70', '172-71', '173-43', '173-53', '174-56', '175-86', '176-2', '176-27', '176-3', '176-4', '176-8', '177-16', '177-17', '177-18', '177-21', '177-4', '177-5', '177-8', '179-2', '180-66', '182-74', '183-123', '184-15', '190-258', '194-12', '194-18', '194-7', '195-94', '196-129', '196-21', '198-81', '199-37', '202-95', '203A-4', '206-46', '207-1', '207-26', '207-28', '207-43', '207-45', '207-50', '207-60', '207-64', '207-66', '207-67', '207-68', '207-7', '207-74', '208-3', '209-11', '209-27', '209-46', '209-51', '209-6', '209-60', '209-64', '209-69', '209-7', '209-70', '209-71', '209-9', '210-27', '210-33', '210-34', '210-35', '210-4', '210-40', '210-45', '210-46', '210-58', '210-6', '210-86', '210-9', '211-1', '211-21', '211-238', '211-240', '211-34', '211-36', '211-47', '211-53', '212-24', '212-29', '212-32', '212-35', '213-2A', '214-44', '215-18', '215-22', '215-24', '215-35', '215-41', '216-15', '216-21', '216-26', '216-29', '216-32', '216-33', '217-1', '217-12', '217-13', '217-18', '217-2', '217-20', '217-21', '217-24', '217-3', '217-4', '217-5', '218-11', '218-2', '218-26', '218-27', '218-28', '218-30', '218-39', '218-4', '218-46', '218-5', '218-55', '218-59', '218-6', '218-61', '218-8', '219-11', '219-12', '219-19', '219-31', '219-38', '219-39', '219-5', '220-107', '220-163', '220-184', '220-47', '220-54', '220-55', '220-56', '220-72', '220-73', '220-74', '221-114', '222-12', '222-14', '222-15', '222-16', '222-18', '222-19', '222-2', '222-20', '222-21', '222-22', '222-24', '222-25', '222-26', '222-28', '222-29', '222-3', '222-38', '222-4', '222-40', '222-46', '222-47', '222-48', '222-5', '223-1', '223-10', '223-11', '223-12', '223-14', '223-15', '223-16', '223-17', '223-19', '223-2', '223-20', '223-21', '223-25', '223-26', '223-27', '223-28', '223-29', '223-34', '223-38', '223-39', '223-43', '223-44', '223-47', '223-66', '223-67', '223-68', '223-9', '224-13', '224-18', '224-19', '224-35', '224-8', '225-49', '226-2', '226-3', '226-49', '226-5', '226-51', '226-57', '226-60', '226-61', '226-65', '227-103', '227-113', '227-34', '227-60', '227-69', '227-87', '227-88', '227-90', '227-94', '229-20', '230-148', '231-14', '231-2', '231-3', '231-33', '231-39', '231-43', '231-44', '231-45', '231-46', '231-47', '231-48', '231-5', '231-50', '231-51', '231-52', '231-6', '231-7', '231-9', '232-125', '232-129', '232-130', '232-57', '232-6', '232-64', '232-7', '232-84', '234-190', '235-10', '235-16', '235-24', '235-26', '235-27', '235-3', '235-30', '235-31', '235-33', '235-34', '235-35', '235-4', '235-5', '235-59', '235-65', '235-70', '235-74', '235-76', '235-80', '235-83', '235-84', '235-85', '236-10', '236-103', '236-107', '236-109', '236-11', '236-120', '236-132', '236-135', '236-136', '236-137', '236-139', '236-140', '236-143', '236-24', '236-25', '236-27', '236-3', '236-33', '236-34', '236-37', '236-4', '236-45', '236-5', '236-6', '236-7', '236-76', '236-77', '236-96', '236-97', '237-11', '237-15', '237-30', '237-36', '237-49', '237-50', '237-63', '237-73', '237-74', '237-75', '237-79', '238-15', '238-18', '238-26', '238-33', '238-35', '238-44', '238-45', '238-48', '238-50', '238-53', '238-54', '238-55', '238-57', '238-6', '238-60', '238-62', '238-63', '238-70', '238-71', '238-72', '238-77', '238-8', '238-81', '238-83', '238-84', '238-85', '238-9', '239-2', '239-26', '239-27', '239-28', '239-3', '239-60', '239-62', '239-64', '239-65', '239-67', '239-70', '239-8', '240-2', '240-27', '240-35', '240-36', '240-44', '240-48', '240-50', '240-51', '240-52', '240-9', '242A-100', '242A-105', '242A-107', '242A-109', '242A-110', '242A-111', '242A-112', '242A-113', '242A-115', '242A-116', '242A-120', '242A-127', '242A-131', '242A-138', '242A-148', '242A-149', '242A-157', '242A-158', '242A-159', '242A-160', '242A-162', '242A-59', '242A-73', '242A-75', '242B-49', '242B-52', '242B-53', '242B-54', '242B-999', '246-1019', '246-1021', '246-24', '246-26', '246-27', '246-29', '246-30', '246-9', '246A-46', '247-185', '247-191', '247-194', '247-72', '247-76', '247-80', '247-91', '247-92', '247-93', '249-136', '249-151', '249-153', '250-141', '250-16', '250-168', '250-170', '250-191', '250-212', '250-215', '250-216', '250-221', '250-223', '250-36', '250-39', '250-40', '251-119', '251-120', '251-134', '251-154', '251-189', '251-193', '251-219', '251-223', '251-226', '251-231', '251-236', '251-61', '253-128', '253-77', '254-8', '255-104', '255-17', '256-12', '256-92', '257-24', '258-6', '262-2', '266-1', '266-10', '266-12', '266-13', '266-14', '266-15', '266-16', '266-17', '266-18', '266-19', '266-2', '266-20', '266-21', '266-22', '266-23', '266-24', '266-25', '266-27', '266-28', '266-29', '266-3', '266-30', '266-35', '266-36', '266-37', '266-38', '266-4', '266-5', '266-6', '266-7', '266-8', '266-9', '267B-164', '267C-56', '267E-242', '271-77', '274-1H', '40-258', '43-63', '47-83', '47-88', '47-90', '48-129', '48-157', '48-159', '52A-21', '52A-22', '52A-31', '53-59', '53-60', '53-61', '53-63', '53-64', '53-71', '53-72', '54-10', '54-7', '55-16', '55-26', '55-9', '56-4', '56-7', '56-8', '57-169', '57-170', '57-173', '58-120', '58-158', '58-161', '58-162', '58-165', '58-74', '58-95', '59-37', '60-6', '61-14', '62-18', '62-41', '62-42', '63-1', '63-118', '65-14', '65-15', '65-48', '67-55', '68-56', '68-57', '68-58', '68-59', '69-110', '70-34', '70-98', '70-99', '71-57', '81-105', '81-106', '86-45', '89-50', '96-67']"
  },
  {
    "Query": "find parcels less than 2000 square feet",
    "Code": "import geopandas as gpd\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\n# Project to metric CRS for accurate analysis\nparcels_proj = parcels.to_crs(epsg=26986)\n# Filter for small parcels (<2000 sq ft)\nsmall_parcels = parcels_proj[parcels_proj['land_area'] < 2000]\n# Sort by parcel ID (ml)\nresult_ids = small_parcels['ml'].sort_values().tolist()\n# Print results\nprint(result_ids)",
    "Answer": "['100-10', '100-24', '100-9', '100-93', '101-113', '101-125', '101-131', '101-177', '101-178', '101-179', '101-180', '101-185', '101-187', '101-197', '101-201', '101-202', '101-23', '101-85', '102-50', '102-51', '102-52', '102-53', '102-54', '102-72', '103-103', '103-104', '103-105', '103-108', '103-114', '103-115', '103-35', '103-59', '103-60', '103-61', '103-62', '103-63', '103-65', '103-66', '103-79', '103-84', '103-94', '104-111', '104-134', '104-148', '104-150', '104-152', '104-153', '104-50', '104-51', '104-52', '104-53', '104-54', '104-55', '104-56', '104-57', '105-107', '105-112', '105-120', '105-124', '105-126', '105-128', '105-129', '105-130', '105-131', '105-132', '105-133', '105-134', '105-135', '105-136', '105-137', '105-138', '105-140', '105-16', '105-22', '105-29', '105-42', '105-43', '105-44', '105-45', '105-46', '105-58', '105-80', '106-121', '106-29', '106-30', '106-31', '106-32', '106-34', '106-35', '107-107', '107-108', '107-113', '107-58', '108-11', '108-17', '108-3', '108-70', '108-72', '108-74', '108-75', '108-8', '108-9', '108-92', '108-93', '108-96', '108-97', '109-10', '109-11', '109-12', '109-13', '109-14', '109-4', '109-5', '109-6', '109-7', '109-91', '109-93', '109-94', '109-95', '109-96', '110-114', '110-115', '110-116', '110-117', '110-118', '110-119', '110-120', '110-18', '110-22', '110-52', '110-75', '110-98', '111-46', '111-57', '111-58', '112-140', '112-143', '113-78', '114-139', '114-145', '114-146', '114-37', '114A-15', '116-107', '116-108', '116-109', '116-110', '116-111', '116-112', '117-104', '117-105', '117-25', '117-81', '117-84', '117-85', '117-86', '117-87', '117-88', '117-89', '117-90', '117-91', '117-92', '118-46', '118-47', '118-48', '118-49', '118-50', '118-57', '118-70', '119-103', '119-105', '119-106', '119-107', '119-111', '119-34', '120-104', '120-105', '120-106', '120-107', '120-109', '120-17', '120-2', '120-30', '120-85', '120-87', '120-88', '120-89', '120-90', '120-92', '120-93', '120-94', '120-95', '120-96', '121-105', '121-106', '121-107', '121-116', '121-117', '121-118', '121-119', '121-120', '121-124', '121-128', '121-29', '121-82', '121-83', '122-153', '122-180', '122-191', '122-192', '122-193', '122-200', '122-27', '123-16', '123-41', '123-42', '123-66', '123-71', '123-84', '123-85', '123-86', '123-89', '124-85', '124-87', '124-93', '125-10', '125-104', '125-114', '125-116', '125-117', '125-118', '125-119', '125-120', '125-121', '125-122', '125-125', '125-129', '125-130', '125-134', '125-39', '125-45', '125-72', '125-83', '125-87', '125-89', '126-10', '126-123', '126-124', '126-132', '126-133', '126-175', '126-4A', '126-6', '126-62', '126-63', '126-82', '126-84', '126-86', '127-1', '127-124', '127-128', '127-134', '127-139', '127-141', '127-144', '127-145', '127-146', '127-147', '127-148', '127-149', '127-155', '127-166', '127-170', '127-172', '127-52', '127-77', '127-82', '127-93', '130-100', '130-15', '130-4', '130-5', '130-7', '130-8', '130-84', '130-85', '130-99', '131-66', '132-116', '132-125', '132-133', '132-134', '132-141', '132-144', '132-145', '132-146', '132-149', '133-11', '133-21', '133-26', '133-27', '133-28', '133-29', '133-31', '133-45', '133-48', '133-54', '133-56', '133-60', '135-125', '135-126', '135-127', '135-128', '135-129', '135-130', '135-131', '135-132', '135-133', '135-134', '135-135', '135-137', '135-138', '135-139', '135-140', '135-141', '135-142', '135-148', '135-149', '135-150', '135-151', '135-152', '135-153', '135-155', '135-156', '135-29', '135-86', '135-87', '138-34', '138-35', '139-17', '139-28', '139-29', '139-30', '139-31', '139-33', '139-34', '139-45', '139-46', '139-47', '140-146', '140-147', '140-153', '140-76', '140-77', '140-78', '141-100', '141-101', '141-21', '141-23', '141-38', '141-39', '141-40', '141-41', '141-42', '141-43', '141-44', '141-45', '141-59', '141-97', '141-98', '141-99', '142-133', '142-134', '142-135', '142-136', '142-137', '142-138', '142-140', '142-141', '142-142', '142-143', '142-144', '142-145', '142-147', '142-148', '142-149', '142-150', '142-151', '142-154', '142-157', '142-158', '142-159', '142-160', '142-164', '142-165', '142-168', '142-24', '142-35', '146A-100', '149-112', '149-114', '149-117', '149-119', '149-127', '149-128', '149-129', '149-130', '149-131', '149-132', '149-133', '149-134', '149-139', '149-140', '149-141', '149-142', '149-143', '149-147', '149-39', '150-10', '150-11', '150-118', '150-119', '150-12', '150-130', '150-131', '150-138', '150-141', '150-142', '150-144', '150-32', '150-61', '150-9', '150-92', '150-93', '151-107', '151-108', '151-115', '151-121', '151-123', '151-125', '151-126', '151-16', '151-20', '151-24', '151-4', '151-6', '151-60', '151-62', '151-66', '151-72', '151-76', '151-77', '151-78', '151-81', '151-88', '151-93', '151-94', '151-97', '151-98', '151-99', '152-19', '153-22', '154-128', '155-34', '155-46', '157-53', '157-54', '157-63', '159-2', '160-76', '160-83', '160-84', '162-29', '162-65', '166-106', '166-37', '167-86', '167-98', '167-99', '168-51', '168-52', '168-53', '169-8', '17-10', '17-14', '17-15', '17-28', '17-31', '17-33', '17-34', '17-36', '17-52', '17-53', '17-54', '17-55', '17-61', '17-7', '17-76', '17-77', '17-79', '17-81', '17-85', '17-86', '17-87', '17-88', '172-102', '172-103', '172-104', '172-105', '172-106', '172-107', '173-82', '173-83', '173-84', '173-85', '173-87', '173-88', '173-89', '173-90', '173-96', '173-99', '174-10', '174-44', '174-63', '174-82', '174-98', '176-86', '177-80', '177-81', '177-82', '177-83', '177-84', '177-85', '178-110', '179-54', '179-68', '179-83', '18-53', '18-54', '180-73', '181-197', '181-198', '181-199', '181-200', '181-201', '181-202', '181-205', '182-14', '182-41', '182-42', '182-89', '182-93', '182-96', '183-1', '183-110', '183-111', '183-125', '183-126', '183-23', '183-37', '183-38', '183-7', '183-76', '183-77', '183-78', '183-9', '184-13', '184-155', '184-164', '184-165', '184-49', '184-56', '184-57', '184-58', '184-85', '184-86', '188-104', '188-105', '19-18', '19-25', '19-29', '19-34', '19-44', '19-45', '19-54', '19-55', '19-56', '19-57', '190-105', '190-136', '190-137', '190-138', '190-147', '190-148', '190-149', '190-156', '190-191', '190-196', '190-197', '190-198', '190-209', '190-239', '190-246', '190-25', '190-26', '190-265', '190-266', '190-273', '190-274', '190-277', '190-278', '190-279', '190-34', '190-35', '190-40', '190-41', '190-53', '191-29', '191-30', '191-31', '191-32', '191-33', '191-34', '191-35', '191-36', '191-37', '191-38', '191-39', '191-40', '191-7', '191-74', '191-75', '191-76', '191-77', '191-8', '191-80', '191-81', '191-83', '191-87', '191-88', '191-89', '192-101', '192-92', '192-97', '193-114', '193-121', '193-156', '193-157', '193-158', '193-162', '193-163', '193-165', '193-166', '193-167', '193-168', '193-178', '193-202', '193-204', '193-83', '193-84', '193-85', '193-86', '193-87', '193-88', '193-89', '193-90', '193-91', '195-167', '195-168', '196-107', '196-125', '199-114', '199-115', '199-116', '199-118', '199-122', '199-123', '199-124', '199-128', '199-129', '199-130', '199-131', '199-132', '199-133', '199-134', '199-135', '199-137', '199-138', '199-141', '199-142', '199-143', '199-144', '199-145', '199-146', '199-147', '199-148', '199-152', '199-167', '199-185', '199-187', '199-189', '199-190', '199-40', '199-84', '199-93', '199-94', '20-100', '20-101', '20-102', '20-105', '20-17', '20-18', '20-80', '20-90', '20-92', '20-94', '200-83', '201-125', '201-126', '201.5-78', '202-113', '202-114', '202-115', '202-116', '202-117', '202-119', '202-120', '202-121', '202-122', '202-123', '202-124', '202-125', '202-126', '202-127', '202-128', '202-129', '202-135', '203A-30', '203A-43', '203A-66', '203A-75', '205-75', '21-100', '21-107', '21-108', '21-109', '21-110', '21-112', '21-113', '21-12', '21-122', '21-123', '21-20', '21-21', '21-3', '21-33', '21-38', '21-4', '21-47', '21-48', '21-49', '21-50', '21-51', '21-52', '21-53', '21-54', '21-55', '21-56', '21-79', '21-80', '21-81', '21-82', '21-83', '215-57', '22-114', '22-117', '22-118', '22-122', '22-124', '22-138', '22-139', '22-141', '22-30', '22-32', '22-34', '22-43', '22-44', '22-45', '22-53', '22-67', '22-68', '22-69', '22-70', '22-71', '22-97', '220-130', '220-33', '221-100', '221-101', '221-107', '221-110', '221-111', '221-112', '221-38', '221-56', '221-64', '221-65', '221-66', '221-67', '221-83', '221-89', '225-59', '226-54', '226-55', '226-68', '227-73', '228-51', '229-128', '229-129', '23-10', '23-104', '23-108', '23-109', '23-112', '23-113', '23-114', '23-115', '23-127', '23-132', '23-134', '23-135', '23-144', '23-145', '23-146', '23-147', '23-148', '23-155', '23-156', '23-2', '23-22', '23-3', '23-34', '23-35', '23-51', '23-52', '23-53', '23-65', '23-72', '23-73', '23-74', '23-75', '23-76', '230-41', '232-114', '234-177', '236-146', '24-120', '24-121', '24-135', '24-136', '24-137', '24-138', '24-14', '24-15', '24-16', '24-17', '24-18', '24-19', '24-23', '24-27', '24-38', '24-39', '24-68', '24-71', '24-72', '24-80', '24-81', '24-82', '24-83', '24-84', '24-85', '24-86', '24-96', '24-98', '242A-143', '242A-144', '242A-153', '246A-51', '246A-56', '248-66', '25-10', '25-100', '25-106', '25-112', '25-113', '25-115', '25-118', '25-121', '25-122', '25-123', '25-127', '25-128', '25-129', '25-130', '25-131', '25-134', '25-135', '25-136', '25-140', '25-146', '25-148', '25-21', '25-22', '25-25', '25-26', '25-47', '25-48', '25-49', '25-50', '25-56', '25-64', '25-65', '25-66', '25-67', '25-74', '25-76', '251-257', '251-258', '251-259', '251-260', '251-261', '251-262', '251-263', '253-166', '254-78', '255-114', '255-74', '256-105', '26-10', '26-100', '26-101', '26-11', '26-110', '26-112', '26-12', '26-127', '26-134', '26-138', '26-139', '26-14', '26-142', '26-143', '26-145', '26-147', '26-15', '26-151', '26-153', '26-154', '26-155', '26-157', '26-158', '26-159', '26-16', '26-160', '26-165', '26-168', '26-169', '26-176', '26-177', '26-19', '26-24', '26-29', '26-34', '26-35', '26-36', '26-37', '26-38', '26-41', '26-42', '26-51', '26-52', '26-53', '26-54', '26-55', '26-66', '26-7', '26-72', '26-73', '26-74', '26-75', '26-8', '26-9', '26-95', '26-96', '26-97', '26-98', '26-99', '261-201', '261-202', '261-203', '262-146', '262-154', '262-156', '265A-45', '265F-18', '268A-33', '268B-35', '269-100', '269-115', '269-99', '27-100', '27-2', '27-27', '27-3', '27-84', '27-96', '271-11', '271-26', '271-3', '271-46', '271-54', '271-55', '271-56', '271-57', '271-73', '271-74', '271-75', '271-76', '272-20', '272-28', '274-1A', '274-1B', '274-1C', '274-1D', '274-1E', '32-10', '32-40', '32-41', '32-42', '32-43', '32-44', '33-100', '33-101', '33-16', '33-20', '33-22', '33-23', '33-24', '33-31', '33-46', '33-5', '33-52', '33-53', '33-54', '33-6', '33-63', '33-64', '33-7', '33-73', '33-75', '33-78', '33-79', '33-80', '33-81', '33-89', '33-90', '33-91', '33-92', '33-94', '33-95', '33-97', '34-11', '34-121', '34-122', '34-125', '34-13', '34-131', '34-132', '34-135', '34-14', '34-142', '34-143', '34-145', '34-146', '34-147', '34-148', '34-149', '34-15', '34-150', '34-16', '34-17', '34-18', '34-2', '34-23', '34-26', '34-28', '34-3', '34-30', '34-31', '34-33', '34-34', '34-35', '34-36', '34-37', '34-38', '34-39', '34-4', '34-40', '34-41', '34-42', '34-45', '34-46', '34-5', '34-51', '34-52', '34-7', '34-73', '34-76', '34-77', '34-79', '34-86', '34-87', '34-88', '34-95', '35-21', '35-23', '35-24', '35-25', '35-26', '35-27', '35-28', '35-29', '35-31', '35-37', '35-38', '35-43', '35-47', '35-48', '35-49', '35-50', '35-51', '35-52', '35-59', '35-60', '35-96', '35-97', '35-98', '35-99', '36-103', '36-108', '36-109', '36-11', '36-135', '36-136', '36-137', '36-147', '36-157', '36-167', '36-168', '36-175', '36-178', '36-182', '36-189', '36-19', '36-192', '36-193', '36-198', '36-199', '36-203', '36-204', '36-210', '36-22', '36-226', '36-236', '36-237', '36-243', '36-246', '36-255', '36-256', '36-269', '36-270', '36-28', '36-30', '36-31', '36-33', '36-35', '36-40', '36-49', '36-54', '36-65', '36-66', '36-67', '36-68', '36-70', '37-101', '37-103', '37-115', '37-17', '37-18', '37-20', '37-21', '37-57', '37-59', '37-79', '39-101', '39-102', '39-112', '39-166', '39-167', '39-45', '39-48', '39-97', '40-132', '40-133', '40-136', '40-137', '40-138', '40-146', '40-152', '40-163', '40-179', '40-180', '40-183', '40-184', '40-193', '40-20', '40-205', '40-209', '40-210', '40-218', '40-219', '40-223', '40-251', '40-252', '40-255', '40-257', '40-45', '40-58', '40-59', '40-60', '40-61', '40-62', '40-63', '40-66', '40-67', '40-68', '40-69', '40-70', '40-71', '40-97', '40-98', '41-34', '42-18', '42-19', '42-21', '42-22', '42-23', '42-93', '42-94', '42-95', '48-160', '59-41', '66-133', '66-134', '67-12', '67-59', '69-162', '74-12', '74-129', '74-133', '74-137', '75-127', '75-147', '75-153', '75-155', '75-161', '75-162', '75-164', '75-165', '75-171', '75-29', '75-46', '75-62', '75-63', '75-64', '75-83', '76-1', '76-113', '76-124', '76-125', '76-129', '76-132', '76-53', '76-78', '76-88', '76-91', '76-92', '76-93', '77-12', '77-13', '77-17', '77-55', '77-56', '77-79', '77-81', '77-82', '77-88', '77-89', '77-90', '77-93', '78-109', '78-11', '78-112', '78-121', '78-122', '78-123', '78-133', '78-140', '78-141', '78-150', '78-20', '78-23', '78-246', '78-247', '78-248', '79-114', '79-124', '79-125', '79-126', '79-127', '79-128', '79-129', '79-130', '79-136', '79-19', '79-20', '79-21', '79-37', '79-38', '79-74', '79-75', '79-8', '79-97', '79-98', '80-100', '80-125', '80-132', '80-162', '80-163', '80-176', '80-32', '80-46', '80-63', '80-65', '80-97', '80-98', '80-99', '81-109', '81-15', '81-25', '82-100', '82-101', '82-11', '82-12', '82-2', '82-20', '82-21', '82-30', '82-43', '82-70', '82-79', '82-80', '82-88', '82-90', '82-91', '82-94', '82-95', '82-99', '83-28', '83-3', '83-37', '83-38', '83-39', '83-40', '83-41', '83-42', '83-43', '83-57', '83-59', '83-77', '83-78', '83-8', '83-82', '83-83', '83-93', '83-94', '83-95', '83-96', '84-106', '84-22', '84-23', '84-24', '84-29', '84-30', '84-39', '84-55', '84-58', '84-59', '84-60', '84-68', '84-86', '84-89', '84-90', '84-93', '84-95', '84-96', '85-100', '85-23', '85-25', '85-26', '85-27', '85-42', '85-52', '85-7', '85-78', '85-79', '85-80', '85-82', '85-84', '85-85', '85-86', '85-87', '85-93', '85-98', '86-108', '86-109', '86-40', '86-55', '86-65', '86-70', '86-99', '87-129', '87-130', '87-132', '87-133', '87-144', '87-30', '87-39', '87-41', '87-42', '87-45', '87-54', '87-55', '87-60', '88-18', '88-21', '88-22', '88-42', '88-56', '88-64', '88-65', '88-70', '89-14', '89-6', '89-7', '89-71', '89-78', '89-79', '89-94', '89-97', '89-98', '90-125', '90-148', '90-149', '90-150', '90-151', '90-152', '90-153', '90-154', '90-165', '90-188', '90-189', '90-52', '90-74', '91-112', '91-122', '91-14', '91-181', '91-76', '91-93', '92-122', '92-95', '92-96', '93-101', '93-104', '93-105', '93-108', '93-109', '93-124', '93-127', '93-129', '93-130', '93-136', '93-137', '93-15', '93-16', '93-23', '93-3', '93-4', '93-47', '93-48', '93-49', '93-50', '93-51', '93-52', '93-53', '93-54', '93-55', '93-56', '93-7', '93-71', '93-72', '93-8', '93-89', '94-11', '94-131', '94-135', '94-189', '94-190', '94-191', '94-192', '94-193', '94-194', '94-195', '94-196', '94-200', '94-202', '94-203', '94-204', '94-205', '94-206', '94-207', '94-209', '94-212', '94-213', '94-214', '94-215', '94-225', '94-4', '94-41', '94-8', '94-89', '94-9', '94-90', '94-99', '96-130', '96-131', '96-132', '96-137', '96-138', '96-139', '96-140', '96-141', '96-142', '96-143', '96-144', '96-145', '96-146', '96-56', '96-69', '96-71', '96-77', '96-81', '97-111', '97-115', '97-116', '97-120', '97-133', '97-142', '97-143', '97-44', '97-45', '97-46', '97-53', '97-98', '97-99', '98-56', '98-63', '98-75']"
  },
  {
    "Query": "find retail parcels between 2500 and 4500 square feet",
    "Code": "import geopandas as gpd\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\n# Define retail use codes\nretail_use_codes = ['323', '324', '325', '326', '327', '330']\n# Filter for retail parcels\nretail_parcels = parcels[parcels['use_code'].astype(str).isin(retail_use_codes)].copy()\n# Filter by size\nsize_filtered_parcels = retail_parcels[\n    (retail_parcels['land_area'] >= 2500) & (retail_parcels['land_area'] <= 4500)\n].copy()\n# Sort by ml (parcel ID)\nresult_parcels = size_filtered_parcels.sort_values('ml')\n# Output results\nresult_ids = result_parcels['ml'].tolist()\nprint(result_ids)",
    "Answer": "['106-109', '108-54', '114A-120', '122-12', '126-27', '133-12', '139-83', '150-114', '154-89', '160-63', '160-66', '162-18', '162-19', '173-65', '174-30', '174-33', '174-73', '178-79', '182-90', '189-4', '196-123', '20-83', '228-33', '229-131', '230-116', '230-97', '233-175', '234-193', '252-158', '255-21', '261-112', '261-6', '265A-35', '265A-46', '74-6', '74-8', '75-128', '79-22', '82-31', '83-15', '83-90', '83-98', '83-99', '91-191', '91-52', '93-76']"
  },
  {
    "Query": "find commercial parcels (use_code starting with '3') larger than 5000 sq ft",
    "Code": "import geopandas as gpd\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\n# Define projected CRS for Cambridge, MA\ncambridge_crs = 'EPSG:26986'\n# Convert to projected CRS\nparcels_proj = parcels.to_crs(cambridge_crs)\n# Filter for commercial use codes (starting with '3')\ncommercial_parcels = parcels_proj[parcels_proj['use_code'].astype(str).str.startswith('3')]\n# Filter for parcels larger than 5000 sq ft\nlarge_commercial_parcels = commercial_parcels[commercial_parcels['land_area'] > 5000]\n# Sort by parcel ID (ml)\nresult_parcels = large_commercial_parcels.sort_values('ml')\n# Convert back to original CRS\nresult_parcels = result_parcels.to_crs(parcels.crs)\n# Output results\nresult_ids = result_parcels['ml'].tolist()\nprint(result_ids)",
    "Answer": "['10-31', '10-38', '100-62', '100-68', '100-86', '105-53', '105-67', '105-68', '105-77', '105-81', '105-82', '105-89', '105-93', '106-117', '106-123', '106-124', '106-60', '107-117', '107-135', '107-136', '107-137', '107-8', '107-9', '108-80', '109-22', '109-50', '109-51', '11-40', '110-16', '110-63', '110-91', '111-43', '114A-66', '116-100', '116-117', '116-12', '116-13', '116-43', '117-1', '117-29', '117-56', '118-34', '118-67', '119-5', '119-51', '119-89', '119-90', '119-93', '119-95', '12-19', '120-48', '121-13', '121-2', '121-94', '125-73', '125-80', '128-63', '128-70', '128-72', '129-11', '129-55', '13-16', '13-23', '133-23', '133-33', '133-36', '133-49', '133-51', '134-33', '134-59', '134-7', '136-15', '137-13', '14-26', '14-36', '14-47', '14-54', '14-55', '14-58', '140-148', '140-157', '141-80', '142-43', '142-44', '15-3', '15-30', '15-31', '152-17', '152-25', '152-52', '154-101', '154-97', '154-98', '155-42', '156-25', '156-55', '156-60', '157-26', '16-11', '16-23', '160-11', '160-14', '160-48', '160-57', '160-58', '160-59', '160-64', '160-69', '160-71', '160-72', '160-85', '162-26', '162-36', '162-54', '162-66', '162-67', '162-68', '165-34', '165-53', '165-55', '165-57', '165-60', '166-13', '166-24', '166-31', '168-13', '168-20', '168-21', '168-22', '168-25', '168-33', '168-36', '168-41', '168-48', '168-59', '168-60', '168-64', '169-100', '169-102', '169-42', '169-46', '169-47', '169-50', '169-82', '169-84', '169-86', '169-93', '169-98', '169-99', '17-74', '17-84', '170-39', '172-29', '174-25', '174-26', '174-27', '174-36', '174-37', '175-37', '175-68', '175-75', '175-84', '176-15', '176-64', '177-34', '177-71', '177-79', '178-1', '178-106', '178-117', '178-118', '178-133', '178-21', '178-43', '179-42', '179-75', '179-87', '18-64', '18-65', '18-74', '18-75', '18-76', '180-57', '181-65', '181-80', '181-88', '182-8', '182-84', '182-88', '182-98', '183-100', '183-119', '183-97', '184-159', '184-168', '184-191', '184-193', '184-31', '186-85', '186-96', '189-57', '189-72', '189-88', '19-10', '19-23', '190-33', '191-112', '191-65', '191-85', '192-121', '192-156', '192-177', '192-39', '192-73', '192-75', '194-68', '195-59', '196-154', '198-28', '199-30', '199-31', '199-67', '199-90', '1A-105', '1A-172', '1A-189', '1A-190', '1A-192', '1A-200', '1A-201', '1A-207', '1A-209', '1A-211', '1A-212', '1A-214', '1A-215', '1A-70', '20-103', '20-104', '20-31', '20-75', '20-82', '200-22', '200-91', '203A-77', '203B-52', '21-118', '21-120', '21-121', '21-16', '216-7', '219-37', '22-109', '226-46', '226-67', '229-117', '229-135', '23-149', '23-90', '230-71', '233-89', '234-178', '236-148', '236-84', '236-95', '24-133', '24-139', '248-82', '251-221', '251-255', '251-9', '252-114', '252-147', '252-160', '252-172', '252A-155', '252A-157', '254-82', '254-86', '260-32', '260-46', '260-73', '260-74', '260-76', '261-77', '261-85', '262-116', '265A-29', '265A-31', '265A-39', '265A-40', '265A-43', '265A-7', '265B-26', '265B-28', '265B-57', '265B-59', '265B-61', '265C-25', '265D-53', '266-40', '267.1-279', '267.1-282', '267.2-261', '267.2-264', '267.2-267', '267.2-270', '267.3-252', '267.3-253', '267.3-254', '267.3-278', '267.4-209', '267.4-247', '267.4-284', '267.4-288', '267.4-295', '267.4-296', '267.4-305', '267.4-312', '267C-70', '267C-91', '267D-256', '267D-259', '267D-282', '267D-285', '267D-293', '267D-299', '267D-300', '267D-305', '267D-307', '267D-310', '267D-311', '267D-313', '267D-316', '267D-319', '267D-325', '267D-329', '267D-333', '267E-17', '267E-234', '267E-244', '267E-279', '267E-280', '267E-282', '267E-290', '267E-291', '267E-292', '267F-274', '267F-279', '267F-281', '267F-283', '267F-291', '267F-293', '267F-295', '267F-296', '267F-301', '267F-391', '267F-393', '268B-15', '268B-8', '268C-30', '268C-32', '268C-35', '27-82', '271-44', '273-2', '273-20', '273-29', '273-35', '273-40', '273-51', '28-23', '28-31', '28-43', '29-50', '31-20', '34-8', '35-36', '35-87', '35-88', '35-89', '36-164', '36-247', '37-128', '39-173', '39-174', '39-179', '39-88', '40-197', '41-28', '41-36', '41-38', '42-33', '42-70', '42-86', '42-87', '42-91', '42-97', '42-99', '43-70', '43-71', '43-73', '43-78', '43A-19', '43A-21', '44-100', '44-104', '44-105', '44-106', '44-95', '44-99', '46-12', '47-94', '48-158', '53-54', '54-16', '54-25', '55-18', '62-40', '63-131', '63-134', '65-47', '66-73', '66-82', '66-99', '67-56', '67-61', '67-65', '68-19', '68-50', '68-60', '68-75', '69-159', '69-161', '69-62', '7-115', '7-31', '7-34', '7-35', '7-37', '70-12', '70-22', '70-74', '70-86', '70-88', '70-90', '70-91', '70-92', '74-1', '75-130', '75-170', '77-41', '8-70', '8-75', '8-76', '8-88', '80-142', '80-175', '81-100', '81-103', '81-16', '81-21', '81-3', '81-50', '81-99', '82-57', '83-1', '83-13', '83-80', '83-92', '84-1', '84-100', '84-101', '84-12', '84-85', '84-91', '84-97', '84-99', '85-13', '85-66', '85-76', '87-109', '87-153', '87-19', '88-45', '88-48', '88-53', '9-31', '9-41', '9-61', '90-13', '90-133', '90-14', '90-155', '90-161', '90-162', '90-169', '90-170', '90-18', '90-184', '90-185', '90-193', '90-20', '90-55', '90-70', '91-118', '91-119', '91-195', '91-200', '91-208', '91-7', '91-70', '91-81', '91-87', '91-98', '92-125', '92-88', '93-73', '93-75', '93-78', '93-80', '93-99', '94-7', '95-60', '95-76', '95-77', '95-79', '96-109', '96-110', '96-124', '96-98']"
  },
  {
    "Query": "find large office parcels (use_code starting with '34') larger than 6000 sq ft",
    "Code": "import geopandas as gpd\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\n# Define large office use codes\nlarge_office_use_codes = ['340', '341', '343', '345', '346', '347', '348', '349']\n# Filter for large office parcels larger than 6000 sq ft\nlarge_office_parcels = parcels[\n    (parcels['use_code'].astype(str).str.startswith('34')) &\n    (parcels['land_area'] > 6000)\n].copy()\n# Sort by parcel ID (ml)\nresult_ids = large_office_parcels['ml'].tolist()\nresult_ids.sort()\n# Print results\nprint(result_ids)",
    "Answer": "['10-31', '10-38', '105-77', '105-81', '105-89', '106-123', '107-135', '107-136', '109-22', '109-51', '11-40', '110-16', '114A-66', '116-117', '117-29', '118-34', '119-95', '12-19', '121-13', '121-2', '121-94', '128-70', '129-11', '13-16', '13-23', '133-23', '133-33', '133-51', '134-59', '14-26', '14-36', '14-47', '14-58', '140-157', '15-3', '15-30', '15-31', '152-52', '16-23', '160-11', '160-14', '160-48', '160-57', '160-59', '160-69', '162-36', '162-67', '165-53', '165-55', '165-57', '168-13', '168-21', '168-22', '168-25', '168-33', '168-36', '168-41', '168-59', '168-60', '168-64', '169-102', '169-42', '169-50', '169-84', '169-93', '169-98', '169-99', '17-74', '17-84', '172-29', '174-25', '174-26', '175-68', '178-1', '178-106', '178-117', '178-133', '179-42', '18-74', '181-65', '181-88', '182-84', '182-98', '183-119', '183-97', '184-168', '189-57', '19-23', '190-33', '191-112', '192-39', '1A-105', '1A-172', '1A-190', '1A-200', '1A-201', '1A-209', '1A-70', '20-31', '203B-52', '21-120', '216-7', '226-67', '23-149', '23-90', '236-148', '24-133', '251-255', '252-160', '254-86', '261-77', '265A-29', '265A-31', '265B-59', '265D-53', '267.2-267', '267.3-253', '267.4-288', '267.4-305', '267C-70', '267D-282', '267D-285', '267D-299', '267D-300', '267D-305', '267D-310', '267D-311', '267D-316', '267D-319', '267D-329', '267E-279', '267E-280', '267E-282', '267F-274', '267F-279', '267F-281', '267F-283', '267F-293', '267F-296', '267F-301', '267F-391', '268C-32', '268C-35', '27-82', '273-29', '273-40', '273-51', '28-23', '28-31', '29-50', '31-20', '35-89', '39-173', '39-88', '41-36', '41-38', '42-70', '42-86', '42-87', '42-97', '43-70', '43-73', '43-78', '43A-21', '44-100', '44-104', '44-105', '44-99', '46-12', '47-94', '54-25', '55-18', '68-50', '69-159', '70-22', '70-74', '70-86', '8-75', '8-76', '80-175', '81-103', '83-1', '83-92', '84-1', '84-97', '85-76', '87-153', '88-53', '9-41', '90-13', '90-133', '90-14', '90-161', '90-169', '90-170', '90-20', '91-118', '91-208', '91-87', '93-73', '93-75', '93-99', '95-76', '95-79', '96-109', '96-124', '96-98']"
  },
  {
    "Query": "find mixed-use parcels that include residential units, preferably in neighborhoods with a strong sense of community.",
    "Code": "import geopandas as gpd\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\n# Define mixed-use codes that include residential units\nmixed_use_codes = ['323', '324', '325', '326', '327', '330', '332', '334', '340', '341', '343', '345', '346', '353']\n# Filter for mixed-use parcels\nmixed_use_parcels = parcels[parcels['use_code'].astype(str).isin(mixed_use_codes)].copy()\n# Set CRS for accurate distance measurement\nmixed_use_parcels = mixed_use_parcels.to_crs(epsg=26986)\n# Define community-oriented business types\ncommunity_business_types = ['restaurant', 'cafe', 'grocery', 'bakery', 'pharmacy', 'retail']\n# Filter POI for community-oriented businesses\ncommunity_poi = poi[poi['business_type'].isin(community_business_types)].copy()\n# Function to calculate community score\ndef calculate_community_score(parcel_geom, poi_geoms, buffer_distance=200):\n    buffered_geom = parcel_geom.buffer(buffer_distance)\n    # Count community POI within buffer\n    count = sum(1 for geom in poi_geoms if geom is not None and buffered_geom.contains(geom))\n    return count\n# Get POI geometries\ncommunity_poi_geoms = community_poi['geometry'].tolist()\n# Calculate community score for each parcel\nmixed_use_parcels['community_score'] = mixed_use_parcels.geometry.apply(\n    lambda geom: calculate_community_score(geom, community_poi_geoms)\n)\n# Sort by community score (higher is better)\nresult_parcels = mixed_use_parcels.sort_values('community_score', ascending=False)\n# Convert back to original CRS\nresult_parcels = result_parcels.to_crs(parcels.crs)\n# Get parcel IDs\nresult_ids = result_parcels['ml'].tolist()\n# Print results\nprint(f\"Found {len(result_parcels)} mixed-use parcels with residential units\")\nprint(f\"Parcel IDs (sorted by community score): {result_ids}\")",
    "Answer": "['1A-70', '168-64', '108-80', '83-80', '265A-31', '262-116', '196-153', '24-133', '41-36', '46-12', '1A-209', '1A-201', '168-41', '230-71', '128-72', '121-2', '169-68', '84-101', '85-66', '267D-299', '189-88', '134-33', '160-71', '268C-32', '129-55', '133-12', '166-106', '268B-8', '117-56', '23-146', '169-46', '252-158', '178-118', '228-33', '174-33', '267F-301', '267D-305', '84-97', '156-60', '27-34', '68-19', '162-68', '23-149', '90-127', '93-80', '199-31', '42-13', '35-34', '116-117', '11-40', '133-51', '36-137', '254-78', '184-191', '160-11', '169-42', '7-37', '122-12', '28-23', '175-37', '84-12', '100-62', '44-99', '21-121', '14-58', '169-67', '176-64', '181-80', '83-92', '150-114', '17-84', '83-98', '109-50', '183-119', '84-85', '69-161', '261-186', '133-52', '43-73', '120-74', '20-31', '234-193', '118-34', '80-51', '273-40', '133-27', '162-17', '118-1', '181-88', '90-20', '121-13', '265A-46', '96-110', '265A-40', '192-74', '169-98', '17-10', '261-77', '162-19', '160-77', '154-101', '77-41', '44-100', '254-82', '236-84', '83-1', '68-50', '159-2', '82-31', '39-88', '162-54', '41-38', '108-54', '90-52', '81-100', '271-32', '21-124', '110-91', '133-49', '191-85', '119-95', '82-57', '107-117', '15-31', '8-88', '83-15', '125-73', '91-191', '168-13', '169-7', '17-74', '267.4-305', '260-76', '125-80', '133-48', '107-136', '160-84', '229-117', '267D-329', '16-11', '162-64', '178-133', '129-11', '265C-25', '106-123', '233-175', '133-20', '162-18', '91-87', '182-88', '93-99', '267F-283', '47-94', '229-131', '14-47', '178-117', '230-41', '168-25', '190-33', '169-50', '265B-61', '96-124', '14-26', '70-74', '42-70', '1A-189', '168-22', '21-120', '85-76', '8-75', '236-148', '182-90', '133-14', '93-79', '18-64', '83-7', '152-25', '166-33', '102-25', '234-178', '196-123', '20-92', '267D-319', '160-63', '174-73', '118-79', '169-93', '93-72', '186-14', '81-103', '90-185', '254-86', '42-97', '114A-120', '134-59', '133-30', '268B-15', '191-65', '87-153', '200-22', '105-89', '105-77', '169-102', '267D-325', '267D-311', '233-147', '105-53', '1A-200', '226-46', '21-115', '189-4', '43-70', '152-52', '105-74', '19-23', '154-64', '70-22', '267E-279', '169-47', '110-90', '184-193', '260-46', '172-29', '133-33', '91-64', '192-177', '20-103', '195-59', '179-87', '156-55', '156-25', '267E-282', '174-27', '273-29', '191-112', '160-85', '179-42', '139-83', '70-86', '179-75', '96-152', '160-48', '39-173', '169-81', '178-43', '1A-105', '265D-53', '20-82', '106-124', '200-79', '267F-281', '168-60', '74-8', '160-57', '13-23', '162-67', '165-57', '105-58', '154-65', '169-99', '28-31', '162-65', '86-84', '90-161', '267E-234', '90-125', '43A-21', '93-74', '265A-7', '166-52', '248-82', '92-88', '178-91', '229-135', '90-133', '168-21', '96-98', '260-32', '154-89', '42-81', '13-16', '230-42', '55-18', '84-67', '166-13', '184-159', '192-75', '228-55', '10-38', '180-57', '42-87', '242B-998', '91-208', '75-44', '165-53', '184-109', '236-146', '110-63', '90-155', '83-90', '107-9', '74-1', '175-68', '119-90', '184-155', '9-41', '230-116', '128-63', '97-111', '162-73', '23-90', '267D-259', '117-1', '265A-35', '178-1', '268C-35', '192-121', '169-82', '182-98', '267F-391', '254-76', '184-168', '69-162', '84-91', '90-170', '181-65', '91-118', '183-100', '182-8', '157-26', '154-111', '252-172', '229-150', '81-50', '236-95', '178-79', '15-3', '34-8', '166-37', '160-14', '273-51', '251-221', '273-35', '160-59', '168-36', '186-96', '40-153', '44-104', '166-77', '20-75', '18-73', '18-74', '23-156', '128-70', '203B-52', '95-76', '140-148', '120-17', '174-37', '252-147', '110-21', '102-46', '1A-190', '165-55', '70-91', '160-64', '175-84', '168-59', '107-135', '1A-211', '196-154', '110-18', '1A-172', '34-116', '80-172', '182-84', '74-6', '265B-28', '116-94', '105-81', '267D-282', '162-29', '267.4-288', '199-90', '114A-66', '90-14', '216-7', '251-9', '80-175', '80-3', '261-6', '109-51', '192-73', '226-67', '267F-293', '252-160', '15-30', '183-97', '42-94', '160-58', '175-75', '267.2-267', '186-85', '267F-279', '182-89', '233-89', '110-16', '36-248', '106-109', '267E-280', '100-86', '12-19', '109-22', '43-78', '21-16', '160-67', '261-7', '91-52', '174-30', '120-48', '260-74', '168-20', '166-24', '79-22', '20-83', '273-2', '95-79', '168-33', '199-67', '160-69', '10-39', '255-21', '90-70', '27-82', '162-36', '184-31', '91-81', '267.3-253', '133-28', '267F-296', '116-100', '199-30', '84-1', '154-97', '119-93', '160-66', '265A-29', '93-48', '88-53', '18-65', '36-189', '126-27', '267D-300', '136-15', '19-10', '252-114', '173-65', '175-77', '93-78', '110-55', '42-91', '141-80', '176-15', '267C-70', '106-117', '70-92', '8-76', '121-94', '42-99', '261-112', '44-105', '265B-59', '116-12', '189-72', '93-75', '178-106', '174-36', '189-57', '93-76', '16-23', '230-97', '54-25', '75-128', '18-76', '174-31', '14-36', '94-6', '91-63', '267D-316', '31-20', '273-20', '29-50', '10-31', '90-162', '117-25', '166-35', '96-109', '93-73', '192-39', '162-26', '168-49', '88-48', '133-23', '160-72', '260-73', '160-76', '154-73', '133-15', '117-29', '105-82', '174-26', '231-27', '90-169', '168-48', '69-159', '90-13', '42-86', '267F-274', '105-68', '105-123', '169-86', '160-83', '155-42', '267D-310', '267D-285', '83-99', '265B-26', '169-84', '1A-192']"
  },
  {
    "Query": "find commercial parcels zoned for office use AND within 800 meters of a major hospital",
    "Code": "import geopandas as gpd\nimport pandas as pd\nfrom shapely.geometry import Point\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\n# Define projected CRS for Cambridge, MA\ncambridge_crs = 26986\n# Project to accurate CRS\nparcels_proj = parcels.to_crs(cambridge_crs)\npoi_proj = poi.to_crs(cambridge_crs)\n# Define office use codes\noffice_use_codes = ['340', '343', '345', '346', '0340', '404', '406', '0406']\n# Filter for office parcels\noffice_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(office_use_codes)].copy()\n# Define major hospitals in Cambridge\nhospitals = [\n    Point(-71.1056, 42.3676),  # Massachusetts General Hospital\n    Point(-71.1189, 42.3625),  # Cambridge Health Alliance\n    Point(-71.1185, 42.3782)   # Mount Auburn Hospital\n]\n# Convert hospital locations to GeoDataFrame\nhospital_gdf = gpd.GeoDataFrame(geometry=hospitals, crs=parcels.crs)\nhospital_gdf_proj = hospital_gdf.to_crs(cambridge_crs)\n# Create 800m buffer around hospitals\nhospital_buffers = [geom.buffer(800) for geom in hospital_gdf_proj.geometry]\nhospital_union_buffer = gpd.GeoSeries(hospital_buffers).union_all()\n# Filter office parcels within 800m of hospitals\noffice_near_hospitals = office_parcels[office_parcels.geometry.intersects(hospital_union_buffer)].copy()\n# Sort by parcel ID (ml)\nresult_parcels = office_near_hospitals.sort_values('ml')\n# Convert back to original CRS\nresult_parcels = result_parcels.to_crs(parcels.crs)\n# Output results\nresult_ids = result_parcels['ml'].tolist()\nprint(f\"Found {len(result_parcels)} parcels meeting criteria\")\nprint(f\"Parcel IDs: {result_ids}\")",
    "Answer": "['102-25', '105-123', '105-58', '105-74', '105-77', '105-81', '105-89', '106-123', '107-135', '107-136', '109-22', '109-51', '110-16', '110-18', '110-21', '110-55', '110-87', '110-90', '114A-66', '116-117', '117-1', '117-25', '117-29', '117-56', '118-1', '118-34', '118-79', '119-93', '119-95', '120-17', '120-74', '121-13', '121-2', '121-94', '127-119', '128-70', '128-71', '129-11', '129-58', '133-14', '133-15', '133-27', '133-28', '133-30', '133-33', '133-49', '133-51', '134-59', '154-64', '154-65', '154-73', '156-55', '156-60', '160-11', '160-14', '160-48', '160-57', '160-59', '160-64', '160-67', '160-69', '160-71', '160-72', '160-77', '162-17', '162-36', '162-64', '162-65', '162-67', '162-68', '162-73', '165-53', '165-55', '165-57', '166-24', '166-33', '166-35', '166-37', '166-52', '166-77', '168-13', '168-20', '168-21', '168-22', '168-25', '168-33', '168-36', '168-41', '168-48', '168-49', '168-59', '168-60', '168-64', '169-102', '169-42', '169-50', '169-81', '169-82', '169-84', '169-93', '169-98', '169-99', '172-29', '174-26', '174-31', '175-68', '175-77', '216-7', '69-148', '69-159', '69-165', '69-173', '75-44', '83-7', '84-1', '85-76', '87-153', '88-53', '90-13', '90-133', '90-14', '90-161', '90-169', '90-170', '90-185', '90-20', '90-52', '90-70', '91-208', '91-63', '91-64', '91-87', '92-127', '93-48', '93-72', '93-73', '93-74', '93-75', '93-99', '95-79']"
  },
  {
    "Query": "find parcels with high foot traffic business types AND within 400 meters of mit",
    "Code": "import geopandas as gpd\nimport pandas as pd\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\nspend = pd.read_csv('cambridge_spend_processed.csv')\n# Define MIT location\nmit_location = (-71.09416, 42.3601)\n# Project to metric CRS for accurate distance measurement\nparcels_proj = parcels.to_crs(epsg=26986)\n# Define high foot traffic business types\nhigh_foot_traffic_types = [\n    'restaurant', 'cafe', 'fast_food', 'clothing_store', 'department_store',\n    'grocery_store', 'convenience_store', 'shoe_store', 'bar', 'pub'\n]\n# Filter POI for high foot traffic business types\npoi_filtered = poi[poi['business_type'].isin(high_foot_traffic_types)].copy()\n# Project filtered POI to the same CRS\npoi_filtered_proj = poi_filtered.to_crs(epsg=26986)\n# Filter parcels that are within 400m of MIT\nmit_geom = gpd.GeoSeries([gpd.points_from_xy([mit_location[0]], [mit_location[1]])[0]], crs=parcels.crs)\nmit_geom_proj = mit_geom.to_crs(epsg=26986)\n# Create 400m buffer around MIT\nmit_buffer = mit_geom_proj.buffer(400)[0]\n# Filter for high foot traffic business type POI within 400m of MIT\n# Use spatial join to find which POI are within 400m of MIT\npoi_near_mit = poi_filtered_proj[poi_filtered_proj.geometry.intersects(mit_buffer)].copy()\n# Get parcel IDs for these POI\n# Use spatial join to find which parcels contain these POI\npoi_parcels = gpd.sjoin(poi_near_mit, parcels_proj, how='inner', predicate='within')\n# Sort by parcel ID\nresult_ids = poi_parcels['ml'].sort_values().tolist()\n# Convert back to original CRS\nparcels_proj = parcels_proj.to_crs(parcels.crs)\n# Print results\nprint(result_ids)",
    "Answer": "['43A-21', '43A-21', '43A-21', '43A-21', '43A-21', '43A-28', '52A-21', '52A-21', '52A-21', '52A-21', '52A-21', '52A-21', '52A-21', '52A-21', '57-169', '57-169', '57-169', '57-169', '57-169', '57-169', '57-169', '57-169', '58-161', '68-47', '68-47', '70-22', '70-51', '70-51', '70-51', '71-55', '71-55', '71-55', '71-56', '71-56', '71-56']"
  },
  {
    "Query": "find parcels for office use larger than 10000 sq ft, prioritizing locations with a high percentage of residents aged 18-64",
    "Code": "import geopandas as gpd\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\n# Define projected CRS for Cambridge, MA\ncambridge_crs = 26986\n# Project to metric CRS for accurate analysis\nparcels_proj = parcels.to_crs(cambridge_crs)\ncensus_proj = census.to_crs(cambridge_crs)\n# Filter for office-use codes\noffice_use_codes = ['340', '343', '345', '346', '0340', '404', '406']\noffice_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(office_use_codes)].copy()\n# Filter by size (>10,000 sq ft)\nlarge_office_parcels = office_parcels[office_parcels['land_area'] > 10000].copy()\n# Prioritize by proximity to areas with high proportion of residents aged 18-64\n# Define high proportion threshold (e.g., >50%)\nhigh_age_pct = 50\n# Filter for areas with high proportion of 18-64\nhigh_age_areas = census_proj[census_proj['pct_18_64'] > high_age_pct].copy()\n# Sort by proximity to high age areas\ndef prioritize_by_age_proximity(parcel_geom, high_age_geoms, buffer_distance=200):\n    buffered_geoms = [geom.buffer(buffer_distance) for geom in high_age_geoms]\n    if not buffered_geoms:\n        return float('inf')  # No high age areas, assign low priority\n    return min(geom.distance(parcel_geom) for geom in buffered_geoms)\n# Get high age area geometries\nhigh_age_geoms = high_age_areas['geometry'].tolist()\n# Calculate priority score (lower is better)\nlarge_office_parcels.loc[:, 'age_priority'] = large_office_parcels.geometry.apply(\n    lambda geom: prioritize_by_age_proximity(geom, high_age_geoms)\n)\n# Sort by priority (closest to high age areas first)\nresult_parcels = large_office_parcels.sort_values('age_priority').copy()\n# Get parcel IDs (ml) for final result\nresult_ids = result_parcels['ml'].tolist()\n# Print results\nprint(f\"Found {len(result_parcels)} parcels meeting criteria\")\nprint(f\"Parcel IDs (prioritized by age area proximity): {result_ids}\")",
    "Answer": "['1A-70', '11-146', '267F-301', '14-58', '44-99', '28-23', '267.2-272', '169-42', '160-11', '30-42', '67-66', '133-51', '267E-285', '11-40', '54-19', '110-87', '63-132', '23-149', '267D-305', '267.4-305', '14-45', '30-41', '267D-286', '133-33', '172-29', '116-117', '267.4-322', '265A-31', '41-36', '183-119', '17-84', '267.3-285', '69-179', '17-74', '168-13', '66-153', '68-77', '95-72', '119-95', '43-76', '10-16', '41-38', '44-100', '267D-315', '267.4-313', '268C-32', '267D-299', '15-28', '121-2', '168-41', '1A-201', '1A-209', '46-12', '39-88', '1A-213', '267E-279', '19-23', '96-124', '190-33', '14-47', '47-94', '267F-283', '30-35', '93-99', '19-22', '106-123', '129-11', '178-133', '69-183', '267D-329', '42-70', '71-55', '128-71', '134-59', '42-97', '43A-28', '81-103', '14-64', '267D-319', '68-76', '8-75', '107-136', '70-22', '70-74', '267.4-307', '152-52', '43-70', '1A-200', '267D-311', '169-102', '43A-16', '67-47', '267E-282', '169-99', '68-47', '165-57', '168-22', '13-23', '168-60', '267F-281', '95-75', '41-29', '265D-53', '1A-105', '39-173', '160-48', '70-86', '63-135', '191-112', '160-57', '43-73', '69-148', '181-88', '267.1-278', '14-44', '165-53', '91-208', '42-87', '95-71', '43A-21', '13-16', '41-26', '32-53', '90-133', '267.2-273', '14-39', '90-170', '184-168', '267F-391', '182-98', '268C-35', '31-15', '23-90', '9-41', '269-138', '175-68', '43-77', '30-40', '15-30', '1A-172', '105-81', '1A-190', '95-76', '203B-52', '128-70', '18-74', '44-104', '168-36', '63-128', '273-51', '160-14', '203A-76', '182-84', '15-3', '252-160', '267F-293', '226-67', '30-38', '43A-24', '80-175', '90-14', '114A-66', '129-58', '267.4-288', '267D-282', '165-55', '29-50', '67-67', '31-20', '168-33', '95-79', '64-6', '16-32', '43-78', '12-19', '267E-280', '267E-284', '267F-279', '267.2-267', '160-69', '267.4-319', '47-97', '88-53', '265A-29', '267F-296', '267.3-253', '92-127', '27-82', '55-18', '267.4-323', '261-77', '169-98', '67-48', '15-29', '267C-70', '93-73', '18-77', '14-36', '69-173', '54-25', '8-91', '16-23', '189-57', '267C-71', '265B-59', '44-105', '67-14', '95-78', '121-94', '69-165', '8-76', '96-109', '169-84', '267D-285', '267D-310', '267F-274', '42-86', '69-159', '90-169', '69-182', '95-74', '133-23', '41-37', '85-76']"
  },
  {
    "Query": "find retail parcels larger than 5000 sq ft, ideally in areas with a diverse mix of nearby businesses",
    "Code": "import geopandas as gpd\nimport pandas as pd\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\nspend = pd.read_csv('cambridge_spend_processed.csv')\n# Define retail use codes\nretail_use_codes = ['323', '324', '325', '326', '327', '330']\n# Project to metric CRS for accurate buffering\nparcels_proj = parcels.to_crs(epsg=26986)\n# Filter for retail parcels larger than 5000 sq ft\nlarge_retail = parcels_proj[\n    (parcels_proj['use_code'].astype(str).isin(retail_use_codes)) &\n    (parcels_proj['land_area'] > 5000)\n].copy()\n# Calculate POI density\ndef calculate_poi_density(parcel_geom, poi_geoms, buffer_distance=100):\n    buffered_geom = parcel_geom.buffer(buffer_distance)\n    poi_count = sum(1 for geom in poi_geoms if geom is not None and buffered_geom.contains(geom))\n    return poi_count / (buffer_distance ** 2)\n# Get POI geometries\npoi_geoms = poi['geometry'].tolist()\n# Calculate POI density for each retail parcel\nlarge_retail['poi_density'] = large_retail['geometry'].apply(\n    lambda geom: calculate_poi_density(geom, poi_geoms)\n)\n# Sort by POI density (higher is better)\nresult_parcels = large_retail.sort_values('poi_density', ascending=False)\n# Convert back to original CRS\nresult_ids = result_parcels['ml'].tolist()\n# Output results\nprint(f\"Found {len(result_parcels)} parcels meeting criteria\")\nprint(f\"Parcel IDs (sorted by POI density): {result_ids}\")",
    "Answer": "['174-37', '140-148', '20-75', '34-8', '236-95', '70-91', '175-84', '199-90', '265B-28', '196-154', '1A-211', '252-172', '180-57', '184-159', '166-13', '92-88', '90-155', '107-9', '157-26', '183-100', '84-91', '192-121', '267D-259', '128-63', '119-90', '74-1', '90-162', '273-20', '174-36', '189-72', '116-12', '70-92', '265B-26', '155-42', '169-86', '105-68', '105-82', '88-48', '162-26', '176-15', '199-67', '273-2', '120-48', '21-16', '175-75', '141-80', '42-91', '93-78', '136-15', '18-65', '154-97', '199-30', '267E-234', '84-101', '109-50', '125-73', '8-88', '107-117', '191-85', '110-91', '81-100', '162-54', '236-84', '254-82', '176-64', '169-46', '134-33', '85-66', '128-72', '230-71', '83-80', '21-121', '100-62', '84-12', '175-37', '199-31', '93-80', '260-76', '200-22', '179-87', '195-59', '192-177', '260-46', '184-193', '169-47', '226-46', '156-25', '106-124', '20-82', '179-75', '160-85', '174-27', '191-65', '265B-61', '182-88', '265C-25', '16-11', '229-117', '1A-189', '268B-15', '234-178', '152-25', '18-64', '1A-192']"
  },
  {
    "Query": "find office parcels larger than 8000 sq ft, prioritizing areas with substantial foot traffic",
    "Code": "import geopandas as gpd\nimport pandas as pd\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\nspend = pd.read_csv('cambridge_spend_processed.csv')\n# Project to metric CRS for accurate distance measurement\nparcels_proj = parcels.to_crs(epsg=26986)\npoi_proj = poi.to_crs(epsg=26986)\n# Filter for office parcels larger than 8000 sq ft\nlarge_office_parcels = parcels_proj[\n    (parcels_proj['use_code'].astype(str).str.startswith('34')) & \n    (parcels_proj['land_area'] > 8000)\n].copy()\n# Define foot traffic as POI count within 200m\ndef calculate_foot_traffic(parcel_geom, poi_geoms, buffer_distance=200):\n    buffered_geom = parcel_geom.buffer(buffer_distance)\n    count = sum(1 for geom in poi_geoms if geom is not None and buffered_geom.contains(geom))\n    return count\n# Calculate foot traffic for each parcel\npoi_geoms = poi_proj['geometry'].tolist()\nlarge_office_parcels.loc[:, 'foot_traffic'] = large_office_parcels.geometry.apply(\n    lambda geom: calculate_foot_traffic(geom, poi_geoms)\n)\n# Sort by foot traffic (higher is better)\nresult_parcels = large_office_parcels.sort_values('foot_traffic', ascending=False)\n# Convert back to original CRS\nresult_parcels = result_parcels.to_crs(parcels.crs)\n# Output results\nresult_ids = result_parcels['ml'].tolist()\nprint(result_ids)",
    "Answer": "['168-36', '169-98', '160-57', '168-33', '160-11', '160-69', '169-42', '160-14', '168-13', '169-93', '107-136', '90-169', '90-170', '106-123', '90-133', '169-84', '169-102', '165-57', '90-161', '168-60', '105-81', '93-73', '107-135', '105-77', '105-89', '165-55', '168-22', '169-99', '165-53', '91-208', '91-118', '117-29', '168-41', '14-36', '116-117', '14-47', '119-95', '121-2', '14-58', '133-51', '133-33', '121-94', '160-48', '133-23', '134-59', '93-99', '19-23', '18-74', '90-13', '23-90', '121-13', '178-133', '90-14', '24-133', '44-100', '14-26', '178-117', '47-94', '17-84', '21-120', '174-25', '84-97', '175-68', '15-30', '17-74', '191-112', '42-86', '23-149', '84-1', '178-1', '192-39', '31-20', '13-23', '8-76', '81-103', '140-157', '85-76', '15-3', '69-159', '41-38', '13-16', '80-175', '8-75', '267D-305', '114A-66', '109-22', '46-12', '9-41', '44-99', '29-50', '41-36', '16-23', '42-87', '189-57', '267D-319', '35-89', '183-97', '152-52', '267D-299', '181-88', '39-173', '15-31', '27-82', '42-97', '87-153', '70-86', '88-53', '11-40', '252-160', '42-70', '182-98', '129-11', '39-88', '226-67', '267D-316', '182-84', '44-105', '267D-285', '44-104', '96-109', '265B-59', '43A-21', '183-119', '267D-310', '96-124', '12-19', '95-79', '265A-29', '267D-311', '43-78', '273-51', '267D-282', '203B-52', '251-255', '267D-329', '70-22', '267C-70', '172-29', '28-23', '265A-31', '96-98', '70-74', '267.4-305', '265D-53', '95-76', '68-50', '267F-281', '267.4-288', '216-7', '43-70', '261-77', '184-168', '267F-301', '43-73', '267F-274', '273-29', '128-70', '1A-209', '1A-105', '267F-293', '267F-391', '267F-279', '267E-282', '190-33', '268C-35', '267E-279', '1A-70', '1A-200', '268C-32', '1A-190', '1A-201', '267E-280', '267F-296', '267F-283', '1A-172', '267.3-253', '55-18', '267.2-267', '54-25']"
  },
  {
    "Query": "find commercial parcels larger than 3000 square feet within 500m of harvard square",
    "Code": "import geopandas as gpd\nfrom shapely.geometry import Point\n\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\n\n# Define Harvard Square location\nharvard_square_point = Point(-71.1189, 42.3736)\nharvard_square = gpd.GeoDataFrame(geometry=[harvard_square_point], crs=parcels.crs)\n\n# Project to metric CRS for accurate buffering\nparcels_proj = parcels.to_crs(epsg=26986)\nharvard_square_proj = harvard_square.to_crs(epsg=26986)\n\n# Filter for commercial parcels larger than 3000 sq ft\ncommercial_use_codes = [\n    '300', '302', '316', '323', '324', '325', '326', '327', \n    '330', '332', '334', '340', '341', '343', '345', '346',\n    '353', '362', '375', '404', '406', '0340', '0406'\n]\nlarge_commercial_parcels = parcels_proj[\n    (parcels_proj['use_code'].astype(str).isin(commercial_use_codes)) & \n    (parcels_proj['land_area'] > 3000) \n].copy()\n\n# Create 500m buffer around Harvard Square\nharvard_buffer = harvard_square_proj.geometry[0].buffer(500)\n\n# Filter large parcels by proximity to Harvard Square\nresult_parcels = large_commercial_parcels[large_commercial_parcels.geometry.intersects(harvard_buffer)].copy()\n\n# Sort by ml (parcel ID)\nresult_parcels = result_parcels.sort_values('ml')\n\n# Convert back to original CRS\nresult_parcels = result_parcels.to_crs(parcels.crs)\n\n# Output results\nresult_ids = result_parcels['ml'].tolist()\nprint(f\"Found {len(result_parcels)} parcels larger than 3000 sqft within 500m of Harvard Square\")\nprint(f\"Parcel IDs: {result_ids}\")",
    "Answer": "['133-12', '133-15', '133-23', '133-36', '133-49', '133-51', '134-7', '136-15', '160-11', '160-14', '160-48', '160-57', '160-58', '160-59', '160-64', '160-66', '160-67', '160-69', '160-71', '160-72', '160-77', '160-85', '162-17', '162-18', '162-26', '162-36', '162-54', '162-67', '162-68', '162-73', '165-34', '165-53', '165-55', '165-57', '166-24', '166-33', '166-35', '168-13', '168-20', '168-21', '168-22', '168-25', '168-33', '168-36', '168-41', '168-48', '168-59', '168-60', '168-64', '169-100', '169-102', '169-42', '169-46', '169-47', '169-50', '169-82', '169-84', '169-86', '169-93', '169-98', '169-99', '170-39']"
  },
  {
    "Query": "find parcels zoned for educational uses",
    "Code": "import geopandas as gpd\nimport pandas as pd\n\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\nspend = pd.read_csv('cambridge_spend_processed.csv')\n\n# Project to metric CRS for accurate analysis\nparcels_proj = parcels.to_crs(epsg=26986)\n\n# Define educational use codes based on provided land use table\neducational_use_codes = [\n    '140',    # CHILD-CARE\n    '934',    # Public Schools\n    '940',    # Private Pre & Elem School\n    '9403',   # Private Elementary Education\n    '941',    # Private Secondary School\n    '9410',   # Private Secondary Education\n    '9413',   # Private Secondary Education\n    '942',    # Private College\n    '9420',   # Private College, University\n    '943',    # Other Educ & Research Org\n    '956'     # Museums\n]\n\n# Filter for parcels with educational use codes\neducational_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(educational_use_codes)]\n\n# Sort by parcel ID (ml column)\nresult_ids = educational_parcels['ml'].sort_values().tolist()\n\n# Print results\nprint(result_ids)",
    "Answer": "['102-2', '104-109', '106-28', '114-130', '121-113', '122-199', '131-65', '131-68', '131-70', '132-137', '132-152', '133-3', '133-35', '133-45', '133-8', '133-9', '134-1', '134-21', '134-3', '135-2', '135-43', '136-2', '136-20', '136-21', '136-34', '136-39', '136-9', '137-2', '137-39', '137-4', '137-42', '138-2', '138-33', '140-138', '142-21', '143-10', '143-11', '143-13', '143-15', '143-17', '143-20', '143-4', '143-5', '144-1', '145-36', '145-37', '145-38', '146A-100', '146A-110', '147-24', '147-35', '147-41', '147-46', '147-56', '147-58', '147-62', '149-1', '150-80', '150-81', '153-85', '155-33', '155-43', '156-106', '156-107', '156-23', '156-37', '156-41', '156-45', '156-46', '156-47', '156-82', '156-88', '156-91', '156-92', '156-97', '157-20', '157-61', '157-62', '157-63', '157-64', '157-66', '157-68', '157-69', '157-8', '159-1', '160-30', '160-36', '160-37', '160-38', '160-54', '160-55', '160-60', '160-61', '161-1', '161-3', '161-5', '161-58', '161-73', '161-76', '161-85', '161-93', '161-94', '162-10', '162-11', '162-32', '162-35', '162-4', '162-47', '162-48', '162-49', '162-51', '162-52', '162-61', '162-7', '164-5', '166-73', '167-11', '167-95', '167-96', '167-97', '167-98', '167-99', '168-32', '168-4', '168-57', '169-12', '169-14', '169-69', '169-8', '169-94', '170-19', '170-28', '170-35', '170-5', '172-59', '172-71', '185-58', '185-59', '197-4', '203B-69', '208-3', '210-17', '212-29', '212-35', '212-58', '213-2A', '216-35', '217-12', '217-18', '224-16', '224-24', '224-27', '224-32', '224-36', '224-37', '224-39', '224-8', '226-30', '226-34', '226-59', '227-90', '238-10', '242-33', '242-36', '242-38', '242A-134', '242B-56', '248-79', '256-80', '258-68', '260-80', '267D-340', '27-101', '27-99', '271-6', '272-12', '273-42', '274-1A', '274-1B', '274-1C', '274-1D', '274-1E', '274-1F', '274-1H', '274-1I', '274-1K', '33-93', '35-59', '38-1', '40-258', '43-63', '47-83', '47-88', '47-90', '48-129', '48-157', '48-159', '52A-21', '52A-22', '52A-31', '53-59', '53-60', '53-61', '53-63', '53-71', '54-10', '55-16', '55-26', '55-9', '56-4', '56-5', '56-7', '56-8', '57-169', '57-170', '57-173', '58-120', '58-157', '58-158', '58-161', '58-162', '58-163', '58-165', '58-74', '58-95', '59-32', '59-34', '59-35', '59-37', '59-39', '59-40', '59-41', '60-6', '61-14', '62-18', '62-41', '62-42', '63-1', '63-118', '65-48', '67-55', '68-56', '68-57', '68-58', '68-59', '69-110', '70-34', '70-36', '70-38', '70-39', '70-60', '70-84', '70-95', '70-98', '70-99', '71-57', '76-96', '86-105', '86-23', '86-71', '86-72', '9-90', '92-69', '93-4', '96-148', '96-67', '99-81']"
  },
  {
    "Query": "find parcels larger than 20000 sq ft near cambridge common",
    "Code": "import geopandas as gpd\nfrom shapely.geometry import Point\n\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\n\n# Define Cambridge Common location (approximate coordinates)\ncambridge_common_coords = (-71.1184, 42.3736)\ncambridge_common_point = Point(cambridge_common_coords)\ncambridge_common = gpd.GeoDataFrame(geometry=[cambridge_common_point], crs=parcels.crs)\n\n# Project to metric CRS for accurate distance measurement\nparcels_proj = parcels.to_crs(epsg=26986)\ncambridge_common_proj = cambridge_common.to_crs(epsg=26986)\n\n# Filter for large parcels (>20000 sq ft)\nlarge_parcels = parcels_proj[parcels_proj['land_area'] > 20000].copy()\n\n# Calculate distance to Cambridge Common\nlarge_parcels['distance_to_common'] = large_parcels.geometry.distance(cambridge_common_proj.geometry[0])\n\n# Sort by proximity to Cambridge Common\nresult_parcels = large_parcels.sort_values('distance_to_common')\n\n# Extract parcel IDs (ml) for final output\nresult_ids = result_parcels['ml'].tolist()\n\n# Print results\nprint(result_ids)",
    "Answer": "['159-1', '160-14', '169-98', '169-5', '160-60', '158-25', '169-12', '162-74', '168-36', '133-3', '162-61', '171-1', '169-4', '161-76', '169-94', '161-85', '157-69', '143-17', '169-69', '161-58', '136-2', '165-57', '134-1', '137-1', '164-5', '164-7', '170-19', '170-35', '165-55', '167-11', '137-2', '161-73', '144-1', '165-53', '134-2', '136-37', '132-152', '143-20', '167-96', '137-42', '165-56', '166-80', '132-137', '143-11', '135-123', '135-25', '170-4', '167-97', '137-39', '132-97', '134-56', '131-68', '165-24', '131-65', '135-20', '170-39', '172-65', '166-70', '217-18', '132-157', '172-109', '138-33', '166-72', '131-70', '121-2', '217-5', '138-2', '172-73', '134-59', '145-36', '121-94', '172-59', '142-45', '172-99', '219-8', '130-121', '216-26', '116-16', '172-61', '116-12', '121-6', '172-60', '157-51', '217-11', '219-7', '140-138', '216-4', '130-144', '121-114', '157-64', '219-38', '219-37', '121-113', '217-12', '122-199', '116-83', '116-43', '146A-110', '140-157', '156-26', '217-13', '216-34', '116-117', '146A-37', '120-40', '140-61', '218-55', '147-46', '140-156', '146-54', '215-19', '140-134', '220-165', '115-8', '130-168', '122-184', '147-41', '213-2A', '212-29', '116-98', '224-42', '112-23', '224-8', '215-13', '147-61', '156-97', '224-16', '224-39', '146A-145', '215-50', '155-30', '223-67', '155-29', '212-58', '223-25', '155-33', '129-47', '224-32', '227-90', '119-65', '129-54', '221-91', '111-60', '119-8', '223-45', '223-44', '175-75', '222-16', '119-9', '108-22', '126-174', '241-10', '225-3', '129-11', '208-15', '129-58', '209-52', '114-130', '124-91', '241-14', '119-56', '119-22', '226-65', '226-30', '119-89', '129-59', '226-2', '211-53', '226-35', '239-21', '208-16', '118-33', '223-15', '126-173', '208-3', '176-53', '154-91', '124-90', '126-172', '211-34', '108-15', '119-94', '226-59', '176-66', '153-71', '127-132', '107-127', '153-66', '239-64', '211-238', '226-67', '227-22', '128-63', '128-72', '107-138', '108-44', '128-30', '176-27', '153-59', '231-50', '107-122', '231-52', '231-33', '242B-1000', '108-43', '176-13', '231-44', '108-32', '153-88', '242B-56', '239-62', '107-76', '243-1', '231-43', '104-109', '238-84', '108-84', '153-85', '209-71', '238-50', '107-117', '107-136', '107-137', '232-6', '238-48', '105-66', '242B-53', '238-15', '177-55', '232-7', '238-71', '232-64', '242B-54', '128-73', '241-12', '152-17', '104-133', '152-51', '109-44', '240-51', '128-71', '232-84', '242B-52', '106-105', '106-125', '242-36', '242-38', '90-193', '238-62', '242B-49', '210-35', '238-57', '210-27', '240-36', '128-70', '242B-999', '104-130', '110-61', '128-68', '87-156', '238-72', '90-183', '229-110', '106-122', '90-169', '88-10', '103-20', '242A-138', '106-124', '84-101', '90-95', '205-40', '237-79', '246-9', '238-77', '90-184', '152-25', '103-21', '90-96', '237-36', '103-113', '238-26', '200-100', '178-52', '237-11', '236-25', '178-122', '100-68', '237-73', '246-1021', '179-87', '82-8', '89-28', '237-63', '85-1', '242A-115', '242-34', '201-112', '246A-61', '236-132', '242-33', '100-62', '235-80', '204-147', '204-150', '246-15', '91-208', '274-1G', '86-105', '85-76', '94-38', '85-63', '245-1', '92-119', '264-102', '236-109', '92-124', '92-132', '91-72', '92-130', '97-130', '91-207', '91-195', '94-158', '86-107', '202-131', '235-84', '247-80', '203B-69', '95-73', '92-127', '203B-57', '76-116', '92-117', '95-57', '92-125', '247-191', '75-4', '100-86', '199-98', '95-78', '95-71', '181-207', '203B-66', '92-118', '97-32', '92-128', '95-75', '92-126', '203B-52', '99-81', '95-76', '80-165', '81-107', '202-130', '95-72', '197-3', '95-74', '69-62', '69-159', '69-165', '69-173', '69-183', '75-170', '67-44', '250-221', '76-96', '81-103', '264-34', '67-47', '181-88', '198-20', '203A-77', '74-127', '69-179', '67-48', '69-180', '69-148', '69-182', '98-38', '197-5', '199-32', '66-153', '260-80', '78-249', '70-85', '73-124', '67-65', '68-74', '203A-76', '76-135', '68-75', '72A-1', '81-105', '181-189', '67-67', '66-152', '80-110', '68-76', '80-175', '81-106', '195-156', '68-77', '65-48', '248-79', '67-55', '67-49', '38-1', '70-34', '67-66', '68-47', '66-124', '68-60', '70-86', '197-4', '261-124', '68-59', '42-86', '68-58', '234-178', '68-57', '260-77', '66-99', '71-55', '65-45', '68-56', '66-12', '40-243', '64-6', '54-10', '68-34', '261-167', '66-74', '195-169', '66-82', '54-19', '42-97', '54-16', '66-73', '271-44', '54-7', '55-18', '65-47', '55-19', '274-2', '55-26', '71-56', '55-9', '194-77', '42-87', '260-46', '182-86', '266-34', '195-143', '266-39', '40-258', '55-23', '42-70', '259-1', '54-29', '64-7', '182-84', '63-132', '56-8', '54-25', '194-89', '55-22', '55-16', '55-27', '252-160', '266-31', '273-47', '62-42', '62-34', '57-173', '196-164', '62-41', '63-135', '56-9', '63-134', '43A-24', '43A-19', '273-51', '41-38', '43A-21', '41-29', '268A-53', '63-118', '252A-155', '41-36', '53-71', '56-4', '39-173', '196-163', '71-57', '39-179', '43A-16', '58-166', '53-72', '62-18', '273-1', '53-64', '252A-154', '41-26', '264-105', '39-174', '273-2', '37-127', '52A-31', '41-37', '43A-28', '252A-153', '53-61', '273-35', '252-172', '265C-25', '265A-7', '264-106', '268A-40', '52A-21', '253-167', '252A-157', '264-97', '61-14', '57-169', '39-169', '265A-29', '60-6', '31-20', '33-105', '30-43', '34-141', '265A-43', '33-88', '32-52', '268A-47', '35-100', '192-151', '59-37', '58-165', '268B-47', '58-120', '30-42', '30-41', '43-78', '192-174', '33-93', '32-37', '32-53', '43-73', '31-15', '58-158', '31-13', '43-76', '35-85', '34-138', '43-63', '192-125', '58-95', '52A-22', '43-77', '35-87', '43-70', '31-21', '30-44', '265B-28', '58-161', '265B-26', '43-71', '265B-61', '35-89', '268B-45', '183-127', '269-136', '265B-59', '30-40', '267F-298', '30-38', '30-35', '183-128', '31-22', '265B-34', '35-95', '267F-299', '191-112', '267F-275', '44-105', '44-93', '265B-60', '44-104', '27-99', '27-93', '265B-56', '265D-55', '29-39', '22-132', '267F-301', '28-23', '48-129', '269-138', '29-50', '267F-286', '256-80', '255-100', '265D-57', '268C-32', '44-99', '44-106', '184-106', '44-95', '48-157', '267F-274', '189-100', '267F-392', '266-33', '268C-30', '44-71', '266-40', '27-81', '28-39', '257-47', '28-33', '184-198', '267F-293', '265D-52', '267F-281', '48-156', '189-57', '266-32', '29-34', '48-159', '190-248', '27-86', '189-104', '52A-19', '267F-279', '256-106', '257-53', '44-100', '269.5-101', '29-49', '22-109', '257-42', '48-154', '27-82', '189-102', '267.4-320', '47-94', '267F-283', '265D-58', '257-60', '269-127', '267E-242', '47-88', '184-192', '27-97', '14-58', '267E-269', '267F-284', '265D-53', '1A-179', '14-36', '14-50', '14-1038', '47-83', '7-29', '267E-285', '14-64', '14-60', '14-44', '47-97', '15-29', '267.4-319', '267.4-305', '267F-296', '16-30', '267E-283', '24-123', '47-90', '17-84', '16-32', '267.4-209', '1A-207', '184-197', '267E-284', '14-59', '7-113', '7-115', '267E-282', '17-74', '267E-293', '267.4-323', '14-51', '267.4-310', '15-30', '269.5-102', '17-64', '19-22', '267E-291', '19-23', '19-24', '20-75', '267E-234', '14-47', '267.4-312', '267.4-322', '185-58', '267.4-221', '267E-244', '14-45', '20-71', '267.4-311', '267.4-316', '267.4-288', '14-41', '46-12', '267.4-264', '267.2-266', '267.2-263', '267D-310', '267.4-307', '18-77', '18-75', '13-21', '18-74', '10-16', '18-47', '188-113', '16-28', '13-23', '1A-6', '267D-305', '15-28', '267.4-176', '10-33', '15-3', '267D-285', '1A-186', '20-104', '187-59', '186-96', '267.4-218', '267.4-254', '267D-325', '185-59', '13-16', '1A-213', '16-34', '10-67', '267D-293', '267.4-285', '16-6', '267.3-285', '1A-212', '186-90', '267D-294', '267.4-284', '267.4-295', '267.4-313', '8-91', '8-86', '8-90', '8-76', '11-146', '8-75', '267.3-228', '1A-104', '11-43', '267C-95', '267D-319', '1A-210', '266-10', '185-56', '267D-334', '12-19', '267D-333', '267.3-226', '1A-215', '267D-340', '267C-71', '12-17', '267.2-261', '1A-189', '1A-87', '267D-303', '11-145', '267C-70', '1A-171', '267D-332', '267D-282', '9-41', '1A-190', '1A-191', '8-61', '11-40', '267.2-273', '9-61', '267C-91', '267D-339', '267.2-264', '267D-322', '9-40', '9-31', '267.2-272', '267.3-280', '267.3-279', '267C-92', '267.1-282', '267.2-267', '267.3-268', '267.2-270', '1A-86', '267.3-278', '267.3-277', '267.3-275', '1A-201', '267.1-281', '267.1-278', '9-89', '1A-82', '1A-209', '267.3-276', '9-90', '267.1-279', '1A-69', '1A-109', '1A-174', '1A-200', '267.1-280', '1A-182', '267.1-277', '267.1-276', '1A-196', '267.3-28', '1A-105', '1A-197', '1A-183', '1A-195', '1A-81', '1A-184', '1A-67', '1A-172']"
  },
  {
    "Query": "find commercial parcels ideally located near popular retail areas, such as harvard square or kendall square.",
    "Code": "import geopandas as gpd\nimport pandas as pd\nfrom shapely.geometry import Point\n\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\nspend = pd.read_csv('cambridge_spend_processed.csv')\n\n# Define commercial use codes\ncommercial_use_codes = [\n    '300', '302', '316', '323', '324', '325', '326', '327', \n    '330', '332', '334', '340', '341', '343', '345', '346',\n    '353', '362', '375', '404', '406', '0340', '0406'\n]\n\n# Filter for commercial parcels\ncommercial_parcels = parcels[parcels['use_code'].astype(str).isin(commercial_use_codes)].copy()\n\n# Define Harvard Square and Kendall Square locations\nharvard_square_point = Point(-71.118956, 42.373611)\nkendall_square_point = Point(-71.086176, 42.362490)\n\nharvard_square = gpd.GeoDataFrame(geometry=[harvard_square_point], crs=parcels.crs)\nkendall_square = gpd.GeoDataFrame(geometry=[kendall_square_point], crs=parcels.crs)\n\n# Convert to projected CRS for accurate distance measurement\ncommercial_parcels_proj = commercial_parcels.to_crs(epsg=26986)\nharvard_square_proj = harvard_square.to_crs(epsg=26986)\nkendall_square_proj = kendall_square.to_crs(epsg=26986)\n\n# Calculate distance to Harvard Square and Kendall Square\ncommercial_parcels_proj['dist_to_harvard'] = commercial_parcels_proj.geometry.distance(harvard_square_proj.geometry[0])\ncommercial_parcels_proj['dist_to_kendall'] = commercial_parcels_proj.geometry.distance(kendall_square_proj.geometry[0])\n\n# Prioritize parcels that are closer to either location\n# Use a weighted approach: 70% weight on Harvard distance, 30% on Kendall distance\ncommercial_parcels_proj['distance_score'] = (\n    0.7 * commercial_parcels_proj['dist_to_harvard'] +\n    0.3 * commercial_parcels_proj['dist_to_kendall']\n)\n\n# Sort by proximity to retail areas (lower score is better)\nresult_parcels = commercial_parcels_proj.sort_values('distance_score')\n\n# Convert back to original CRS\nresult_parcels = result_parcels.to_crs(parcels.crs)\n\n# Get top 10 results\ntop_parcels = result_parcels.head(10)\n\n# Output results\nresult_ids = top_parcels['ml'].tolist()\nprint(f\"Found {len(top_parcels)} parcels near retail areas\")\nprint(f\"Parcel IDs: {result_ids}\")",
    "Answer": "['159-2', '160-14', '160-58', '160-69', '169-102', '169-93', '169-50', '160-59', '169-99', '160-85']"
  },
  {
    "Query": "locate office parcels with at least 4000 sq ft of land area, preferably in areas with high educational attainment.",
    "Code": "import geopandas as gpd\n\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\n\n# Define projected CRS for Cambridge, MA\ncambridge_crs = 26986\n\n# Convert to projected CRS\nparcels_proj = parcels.to_crs(cambridge_crs)\ncensus_proj = census.to_crs(cambridge_crs)\n\n# Define office use codes\noffice_use_codes = ['300', '302', '316', '323', '324', '325', '326', '327', '330', '332', '334', '340', '341', '343', '345', '346', '353', '362', '375']\n\n# Filter for office parcels with at least 4000 sq ft\noffice_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(office_use_codes)].copy()\nlarge_office_parcels = office_parcels[office_parcels['land_area'] >= 4000].copy()\n\n# Spatial join with census data for educational attainment\nparcels_with_census = gpd.sjoin(\n    large_office_parcels,\n    census_proj,\n    how='left',\n    predicate='within'\n)\n\n# If educational attainment data is available, prioritize based on that\nif 'pct_bachelor' in parcels_with_census.columns:\n    # Sort by educational attainment (higher is better)\n    prioritized_parcels = parcels_with_census.sort_values('pct_bachelor', ascending=False)\nelif 'pct_degree' in parcels_with_census.columns:\n    # If 'pct_degree' exists, use it instead\n    prioritized_parcels = parcels_with_census.sort_values('pct_degree', ascending=False)\nelse:\n    # If no educational attainment metric is available, just take as-is\n    prioritized_parcels = parcels_with_census.copy()\n\n# Convert back to original CRS\nfinal_parcels = prioritized_parcels.to_crs(parcels.crs)\n\n# Sort by ml for consistent output\nfinal_parcels = final_parcels.sort_values('ml')\n\n# Output results\nresult_ids = final_parcels['ml'].tolist()\nprint(f\"Found {len(final_parcels)} office parcels meeting criteria\")\nprint(f\"Parcel IDs: {result_ids}\")",
    "Answer": "['10-31', '10-38', '100-62', '100-68', '100-86', '105-53', '105-68', '105-74', '105-77', '105-81', '105-82', '105-89', '106-117', '106-123', '106-124', '107-117', '107-135', '107-136', '107-8', '107-9', '108-80', '109-22', '109-50', '109-51', '11-40', '110-16', '110-63', '110-91', '114A-66', '116-100', '116-117', '116-12', '116-94', '117-1', '117-29', '117-56', '118-1', '118-34', '118-67', '118-79', '119-90', '119-93', '119-95', '12-19', '120-48', '121-13', '121-2', '121-94', '125-73', '125-80', '126-131', '128-63', '128-70', '128-72', '129-11', '129-55', '13-16', '13-23', '133-23', '133-33', '133-36', '133-49', '133-51', '134-33', '134-59', '134-7', '136-15', '14-26', '14-36', '14-47', '14-58', '140-148', '141-80', '142-43', '142-44', '15-3', '15-30', '15-31', '152-25', '152-52', '154-101', '154-111', '154-97', '154-98', '155-42', '156-25', '156-55', '156-60', '157-26', '16-11', '16-23', '160-11', '160-14', '160-48', '160-57', '160-58', '160-59', '160-64', '160-69', '160-71', '160-72', '160-77', '160-85', '162-26', '162-36', '162-54', '162-67', '162-68', '162-73', '165-34', '165-53', '165-55', '165-57', '166-13', '166-24', '166-33', '168-13', '168-20', '168-21', '168-22', '168-25', '168-33', '168-36', '168-41', '168-48', '168-59', '168-60', '168-64', '169-100', '169-102', '169-42', '169-46', '169-47', '169-50', '169-82', '169-84', '169-86', '169-93', '169-98', '169-99', '17-74', '17-84', '170-39', '172-29', '174-26', '174-27', '174-33', '174-36', '174-37', '174-73', '175-37', '175-68', '175-75', '175-84', '176-15', '176-64', '177-34', '178-1', '178-106', '178-117', '178-118', '178-133', '178-21', '178-43', '178-91', '179-42', '179-75', '179-87', '18-64', '18-65', '18-74', '18-76', '180-57', '181-65', '181-80', '181-88', '182-8', '182-84', '182-88', '182-98', '183-100', '183-119', '183-97', '184-109', '184-159', '184-168', '184-191', '184-193', '184-31', '186-85', '186-96', '189-4', '189-57', '189-72', '189-88', '19-10', '19-23', '190-33', '191-112', '191-65', '191-85', '192-121', '192-156', '192-177', '192-39', '192-73', '192-74', '192-75', '194-68', '195-59', '196-153', '196-154', '198-28', '199-30', '199-31', '199-67', '199-90', '1A-105', '1A-172', '1A-189', '1A-190', '1A-192', '1A-200', '1A-201', '1A-209', '1A-211', '1A-70', '20-103', '20-31', '20-75', '20-82', '200-22', '200-79', '203B-52', '21-120', '21-121', '21-16', '216-7', '219-37', '22-109', '226-46', '226-67', '229-117', '229-131', '229-135', '229-150', '23-149', '23-90', '230-42', '230-71', '231-27', '233-147', '233-89', '234-178', '236-148', '236-84', '236-95', '24-133', '242B-998', '248-82', '251-221', '251-9', '252-114', '252-147', '252-158', '252-160', '252-172', '254-76', '254-82', '254-86', '260-32', '260-46', '260-73', '260-74', '260-76', '261-6', '261-77', '262-116', '265A-29', '265A-31', '265A-35', '265A-39', '265A-40', '265A-43', '265A-46', '265A-7', '265B-26', '265B-28', '265B-59', '265B-61', '265C-25', '265D-53', '267.2-264', '267.2-267', '267.3-253', '267.3-278', '267.4-209', '267.4-247', '267.4-284', '267.4-288', '267.4-295', '267.4-296', '267.4-305', '267C-70', '267D-256', '267D-259', '267D-282', '267D-285', '267D-299', '267D-300', '267D-305', '267D-310', '267D-311', '267D-316', '267D-319', '267D-325', '267D-329', '267E-234', '267E-244', '267E-279', '267E-280', '267E-282', '267F-274', '267F-279', '267F-281', '267F-283', '267F-293', '267F-296', '267F-301', '267F-391', '268B-15', '268B-8', '268C-32', '268C-35', '27-82', '273-2', '273-20', '273-29', '273-35', '273-40', '273-51', '28-23', '28-31', '29-50', '31-20', '34-116', '34-8', '35-34', '35-36', '36-164', '36-248', '39-173', '39-179', '39-88', '41-36', '41-38', '42-13', '42-33', '42-70', '42-81', '42-86', '42-87', '42-91', '42-97', '42-99', '43-70', '43-71', '43-73', '43-78', '43A-21', '44-100', '44-104', '44-105', '44-106', '44-99', '46-12', '47-94', '48-158', '54-25', '55-18', '63-131', '63-134', '68-19', '68-50', '69-159', '69-161', '69-62', '7-115', '7-31', '7-34', '7-35', '7-37', '70-22', '70-74', '70-86', '70-90', '70-91', '70-92', '74-1', '75-170', '77-41', '79-22', '8-75', '8-76', '8-88', '80-175', '81-100', '81-103', '81-104', '81-21', '81-3', '81-50', '82-57', '83-1', '83-15', '83-7', '83-80', '83-92', '84-1', '84-101', '84-12', '84-85', '84-91', '84-97', '85-66', '85-76', '86-84', '87-153', '88-45', '88-48', '88-53', '9-31', '9-41', '9-61', '90-13', '90-133', '90-14', '90-155', '90-161', '90-162', '90-169', '90-170', '90-18', '90-185', '90-20', '90-70', '91-118', '91-208', '91-7', '91-70', '91-81', '91-87', '92-88', '93-73', '93-74', '93-75', '93-76', '93-78', '93-80', '93-99', '94-7', '95-76', '95-79', '96-109', '96-110', '96-124', '96-152', '96-98']"
  },
  {
    "Query": "find commercial parcels larger than 5000 square feet AND within 400 meters of harvard square",
    "Code": "import geopandas as gpd\nfrom shapely.geometry import Point\n\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\n\n# Define Harvard Square location\nharvard_square_point = Point(-71.1189, 42.3736)\nharvard_square = gpd.GeoDataFrame(geometry=[harvard_square_point], crs=parcels.crs)\n\n# Project to metric CRS for accurate buffering\nparcels_proj = parcels.to_crs(epsg=26986)\nharvard_square_proj = harvard_square.to_crs(epsg=26986)\n\n# Filter for commercial parcels larger than 5000 sq ft\ncommercial_use_codes = [\n    '300', '302', '316', '323', '324', '325', '326', '327', \n    '330', '332', '334', '340', '341', '343', '345', '346',\n    '353', '362', '375', '404', '406', '0340', '0406'\n]\nlarge_commercial_parcels = parcels_proj[\n    (parcels_proj['use_code'].astype(str).isin(commercial_use_codes)) & \n    (parcels_proj['land_area'] > 5000) \n].copy()\n\n# Filter for parcels within 400m of Harvard Square\nharvard_buffer = harvard_square_proj.geometry[0].buffer(400)\nparcels_near_harvard = large_commercial_parcels[large_commercial_parcels.geometry.intersects(harvard_buffer)].copy()\n\n# Sort by parcel ID (ml)\nresult_ids = parcels_near_harvard['ml'].sort_values().tolist()\n\n# Convert back to original CRS\nparcels_near_harvard = parcels_near_harvard.to_crs(parcels.crs)\n\n# Output results\nprint(f\"Found {len(parcels_near_harvard)} parcels meeting criteria\")\nprint(f\"Parcel IDs: {result_ids}\")",
    "Answer": "['133-49', '133-51', '160-11', '160-14', '160-48', '160-57', '160-58', '160-59', '160-64', '160-69', '160-71', '160-72', '160-85', '162-26', '162-36', '162-54', '162-67', '162-68', '165-34', '165-53', '165-55', '165-57', '168-13', '168-20', '168-21', '168-22', '168-25', '168-33', '168-36', '168-41', '168-48', '168-59', '168-60', '168-64', '169-100', '169-102', '169-42', '169-46', '169-47', '169-50', '169-82', '169-84', '169-86', '169-93', '169-98', '169-99']"
  },
  {
    "Query": "find mixed-use parcels with residential units AND within 250 meters of a public park",
    "Code": "import geopandas as gpd\nfrom shapely.geometry import Point\nfrom shapely.ops import unary_union\n\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\n\n# Define projected CRS for Cambridge, MA\ncambridge_crs = 26986\n\n# Project to accurate CRS\nparcels_proj = parcels.to_crs(epsg=cambridge_crs)\n\n# Define mixed-use codes that include residential units\nmixed_use_codes = [\n    '323', '324', '325', '326', '327', '330', '332', '334', '340', \n    '341', '343', '345', '346', '353', '362', '375', '404', '406'\n]\n\n# Filter for mixed-use parcels with residential units\nresidential_units_condition = (\n    (parcels_proj['use_code'].astype(str).isin(mixed_use_codes))\n)\nmixed_use_with_residential = parcels_proj[residential_units_condition].copy()\n\n# Define parks (approximate list of parks in Cambridge)\npark_locations = [\n    (-71.1184, 42.3736),  # Cambridge Common\n    (-71.1060, 42.3670),  # Dana Park\n    (-71.0865, 42.3625),  # Kendall Square Park\n    (-71.1226, 42.3782),  # Porter Square Park\n    (-71.1429, 42.3954)   # Danehy Park\n]\n\n# Create park points\npark_points = [Point(lon, lat) for lon, lat in park_locations]\nparks = gpd.GeoDataFrame(geometry=park_points, crs=parcels.crs)\nparks_proj = parks.to_crs(epsg=cambridge_crs)\n\n# Create 250m buffer around parks\npark_buffers = [geom.buffer(250) for geom in parks_proj.geometry]\npark_union_buffer = unary_union(park_buffers)\n\n# Filter for mixed-use parcels within 250m of a park\nnear_parks = mixed_use_with_residential[mixed_use_with_residential.geometry.intersects(park_union_buffer)].copy()\n\n# Sort by parcel ID (ml)\nresult_ids = near_parks['ml'].astype(str).tolist()\nresult_ids.sort()\n\n# Print results\nprint(f\"Found {len(near_parks)} mixed-use parcels with residential units within 250m of a park\")\nprint(f\"Parcel IDs: {result_ids}\")",
    "Answer": "['105-53', '105-58', '105-68', '105-74', '105-77', '105-81', '105-82', '105-89', '107-135', '107-136', '107-9', '117-25', '117-29', '117-56', '118-1', '118-34', '118-79', '119-90', '119-93', '119-95', '133-51', '133-52', '14-36', '14-58', '159-2', '160-11', '160-14', '160-48', '160-57', '160-58', '160-59', '160-63', '160-64', '160-66', '160-67', '160-69', '160-71', '160-72', '160-76', '160-77', '160-83', '160-84', '160-85', '162-54', '162-67', '162-68', '162-73', '168-33', '168-36', '169-100', '169-102', '169-42', '169-46', '169-47', '169-50', '169-67', '169-68', '169-7', '169-81', '169-82', '169-84', '169-86', '169-93', '169-98', '169-99', '172-29', '216-7', '265D-53', '267.4-288', '267.4-305', '267.4-319', '267.4-322', '267.4-323', '268C-32', '268C-35', '269-138', '29-50', '30-40', '43-70', '43-73', '43-76', '43-77', '44-100', '44-104', '44-105', '44-99', '47-94', '47-97', '90-161', '90-162']"
  },
  {
    "Query": "find retail parcels with at least 3000 square feet of land area AND within 600 meters of public transportation",
    "Code": "import geopandas as gpd\nfrom shapely.geometry import Point\nfrom shapely.ops import unary_union\n\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\n\n# Define retail use codes\nretail_use_codes = ['323', '324', '325', '326', '327', '330']\n\n# Project to metric CRS for accurate buffering\nparcels_proj = parcels.to_crs(epsg=26986)\n\n# Filter for retail parcels\nretail_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(retail_use_codes)].copy()\n\n# Filter by land area (at least 3000 sq ft)\nlarge_retail = retail_parcels[retail_parcels['land_area'] >= 3000].copy()\n\n# Define transit stop locations (key transit locations in Cambridge)\ntransit_stops = [\n    (-71.1189, 42.3736),  # Harvard Square\n    (-71.1031, 42.3656),  # Central Square\n    (-71.0865, 42.3625),  # Kendall/MIT\n    (-71.1226, 42.3782),  # Porter Square\n    (-71.1429, 42.3954)   # Alewife\n]\n\n# Create transit points\ntransit_points = [Point(lon, lat) for lon, lat in transit_stops]\ntransit_gdf = gpd.GeoDataFrame(geometry=transit_points, crs=parcels.crs)\ntransit_gdf_proj = transit_gdf.to_crs(epsg=26986)\n\n# Create 600m buffer around transit stops\ntransit_buffers = [geom.buffer(600) for geom in transit_gdf_proj.geometry]\ntransit_union_buffer = unary_union(transit_buffers)\n\n# Filter retail parcels by proximity to transit (within 600m)\nfinal_parcels = large_retail[large_retail.geometry.intersects(transit_union_buffer)].copy()\n\n# Sort by parcel ID (ml)\nfinal_parcels = final_parcels.sort_values('ml')\n\n# Convert back to original CRS\nfinal_parcels = final_parcels.to_crs(parcels.crs)\n\n# Output results\nresult_ids = final_parcels['ml'].tolist()\nprint(f\"Found {len(final_parcels)} retail parcels meeting criteria\")\nprint(f\"Parcel IDs: {result_ids}\")",
    "Answer": "['105-68', '105-82', '106-109', '106-124', '107-117', '107-9', '108-54', '109-50', '119-90', '120-48', '125-73', '133-12', '136-15', '155-42', '156-25', '157-26', '160-66', '160-85', '162-18', '162-26', '162-54', '166-13', '169-46', '169-47', '169-86', '174-27', '174-30', '174-33', '174-36', '174-37', '174-73', '265B-26', '265B-61', '265C-25', '268B-15', '70-91', '70-92', '74-1', '74-6', '74-8', '86-84', '88-48', '90-155', '90-162', '91-191', '91-52', '92-88', '93-76', '93-78', '93-80']"
  },
  {
    "Query": "find retail spaces greater than 2000 sq ft, ideally in neighborhoods with high educational attainment",
    "Code": "import geopandas as gpd\n\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\n\n# Define retail use codes consistently\nretail_use_codes = ['323', '324', '325', '326', '327', '330']\n\n# Filter for retail parcels\nretail_parcels = parcels[parcels['use_code'].astype(str).isin(retail_use_codes)].copy()\n\n# Filter by size (>2000 sq ft)\nlarge_retail_parcels = retail_parcels[retail_parcels['land_area'] > 2000].copy()\n\n# Project to metric CRS for accurate spatial operations\nlarge_retail_parcels_proj = large_retail_parcels.to_crs(epsg=26986)\ncensus_proj = census.to_crs(epsg=26986)\n\n# Spatial join with census data to get educational attainment\nlarge_retail_with_census = gpd.sjoin(\n    large_retail_parcels_proj,\n    census_proj,\n    how='left',\n    predicate='within'\n)\n\n# Filter by educational attainment if available\nif 'pct_bachelor' in large_retail_with_census.columns:\n    # Sort by educational attainment (higher is better)\n    result_parcels = large_retail_with_census.sort_values('pct_bachelor', ascending=False)\nelif 'pct_degree' in large_retail_with_census.columns:\n    # If 'pct_degree' exists, use it instead\n    result_parcels = large_retail_with_census.sort_values('pct_degree', ascending=False)\nelse:\n    # If no educational attainment metric is available, just sort by land area\n    result_parcels = large_retail_with_census.sort_values('land_area', ascending=False)\n\n# Convert back to original CRS\nresult_parcels = result_parcels.to_crs(parcels.crs)\n\n# Get parcel IDs\nresult_ids = result_parcels['ml'].tolist()\n\n# Print results\nprint(f\"Found {len(result_parcels)} retail parcels >2000 sq ft\")\nprint(f\"Parcel IDs: {result_ids}\")",
    "Answer": "['265C-25', '179-87', '100-62', '252-172', '234-178', '265B-26', '128-72', '265B-28', '128-63', '152-25', '260-46', '267E-234', '84-101', '273-2', '107-117', '175-75', '116-12', '20-75', '106-124', '1A-189', '265B-61', '169-46', '18-65', '176-15', '90-162', '199-31', '184-159', '1A-192', '162-54', '90-155', '260-76', '230-71', '92-88', '136-15', '140-148', '175-37', '196-154', '156-25', '70-92', '189-72', '182-88', '105-68', '191-65', '134-33', '273-20', '16-11', '8-88', '107-9', '74-1', '18-64', '268B-15', '81-100', '110-91', '105-82', '236-95', '84-91', '169-47', '180-57', '200-22', '157-26', '191-85', '83-80', '1A-211', '109-50', '183-100', '125-73', '176-64', '21-121', '93-78', '192-121', '226-46', '174-37', '162-26', '175-84', '199-30', '229-117', '192-177', '70-91', '199-67', '34-8', '120-48', '199-90', '88-48', '179-75', '254-82', '154-97', '236-84', '155-42', '160-85', '267D-259', '174-36', '85-66', '21-16', '174-27', '169-86', '195-59', '119-90', '141-80', '166-13', '20-82', '84-12', '93-80', '42-91', '184-193', '116-94', '42-81', '254-76', '96-152', '231-27', '86-84', '154-111', '184-109', '200-79', '233-147', '252-158', '93-76', '189-4', '261-6', '174-33', '265A-46', '83-15', '174-73', '79-22', '265A-35', '229-131', '106-109', '261-112', '230-116', '83-99', '196-123', '228-33', '108-54', '182-90', '154-89', '114A-120', '91-191', '230-97', '126-27', '160-66', '178-79', '162-18', '74-8', '74-6', '174-30', '133-12', '122-12', '20-83', '91-52', '83-90', '82-31', '162-19', '234-193', '233-175', '75-128', '150-114', '255-21', '160-63', '83-98', '173-65', '139-83', '169-7', '93-79', '261-7', '271-32', '90-127', '169-68', '133-52', '228-55', '102-46', '169-67']"
  },
  {
    "Query": "find office parcels larger than 10000 square feet",
    "Code": "import geopandas as gpd\n\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\n\n# Define projected CRS for Cambridge, MA\ncambridge_crs = 26986\n\n# Project to accurate CRS\nparcels_proj = parcels.to_crs(cambridge_crs)\n\n# Define office use codes based on the land use table\noffice_use_codes = [\n    '340',  # GEN-OFFICE\n    '343',  # OFFICE-CONDO\n    '345',  # RETAIL-OFFIC\n    '346',  # INV-OFFICE\n    '0340'  # MXD GEN-OFFICE\n]\n\n# Filter for office parcels larger than 10000 sq ft\nlarge_office_parcels = parcels_proj[\n    (parcels_proj['use_code'].astype(str).isin(office_use_codes)) & \n    (parcels_proj['land_area'] > 10000)\n].copy()\n\n# Sort by parcel ID (ml) for consistency\nlarge_office_parcels = large_office_parcels.sort_values('ml')\n\n# Convert back to original CRS\nlarge_office_parcels = large_office_parcels.to_crs(parcels.crs)\n\n# Extract parcel IDs\nresult_ids = large_office_parcels['ml'].tolist()\n\n# Print results\nprint(result_ids)",
    "Answer": "['105-81', '106-123', '107-136', '11-40', '114A-66', '116-117', '119-95', '12-19', '121-2', '121-94', '128-70', '129-11', '13-16', '13-23', '133-23', '133-33', '133-51', '134-59', '14-36', '14-47', '14-58', '15-3', '15-30', '152-52', '16-23', '160-11', '160-14', '160-48', '160-57', '160-69', '165-53', '165-55', '165-57', '168-13', '168-22', '168-33', '168-36', '168-41', '168-60', '169-102', '169-42', '169-84', '169-98', '169-99', '17-74', '17-84', '172-29', '175-68', '178-133', '18-74', '181-88', '182-84', '182-98', '183-119', '184-168', '189-57', '19-22', '19-23', '190-33', '191-112', '1A-105', '1A-172', '1A-190', '1A-200', '1A-201', '1A-209', '1A-70', '203B-52', '226-67', '23-149', '23-90', '252-160', '261-77', '265A-29', '265A-31', '265B-59', '265D-53', '267.2-267', '267.3-253', '267.4-288', '267.4-305', '267C-70', '267D-282', '267D-285', '267D-299', '267D-305', '267D-310', '267D-311', '267D-319', '267D-329', '267E-279', '267E-280', '267E-282', '267F-274', '267F-279', '267F-281', '267F-283', '267F-293', '267F-296', '267F-301', '267F-391', '268C-32', '268C-35', '27-82', '273-51', '28-23', '29-50', '31-20', '39-173', '39-88', '41-36', '41-38', '42-70', '42-86', '42-87', '42-97', '43-70', '43-73', '43-78', '43A-21', '44-100', '44-104', '44-105', '44-99', '46-12', '47-94', '54-25', '55-18', '69-159', '70-22', '70-74', '70-86', '8-75', '8-76', '80-175', '81-103', '85-76', '88-53', '9-41', '90-133', '90-14', '90-169', '90-170', '91-208', '93-73', '93-99', '95-76', '95-79', '96-109', '96-124']"
  },
  {
    "Query": "find residential parcels smaller than 10000 square feet and larger than 8000 square feet",
    "Code": "import geopandas as gpd\n\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\n\n# Define projected CRS for Cambridge, MA\ncambridge_crs = 26986\n\n# Project to accurate CRS\nparcels_proj = parcels.to_crs(cambridge_crs)\n\n# Define residential use codes based on the land use table\nresidential_use_codes = [\n    '101',   # SNGL-FAM-RES\n    '1014',  # SINGLE FAM W/AU\n    '102',   # CONDOMINIUM\n    '1028',  # CNDO-RES-PKG\n    '104',   # TWO-FAM-RES\n    '105',   # THREE-FM-RES\n    '109',   # MULTIPLE-RES\n    '1094',  # MULT-RES-2FAM\n    '1095',  # MULT-RES-3FAM\n    '1098',  # MULT-RES-4-8-APT\n    '111',   # 4-8-UNIT-APT\n    '112',   # >8-UNIT-APT\n    '113',   # ASSISTED-LIV\n    '114',   # AFFORDABLE APT\n    '121',   # BOARDING-HSE\n    '970',   # Housing Authority\n    '9700'   # Housing Authority\n]\n\n# Filter for residential parcels within the size range\nresidential_parcels = parcels_proj[\n    (parcels_proj['use_code'].astype(str).isin(residential_use_codes)) & \n    (parcels_proj['land_area'] > 8000) & \n    (parcels_proj['land_area'] < 10000)\n].copy()\n\n# Sort by parcel ID (ml) for consistency\nresidential_parcels = residential_parcels.sort_values('ml')\n\n# Convert back to original CRS\nresidential_parcels = residential_parcels.to_crs(parcels.crs)\n\n# Extract parcel IDs\nresult_ids = residential_parcels['ml'].tolist()\n\n# Print results\nprint(result_ids)",
    "Answer": "['101-160', '101-52', '102-115', '102-133', '102-23', '102-26', '102-33', '102-45', '102-73', '102-78', '103-14', '104-32', '104-63', '105-8', '107-21', '107-77', '107-99', '108-35', '108-87', '110-94', '112-124', '112-139', '112-35', '112-36', '112-62', '112-63', '113-67', '113-80', '113-82', '114-4', '114-6', '114-92', '114A-68', '115-103', '116-119', '116-14', '116-20', '116-24', '116-34', '116-6', '116-62', '116-92', '117-17', '117-55', '117-71', '118-15', '118-55', '118-80', '122-125', '122-198', '122-40', '123-18', '123-33', '123-9', '124-38', '124-88', '130-128', '131-38', '131-40', '134-10', '134-27', '134-28', '134-44', '134-9', '135-114', '135-12', '135-19', '135-42', '135-44', '136-22', '139-12', '139-88', '140-67', '141-76', '142-11', '142-119', '142-80', '145-16', '145-40', '146-15', '146-20', '146-78', '146-89', '146A-125', '146A-137', '146A-27', '146A-29', '147-36', '147-38', '147-50', '147-57', '149-38', '149-65', '149-93', '150-125', '150-137', '151-75', '153-20', '153-3', '153-34', '154-30', '154-38', '154-39', '155-13', '156-65', '156-66', '167-18', '167-28', '167-88', '168-38', '17-6', '17-89', '172-14', '172-18', '172-3', '172-37', '172-50', '172-62', '172-67', '172-68', '173-20', '173-24', '173-41', '173-43', '173-51', '173-61', '173-64', '174-49', '174-51', '174-53', '176-18', '176-50', '176-51', '176-7', '177-43', '177-6', '178-107', '180-15', '180-45', '180-66', '182-46', '183-99', '184-172', '184-44', '185-57', '188-41', '188-69', '190-229', '190-233', '190-258', '190-272', '192-11', '192-112', '192-12', '192-13', '192-14', '192-15', '192-161', '192-70', '192-8', '192-9', '192-96', '193-180', '194-12', '194-18', '194-67', '194-7', '195-115', '195-60', '195-94', '196-120', '196-129', '196-21', '196-3', '198-75', '198-81', '199-175', '199-48', '199-86', '199-89', '199-91', '201-121', '201-77', '201.5-42', '202-107', '202-19', '202-49', '203A-15', '203A-7', '203A-8', '206-31', '207-1', '207-24', '207-25', '207-27', '207-40', '207-43', '207-50', '207-63', '207-65', '207-66', '207-71', '209-27', '209-28', '209-40', '209-51', '209-60', '209-9', '210-40', '210-41', '210-44', '210-57', '211-24', '211-47', '211-48', '211-55', '211-56', '212-1', '212-19', '212-32', '212-7', '214-37', '214-44', '214-7', '215-15', '215-22', '215-34', '215-35', '215-8', '216-21', '216-23', '216-24', '216-30', '217-19', '217-23', '217-24', '218-17', '218-28', '218-30', '218-39', '219-10', '219-39', '219-47', '219-48', '220-162', '220-176', '220-184', '220-73', '220-74', '221-10', '221-114', '221-87', '222-11', '222-20', '222-24', '222-26', '222-46', '223-11', '223-32', '223-33', '223-65', '223-68', '223-69', '224-35', '224-7', '226-51', '226-60', '227-39', '227-40', '227-41', '227-63', '227-68', '227-94', '229-12', '229-41', '23-69', '230-104', '230-20', '232-57', '233-125', '234-191', '234-25', '234-38', '235-10', '235-24', '235-56', '235-76', '235-82', '235-85', '236-130', '236-45', '236-60', '236-76', '236-77', '236-96', '236-98', '237-19', '237-57', '238-25', '238-35', '238-83', '239-53', '239-58', '239-68', '240-18', '240-3', '240-42', '240-49', '240-53', '240-9', '242A-107', '242A-109', '242A-112', '242A-113', '242A-120', '242A-123', '242A-126', '242A-59', '242A-72', '242A-91', '246-24', '246-28', '246-30', '246A-13', '247-158', '247-193', '247-194', '249-136', '249-151', '249-153', '249-198', '249-200', '249-201', '249-204', '249-205', '249-58', '250-12', '250-138', '250-139', '250-161', '250-168', '250-169', '250-207', '250-208', '250-215', '250-216', '250-25', '250-31', '251-116', '251-163', '251-189', '251-214', '251-219', '251-220', '251-249', '251-251', '251-67', '251-70', '251-77', '253-157', '253-69', '253-71', '253-72', '253-73', '253-74', '254-100', '254-24', '254-25', '254-26', '254-29', '254-30', '254-31', '254-32', '254-35', '254-36', '254-65', '255-104', '255-82', '256-85', '256-92', '257-24', '258-6', '26-180', '261-132', '262-133', '266-18', '267A-237', '267B-164', '267B-204', '267C-56', '267C-88', '268B-16', '268B-46', '271-22', '271-77', '271-8', '33-65', '36-124', '36-73', '39-96', '42-68', '65-52', '69-115', '75-112', '76-126', '77-19', '77-69', '77-76', '77-92', '79-112', '83-48', '87-14', '87-157', '88-67', '89-46', '91-29', '91-99', '93-100', '93-18', '93-67', '94-181', '94-87', '96-20', '97-7', '98-24']"
  },
  {
    "Query": "find industrial parcels have no more than 3 residential parcels in 100 meters",
    "Code": "import geopandas as gpd\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')  # not used in this query\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')  # not used in this query\n# Define projected CRS for Cambridge, MA\ncambridge_crs = 26986\n# Project to accurate CRS\nparcels_proj = parcels.to_crs(cambridge_crs)\n# Define industrial and residential use codes\nindustrial_use_codes = ['400', '401', '407', '413']\nresidential_use_codes = ['101', '1014', '102', '104', '105', '109', '111', '112', '114', '970', '9700']\n# Filter parcels\nindustrial_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(industrial_use_codes)].copy()\nresidential_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(residential_use_codes)].copy()\n# Build spatial index for residential parcels\nresidential_sindex = residential_parcels.sindex\n# Optimized function using spatial index\ndef count_nearby_residential(geom, buffer_distance=100):\n    buffer = geom.buffer(buffer_distance)\n    possible_matches_index = list(residential_sindex.intersection(buffer.bounds))\n    possible_matches = residential_parcels.iloc[possible_matches_index]\n    precise_matches = possible_matches[possible_matches.intersects(buffer)]\n    return len(precise_matches)\n\n# Apply the optimized function\nindustrial_parcels['nearby_residential_count'] = industrial_parcels.geometry.apply(count_nearby_residential)\n# Filter by condition: no more than 3 nearby residential parcels\nresult_parcels = industrial_parcels[industrial_parcels['nearby_residential_count'] <= 3].copy()\n# Sort for consistent output\nresult_parcels = result_parcels.sort_values('ml')\n# Convert back to original CRS\nresult_parcels = result_parcels.to_crs(parcels.crs)\n# Extract parcel IDs\nresult_ids = result_parcels['ml'].tolist()\n# Print and optionally return\nprint(result_ids)",
    "Answer": "['16-24', '1A-67', '265B-34', '267.3-226', '267.3-228', '267.3-279', '267.4-218', '267.4-221', '267.4-254', '267.4-264', '267.4-285', '267.4-310', '267.4-311', '267C-62', '267C-73', '267D-294', '267D-334', '267E-283', '69-113', '71-56']"
  },
  {
    "Query": "find retail spaces smaller than 2000 sq ft",
    "Code": "import geopandas as gpd\n\n# Load data\nparcels = gpd.read_file('cambridge_parcels.geojson')\npoi = gpd.read_file('cambridge_poi_processed.geojson')\ncensus = gpd.read_file('cambridge_census_cambridge_pct.geojson')\n\n# Define projected CRS for Cambridge, MA\ncambridge_crs = 26986\n\n# Project to accurate CRS\nparcels_proj = parcels.to_crs(cambridge_crs)\n\n# Define retail use codes based on the land use table\nretail_use_codes = [\n    '323',  # SH-CNTR/MALL\n    '324',  # SUPERMARKET\n    '325',  # RETAIL-STORE\n    '326',  # EATING-ESTBL\n    '327',  # RETAIL-CONDO\n    '330',  # AUTO-SALES\n    '332',  # AUTO-REPAIR\n    '334',  # GAS-STATION\n    '341'   # BANK\n]\n\n# Filter for retail parcels smaller than 2000 sq ft\nsmall_retail_parcels = parcels_proj[\n    (parcels_proj['use_code'].astype(str).isin(retail_use_codes)) & \n    (parcels_proj['land_area'] < 2000)\n].copy()\n\n# Sort by parcel ID (ml) for consistency\nsmall_retail_parcels = small_retail_parcels.sort_values('ml')\n\n# Convert back to original CRS\nsmall_retail_parcels = small_retail_parcels.to_crs(parcels.crs)\n\n# Extract parcel IDs\nresult_ids = small_retail_parcels['ml'].tolist()\n\n# Print results\nprint(result_ids)",
    "Answer": "['133-48', '159-2', '160-76', '160-83', '160-84', '162-29', '166-106', '182-89', '20-92', '23-156', '230-41', '236-146', '254-78', '36-137', '69-162', '90-125', '97-111']"
  }
]
