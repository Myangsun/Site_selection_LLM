{
    "Query": "find parcels that are (large office spaces over 60000 sq ft AND in areas with high advanced degree residents) OR (mixed-use parcels with substantial retail in educational hubs)   ",
    "Code": " import geopandas as gpd
import pandas as pd


# Load data
parcels = gpd.read_file('data/cambridge_parcels.geojson')
poi = gpd.read_file('data/cambridge_poi_processed.geojson')
census = gpd.read_file('data/cambridge_census_cambridge_pct.geojson')


# Define projected CRS for Cambridge, MA
cambridge_crs = 26986


# Project to accurate CRS
parcels_proj = parcels.to_crs(epsg=cambridge_crs)
poi_proj = poi.to_crs(epsg=cambridge_crs)
census_proj = census.to_crs(epsg=cambridge_crs)


# --- CONDITION 1: Large office parcels over 15,000 sq ft in high education zones ---
# Filter office use parcels >15,000 sq ft
large_office = parcels_proj[
    (parcels_proj['use_code'].astype(str).str.startswith('3')) &
    (parcels_proj['land_area'] > 60000)
].copy()


# Filter census areas with high advanced education
edu_cols = ['pct_bachelors', 'pct_masters', 'pct_phd']
for col in edu_cols:
    if col not in census_proj.columns:
        census_proj[col] = 0


high_degree_census = census_proj[
    (census_proj['pct_bachelors'] > 30) |
    (census_proj['pct_masters'] > 15) |
    (census_proj['pct_phd'] > 5)
].copy()


# Spatial join: office parcels in those census tracts
large_office_in_edu = gpd.sjoin(large_office, high_degree_census, how='inner', predicate='within')


# --- CONDITION 2: Mixed-use parcels with substantial retail near educational hubs ---
# Mixed-use codes that typically include housing+retail
mixed_use_codes = ['101', '102', '104', '105', '109']
retail_use_codes = ['323', '324', '325', '326', '327', '330']


mixed_use = parcels_proj[parcels_proj['use_code'].astype(str).isin(mixed_use_codes)].copy()
retail_poi = poi_proj[poi_proj['business_type'].isin(['retail', 'restaurant'])].copy()


# Function: mixed-use parcel has 5+ retail POI within 100m
def has_substantial_retail(parcel_geom, retail_gdf, buffer_distance=100):
    buffer = parcel_geom.buffer(buffer_distance)
    count = retail_gdf[retail_gdf.geometry.intersects(buffer)].shape[0]
    return count >= 5


# Check each mixed-use parcel
mixed_use_ids = []
for idx, row in mixed_use.iterrows():
    if has_substantial_retail(row.geometry, retail_poi):
        mixed_use_ids.append(row['ml'])


# Combine both conditions
office_ids = large_office_in_edu['ml'].tolist()
all_ids = sorted(set(office_ids) | set(mixed_use_ids))


# Reproject back to original CRS
parcels_proj = parcels_proj.to_crs(parcels.crs)


# Output results
print(f"Found {len(all_ids)} parcels matching criteria")
print(f"Parcel IDs: {all_ids}")
",
    "Answer": "['101-114', '101-115', '101-116', '101-117', '101-121', '101-122', '101-123', '101-124', '101-181', '101-191', '101-192', '101-193', '101-194', '101-198', '101-200', '101-52', '101-53', '102-116', '102-130', '102-131', '102-134', '102-135', '102-136', '102-137', '102-138', '102-139', '102-140', '102-23', '102-27', '102-28', '102-29', '102-30', '102-31', '102-32', '102-33', '102-44', '102-50', '102-51', '102-52', '102-53', '102-54', '102-58', '102-60', '102-68', '102-69', '102-70', '102-71', '102-72', '102-76', '102-77', '102-78', '102-89', '102-91', '104-134', '104-135', '104-145', '104-81', '104-83', '104-84', '104-85', '104-86', '104-88', '104-89', '104-91', '104-92', '104-93', '104-94', '105-10', '105-102', '105-11', '105-111', '105-115', '105-116', '105-13', '105-136', '105-137', '105-138', '105-139', '105-14', '105-140', '105-22', '105-31', '105-32', '105-4', '105-6', '105-91', '105-92', '105-94', '105-95', '106-45', '107-105', '107-107', '107-47', '107-48', '107-49', '107-83', '107-84', '107-89', '110-122', '110-123', '110-124', '110-14', '110-22', '110-23', '110-24', '110-25', '110-26', '110-51', '110-52', '110-75', '110-98', '114A-101', '114A-102', '114A-115', '114A-19', '114A-63', '114A-64', '116-119', '116-120', '116-14', '116-6', '117-105', '117-59', '119-103', '119-104', '119-105', '119-106', '119-107', '119-108', '119-14', '119-16', '119-18', '119-19', '119-20', '119-34', '119-38', '119-52', '119-97', '120-105', '120-106', '120-107', '120-25', '120-27', '120-68', '120-87', '120-88', '121-12', '121-89', '121-90', '121-96', '121-97', '121-98', '121-99', '123-37', '125-103', '125-104', '125-107', '125-109', '125-110', '125-111', '125-118', '125-119', '125-120', '125-121', '125-122', '125-131', '125-133', '125-134', '125-23', '125-24', '125-25', '125-26', '125-27', '125-30', '125-32', '125-35', '125-36', '125-40', '125-41', '125-43', '125-45', '125-46', '125-48', '125-50', '125-51', '125-58', '125-59', '125-60', '125-61', '125-62', '125-8', '125-87', '125-91', '125-92', '127-1', '132-131', '132-143', '132-144', '132-145', '132-146', '132-18', '132-19', '132-4', '132-98', '134-13', '134-16', '134-36', '134-37', '134-38', '134-5', '134-51', '134-52', '134-6', '153-12', '153-4', '153-5', '153-77', '153-83', '154-104', '154-105', '154-113', '154-66', '154-67', '154-68', '154-71', '154-72', '154-76', '154-80', '154-81', '154-92', '155-2', '155-38', '156-101', '156-103', '156-2', '156-70', '156-71', '156-72', '156-73', '156-99', '162-14', '166-78', '166-79', '167-21', '168-47', '168-58', '168-6', '169-15', '169-17', '169-18', '169-19', '17-34', '17-81', '17-82', '173-12', '173-30', '173-37', '173-38', '174-10', '174-11', '174-13', '174-14', '174-16', '174-17', '174-18', '174-19', '174-21', '174-22', '174-23', '174-35', '174-41', '174-68', '174-69', '174-76', '174-78', '174-79', '174-84', '174-85', '174-86', '174-87', '174-88', '174-89', '174-9', '174-90', '174-91', '174-92', '175-20', '175-21', '175-22', '175-26', '175-31', '175-32', '175-36', '175-44', '175-59', '175-60', '175-65', '175-80', '175-82', '175-83', '175-89', '176-10', '176-18', '176-19', '176-20', '176-43', '176-44', '176-58', '176-69', '176-70', '176-83', '176-84', '176-87', '177-13', '177-41', '177-42', '177-80', '177-81', '177-84', '178-101', '178-102', '178-108', '178-109', '178-110', '178-111', '178-125', '178-126', '178-127', '178-16', '178-22', '178-23', '178-24', '178-25', '178-26', '178-27', '178-34', '178-35', '178-36', '178-37', '178-58', '178-59', '178-60', '178-63', '178-64', '178-72', '178-73', '178-74', '178-94', '178-99', '179-13', '179-40', '179-46', '179-47', '179-48', '179-49', '179-54', '179-56', '179-76', '179-77', '179-79', '179-9', '18-19', '18-20', '18-25', '18-53', '181-22', '181-23', '181-27', '181-28', '181-39', '181-53', '182-11', '182-16', '182-23', '182-27', '182-4', '182-49', '182-5', '182-50', '182-51', '182-54', '182-59', '182-6', '182-60', '182-61', '182-62', '182-63', '182-70', '182-71', '182-72', '182-73', '182-76', '182-77', '182-78', '182-87', '182-95', '182-96', '183-101', '184-135', '184-136', '184-137', '189-76', '191-100', '191-101', '191-102', '191-106', '191-107', '191-108', '191-40', '191-41', '191-42', '191-43', '191-44', '191-45', '191-46', '191-47', '191-5', '191-68', '191-69', '191-78', '191-79', '191-93', '191-94', '191-95', '191-98', '191-99', '192-126', '192-127', '192-128', '192-129', '192-130', '192-135', '192-140', '192-161', '192-34', '192-44', '196-129', '199-112', '199-113', '199-153', '199-72', '20-102', '20-105', '20-16', '20-17', '20-18', '20-80', '20-94', '200-16', '200-17', '200-28', '200-29', '200-30', '200-45', '200-50', '200-74', '200-80', '200-82', '200-83', '200-88', '21-112', '21-113', '21-3', '21-39', '21-4', '21-40', '21-41', '21-43', '21-48', '21-50', '21-51', '21-52', '21-78', '21-79', '21-80', '21-81', '21-83', '226-54', '226-55', '226-68', '227-10', '227-11', '227-111', '227-112', '227-12', '227-33', '227-8', '227-9', '227-97', '229-100', '229-103', '229-111', '229-116', '229-119', '229-130', '229-149', '229-151', '229-152', '229-158', '229-35', '229-36', '229-37', '229-41', '229-42', '229-43', '229-44', '229-45', '229-47', '229-48', '229-56', '229-57', '229-62', '229-63', '229-97', '229-98', '229-99', '23-108', '23-109', '23-11', '23-125', '23-131', '23-132', '23-133', '23-144', '23-147', '23-148', '23-15', '23-151', '23-152', '23-155', '23-2', '23-22', '23-24', '23-27', '23-28', '23-3', '23-44', '23-45', '23-51', '23-52', '23-53', '23-58', '23-60', '23-67', '23-68', '23-69', '23-7', '23-70', '23-72', '23-73', '23-77', '23-78', '23-79', '23-98', '23-99', '230-102', '230-140', '230-141', '230-15', '230-16', '230-17', '230-38', '230-5', '230-72', '230-73', '230-8', '230-83', '230-9', '230-94', '230-98', '233-110', '233-111', '233-112', '233-122', '233-123', '233-124', '233-125', '233-164', '233-165', '233-166', '233-167', '233-168', '233-176', '233-204', '233-205', '233-214', '234-110', '234-194', '234-66', '234-67', '236-107', '236-136', '236-145', '236-61', '236-65', '236-68', '236-72', '236-78', '236-79', '236-80', '236-81', '236-82', '236-83', '236-85', '236-86', '236-87', '236-88', '236-89', '236-90', '236-91', '236-98', '236-99', '237-34', '237-47', '237-63', '237-64', '24-110', '24-111', '24-112', '24-114', '24-116', '24-117', '24-124', '262-109', '262-110', '262-111', '262-112', '262-113', '262-114', '262-117', '262-118', '262-119', '262-120', '263-102', '263-103', '263-114', '263-48', '263-49', '263-50', '263-51', '263-52', '263-54', '263-55', '263-56', '263-57', '263-58', '263-59', '263-75', '34-108', '34-11', '34-113', '34-12', '34-121', '34-122', '34-125', '34-13', '34-135', '34-14', '34-142', '34-143', '34-147', '34-148', '34-15', '34-16', '34-17', '34-18', '34-21', '34-23', '34-30', '34-31', '34-33', '34-34', '34-35', '34-36', '34-37', '34-38', '34-39', '34-4', '34-46', '34-48', '34-49', '34-5', '34-52', '34-57', '34-91', '35-21', '35-23', '35-24', '35-25', '35-26', '35-27', '35-28', '35-29', '35-30', '35-31', '35-38', '35-39', '35-43', '35-44', '35-47', '35-48', '35-49', '35-62', '35-63', '35-73', '35-96', '35-97', '35-98', '36-198', '36-199', '36-215', '36-236', '36-237', '37-101', '37-103', '37-115', '37-21', '40-136', '40-14', '40-144', '40-187', '40-188', '40-202', '40-203', '40-205', '40-206', '40-208', '40-209', '40-210', '40-211', '40-212', '40-214', '40-216', '40-217', '40-218', '40-219', '40-220', '40-221', '40-223', '40-227', '40-228', '40-232', '40-233', '40-236', '40-242', '40-255', '40-256', '40-9', '42-18', '42-19', '42-21', '42-22', '42-23', '42-92', '42-93', '42-95', '70-97', '74-10', '74-11', '74-12', '74-27', '74-5', '75-113', '75-114', '75-115', '75-127', '75-15', '75-46', '75-58', '75-59', '75-66', '76-124', '76-131', '76-132', '76-26', '76-40', '76-53', '76-54', '76-55', '76-66', '76-91', '76-92', '77-82', '79-3', '79-93', '80-4', '80-8', '82-10', '82-102', '82-24', '82-25', '82-26', '82-27', '82-28', '82-30', '82-34', '82-36', '82-37', '82-38', '82-59', '82-60', '82-70', '82-80', '82-83', '82-84', '82-85', '82-88', '82-89', '82-90', '82-91', '82-93', '82-94', '82-95', '83-21', '83-25', '83-28', '83-29', '83-3', '83-30', '83-31', '83-32', '83-33', '83-34', '83-37', '83-38', '83-39', '83-4', '83-40', '83-41', '83-42', '83-43', '83-44', '83-49', '83-50', '83-57', '83-64', '83-68', '83-69', '83-70', '83-74', '83-77', '83-78', '83-79', '83-82', '83-83', '83-91', '83-97', '84-24', '84-25', '84-27', '84-29', '84-30', '84-33', '84-39', '84-55', '84-56', '84-57', '84-58', '84-59', '84-60', '84-74', '84-76', '84-86', '84-89', '84-90', '84-95', '84-96', '85-10', '85-100', '85-103', '85-14', '85-17', '85-2', '85-23', '85-25', '85-3', '85-30', '85-33', '85-37', '85-38', '85-72', '85-75', '85-80', '85-81', '85-82', '85-84', '85-85', '85-86', '85-87', '85-93', '86-31', '86-32', '86-34', '86-35', '86-45', '86-90', '86-91', '86-98', '86-99', '88-29', '88-32', '88-36', '88-37', '88-41', '88-42', '88-46', '88-56', '88-57', '88-58', '88-59', '88-60', '88-64', '88-65', '88-70', '90-122', '90-16', '90-172', '90-173', '90-174', '91-107', '91-181', '91-35', '91-78', '93-101', '93-104', '93-105', '93-108', '93-109', '93-110', '93-120', '93-124', '93-50', '93-51', '93-54', '93-55', '93-58', '93-60', '93-68', '93-69', '93-89']",
    "Category": "Business_Environment_Constraints",
    "Subcategory": "Competitor Density"
  },






{
    "Query": " identify parcels where (pct_adv_deg > 40% AND land_area > 8000 sq ft) OR (land_area > 12000 AND use_code IN [commercial_codes])  ",
    "Code": " import geopandas as gpd
import pandas as pd


# Load data
parcels = gpd.read_file('data/cambridge_parcels.geojson')
census = gpd.read_file('data/cambridge_census_cambridge_pct.geojson')


# Define commercial use codes
commercial_codes = [
    '300', '302', '316', '323', '324', '325', '326', '327', 
    '330', '332', '334', '340', '341', '343', '345', '346',
    '353', '362', '375', '404', '406', '0340', '0406'
]


# Define projected CRS for Cambridge
cambridge_crs = 26986
parcels_proj = parcels.to_crs(epsg=cambridge_crs)
census_proj = census.to_crs(epsg=cambridge_crs)


# Ensure 'pct_adv_deg' exists
if 'pct_adv_deg' not in census_proj.columns:
    raise ValueError("'pct_adv_deg' column not found in census data")


# Spatial join: assign education % to each parcel
parcels_with_edu = gpd.sjoin(parcels_proj, census_proj[['pct_adv_deg', 'geometry']], how='left', predicate='within')


# Condition 1: pct_adv_deg > 40 AND land_area > 8000
cond1 = (parcels_with_edu['pct_adv_deg'] > 40) & (parcels_with_edu['land_area'] > 8000)


# Condition 2: land_area > 12000 AND use_code in commercial codes
cond2 = (parcels_with_edu['land_area'] > 12000) & (
    parcels_with_edu['use_code'].astype(str).isin(commercial_codes)
)


# Combine conditions
combined = parcels_with_edu[cond1 | cond2].copy()


# Sort and convert back to original CRS
combined = combined.sort_values('ml').to_crs(parcels.crs)


# Output result
result_ids = combined['ml'].tolist()
print(f"Found {len(result_ids)} parcels")
print(f"Parcel IDs: {result_ids}")
  ",
    "Answer": " ['10-16', '100-62', '100-68', '100-86', '105-81', '106-124', '107-117', '107-136', '11-146', '11-40', '110-63', '110-87', '114A-66', '116-117', '116-12', '119-95', '12-19', '121-2', '121-94', '128-63', '128-70', '128-71', '128-72', '129-11', '129-58', '13-16', '13-23', '133-23', '133-33', '133-36', '134-59', '136-15', '14-36', '14-39', '14-44', '14-45', '14-47', '14-58', '14-64', '140-148', '15-28', '15-29', '15-3', '15-30', '152-25', '154-101', '156-25', '16-23', '16-32', '160-11', '160-14', '160-48', '160-57', '160-69', '162-54', '165-34', '165-53', '165-55', '165-57', '168-13', '168-22', '168-33', '168-36', '168-41', '168-60', '169-100', '169-102', '169-46', '169-98', '169-99', '17-74', '17-84', '170-39', '172-29', '175-37', '175-75', '176-15', '177-34', '178-118', '178-133', '178-21', '179-87', '18-65', '18-74', '18-77', '181-80', '181-88', '182-84', '182-98', '183-119', '183-97', '184-159', '184-168', '186-96', '189-57', '19-22', '19-23', '191-112', '192-39', '196-154', '199-31', '1A-105', '1A-172', '1A-189', '1A-190', '1A-192', '1A-200', '1A-201', '1A-209', '1A-213', '1A-70', '20-75', '203A-76', '203B-52', '219-37', '22-109', '226-67', '23-149', '23-90', '230-71', '234-178', '248-82', '252-160', '252-172', '260-46', '260-73', '260-74', '260-76', '261-77', '265A-29', '265A-43', '265A-7', '265B-26', '265B-28', '265B-59', '265B-61', '265C-25', '265D-53', '267.1-278', '267.2-264', '267.2-267', '267.2-272', '267.2-273', '267.3-253', '267.3-278', '267.3-285', '267.4-209', '267.4-247', '267.4-284', '267.4-288', '267.4-295', '267.4-296', '267.4-305', '267.4-307', '267.4-313', '267.4-319', '267.4-322', '267.4-323', '267C-70', '267C-71', '267D-256', '267D-282', '267D-285', '267D-286', '267D-299', '267D-305', '267D-310', '267D-311', '267D-319', '267D-325', '267D-329', '267E-234', '267E-244', '267E-279', '267E-282', '267E-284', '267E-285', '267F-274', '267F-279', '267F-281', '267F-283', '267F-293', '267F-296', '267F-301', '267F-391', '268C-32', '268C-35', '269-138', '27-82', '273-2', '273-35', '273-51', '28-23', '29-50', '30-35', '30-38', '30-40', '30-41', '30-42', '31-15', '31-20', '32-53', '35-36', '39-173', '39-179', '41-26', '41-29', '41-36', '41-37', '41-38', '42-33', '42-70', '42-86', '42-87', '42-97', '43-70', '43-71', '43-73', '43-76', '43-77', '43-78', '43A-16', '43A-21', '43A-24', '43A-28', '44-100', '44-104', '44-105', '44-106', '44-99', '46-12', '47-94', '47-97', '48-158', '54-19', '54-25', '55-18', '63-128', '63-132', '63-134', '63-135', '64-6', '66-153', '67-47', '67-48', '67-66', '67-67', '68-47', '68-76', '68-77', '69-148', '69-159', '69-165', '69-173', '69-179', '69-182', '69-183', '69-62', '7-115', '7-31', '7-35', '7-37', '70-22', '70-74', '70-86', '70-90', '71-55', '75-170', '8-75', '8-76', '8-86', '8-91', '80-175', '81-103', '81-50', '84-101', '84-85', '84-97', '85-76', '88-53', '9-31', '9-41', '9-61', '90-133', '90-14', '90-155', '90-162', '90-169', '90-170', '91-208', '92-127', '92-88', '94-7', '95-71', '95-72', '95-74', '95-75', '95-76', '95-78', '95-79'] ",
    "Category": "Business_Environment_Constraints",
    "Subcategory": "Competitor Density"
  },






{
    "Query": " find parcels where, if zoned for commercial use, then land area must be greater than 9000 sq ft and smaller than 10000, otherwise land area must be between 6000 and 6500 sq ft  ",
    "Code": " import geopandas as gpd
import pandas as pd


# Load parcel data
parcels = gpd.read_file('data/cambridge_parcels.geojson')


# Define projected CRS for Cambridge
cambridge_crs = 26986
parcels_proj = parcels.to_crs(cambridge_crs)


# Define commercial use codes
commercial_use_codes = [
    '300', '302', '316', '323', '324', '325', '326', '327',
    '330', '332', '334', '340', '341', '343', '345', '346',
    '353', '362', '375', '404', '406', '0340', '0406'
]


# Identify commercial parcels
parcels_proj['is_commercial'] = parcels_proj['use_code'].astype(str).isin(commercial_use_codes)


# Apply conditional filtering
condition = (
    (parcels_proj['is_commercial'] & (parcels_proj['land_area'] > 9000)& (parcels_proj['land_area'] <= 10000)) |
    (~parcels_proj['is_commercial'] & (parcels_proj['land_area'] >= 6000) & (parcels_proj['land_area'] <= 6500))
)
result_parcels = parcels_proj[condition].copy()


# Sort and convert back to original CRS
result_parcels = result_parcels.sort_values('ml').to_crs(parcels.crs)


# Output results
result_ids = result_parcels['ml'].tolist()
print(f"Found {len(result_ids)} parcels matching criteria")
print(f"Parcel IDs: {result_ids}")
   ",
    "Answer": " ['100-4', '100-51', '100-76', '101-119', '101-143', '101-193', '101-198', '102-65', '102-68', '102-77', '103-29', '103-56', '103-70', '104-126', '105-32', '105-67', '105-77', '105-82', '106-120', '106-47', '106-48', '106-60', '107-128', '107-135', '107-9', '108-85', '108-94', '110-19', '110-45', '110-91', '111-30', '111-43', '112-26', '113-24', '113-47', '113-69', '113-85', '114-129', '114A-114', '114A-67', '115-11', '115-64', '115-72', '115-86', '116-13', '116-79', '117-29', '117-40', '117-41', '117-49', '117-52', '117-58', '118-25', '118-27', '118-4', '118-8', '119-33', '120-31', '120-68', '121-102', '121-16', '121-17', '121-46', '123-22', '124-16', '127-119', '127-164', '129-55', '130-135', '130-16', '130-83', '131-50', '134-21', '134-6', '135-26', '136-11', '136-12', '136-19', '139-1', '139-16', '139-49', '139-61', '139-62', '139-85', '139-91', '14-26', '140-144', '141-65', '141-92', '142-128', '142-29', '142-51', '142-6', '142-86', '142-87', '146-79', '146-88', '146A-139', '149-24', '149-29', '149-42', '149-97', '15-31', '150-123', '150-67', '150-76', '153-4', '153-83', '154-112', '154-13', '154-14', '154-15', '154-42', '154-47', '156-103', '156-18', '16-11', '162-49', '166-4', '167-45', '167-65', '168-57', '169-3', '169-85', '170-30', '172-51', '173-16', '173-74', '173-78', '173-81', '174-41', '174-70', '174-76', '174-93', '175-10', '175-56', '175-91', '176-1', '176-10', '176-43', '176-56', '177-3', '177-37', '177-38', '177-41', '177-42', '177-45', '177-46', '177-62', '177-63', '177-66', '178-117', '18-64', '180-1', '180-12', '180-31', '180-67', '180-71', '181-15', '181-19', '181-37', '182-16', '182-32', '183-67', '184-191', '184-35', '185-26', '185-27', '188-122', '188-143', '188-39', '189-34', '189-8', '189-9', '19-10', '190-107', '190-115', '190-130', '190-132', '190-133', '190-44', '190-45', '190-46', '190-50', '190-51', '190-55', '190-61', '190-62', '190-63', '190-71', '190-72', '190-73', '190-74', '190-75', '190-78', '192-113', '192-140', '192-144', '192-176', '192-21', '192-22', '192-23', '192-25', '192-26', '192-27', '192-28', '192-29', '192-30', '192-31', '192-78', '192-79', '192-80', '192-81', '192-82', '192-83', '193-10', '193-101', '193-103', '193-105', '193-106', '193-107', '193-108', '193-11', '193-12', '193-123', '193-127', '193-128', '193-129', '193-13', '193-130', '193-131', '193-138', '193-139', '193-14', '193-140', '193-141', '193-143', '193-144', '193-145', '193-146', '193-149', '193-15', '193-150', '193-191', '193-20', '193-213', '193-219', '193-220', '193-23', '193-24', '193-25', '193-26', '193-27', '193-28', '193-41', '193-42', '193-43', '193-44', '193-45', '193-46', '193-47', '193-54', '193-55', '193-56', '193-57', '193-59', '193-67', '193-77', '193-78', '193-92', '193-93', '193-94', '194-78', '195-160', '196-45', '196-46', '196-47', '196-80', '196-81', '198-10', '198-14', '198-15', '198-16', '198-41', '198-9', '198-90', '199-112', '200-91', '201-108', '201-23', '201-74', '201-76', '201.5-1', '201.5-19', '201.5-21', '201.5-27', '201.5-28', '201.5-29', '201.5-39', '201.5-43', '201.5-73', '201.5-9', '202-111', '202-18', '202-20', '202-28', '203B-25', '204-146', '204-152', '204-80', '206-13', '206-16', '206-19', '206-24', '207-41', '207-42', '209-53', '21-1', '21-120', '210-10', '210-20', '210-21', '210-23', '210-55', '211-10', '211-15', '214-2', '214-4', '218-12', '218-33', '218-34', '22-46', '220-167', '220-52', '225-26', '225-45', '225-55', '225-56', '227-93', '229-123', '229-124', '229-125', '229-26', '229-49', '229-90', '229-91', '229-92', '229-93', '229-94', '229-95', '229-96', '23-17', '23-26', '230-133', '230-18', '230-2', '230-48', '230-49', '230-5', '232-58', '233-168', '233-169', '233-198', '233-204', '234-173', '234-192', '234-49', '234-83', '234-84', '234-85', '234-86', '234-87', '234-88', '234-89', '234-90', '235-89', '236-117', '236-127', '236-129', '236-95', '239-48', '24-13', '24-133', '24-140', '24-90', '246A-31', '247-10', '247-111', '247-112', '247-113', '247-114', '247-126', '247-127', '247-128', '247-129', '247-130', '247-131', '247-136', '247-142', '247-143', '247-144', '247-145', '247-146', '247-147', '247-148', '247-149', '247-150', '247-151', '247-152', '247-153', '247-160', '247-161', '247-162', '247-168', '247-169', '247-173', '247-174', '247-207', '247-208', '247-211', '247-212', '247-214', '247-222', '247-223', '247-224', '247-78', '247-79', '248-89', '249-14', '249-15', '249-16', '249-17', '249-18', '249-199', '249-57', '25-152', '250-210', '251-167', '251-184', '251-203', '251-215', '251-221', '251-230', '251-241', '251-250', '251-252', '251-31', '251-41', '251-42', '252-151', '252A-137', '253-75', '254-53', '254-64', '254-69', '254-90', '255-13', '255-14', '255-8', '256-103', '256-84', '257-8', '258-34', '26-64', '260-63', '263-111', '267A-153', '267A-200', '267A-250', '267A-253', '267B-2', '267B-206', '267B-207', '267B-209', '267B-47', '267C-44', '267C-86', '267D-316', '268B-15', '269-10', '269-11', '269-113', '269-114', '269-118', '269-12', '269-13', '269-14', '269-18', '269-21', '269-22', '269-23', '269-24', '269-25', '269-9', '27-88', '272-10', '273-38', '34-137', '36-116', '37-35', '37-47', '39-128', '65-11', '65-12', '65-13', '65-3', '65-4', '65-5', '67-56', '67-61', '74-1', '75-72', '75-89', '76-11', '76-89', '77-31', '77-39', '79-59', '79-6', '79-72', '8-88', '80-9', '81-100', '82-1', '84-1', '84-91', '86-19', '86-31', '87-106', '87-127', '87-53', '87-69', '87-88', '88-54', '89-73', '90-36', '90-55', '91-118', '91-70', '91-90', '92-120', '94-151', '96-98', '97-60', '97-85', '97-86', '98-52', '98-67', '98-82', '99-21', '99-25', '99-27', '99-32', '99-40'] ",
    "Category": "Business_Environment_Constraints",
    "Subcategory": "Competitor Density"
  },






{
    "Query": " find properties that must have at least 5 nearby restaurants if they are retail, but if they are office, must have more than 2 similar properties within 500m  ",
    "Code": "  import geopandas as gpd
import pandas as pd


# Load data
parcels = gpd.read_file('data/cambridge_parcels.geojson')
poi = gpd.read_file('data/cambridge_poi_processed.geojson')
cambridge_crs = 26986


# Project to accurate CRS
parcels_proj = parcels.to_crs(cambridge_crs)
poi_proj = poi.to_crs(cambridge_crs)


# Define use codes
retail_codes = ['323', '324', '325', '326', '327', '330']
office_codes = ['340', '341', '343', '345', '346', '353', '362', '375']


# Filter retail and office parcels
retail_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(retail_codes)].copy()
office_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(office_codes)].copy()


# Filter restaurants from POI
restaurant_types = ['110', '1101', '111', '1113', '894', '412', '413', '514']
restaurants = poi_proj[poi_proj['business_type'].astype(str).isin(restaurant_types)].copy()


# ---------- CONDITION 1: Retail parcels with ≥ 5 restaurants within 200m ----------
def count_restaurants(parcel_geom, restaurant_df, distance=200):
    buffer = parcel_geom.buffer(distance)
    return restaurant_df[restaurant_df.geometry.intersects(buffer)].shape[0]


retail_valid = retail_parcels[
    retail_parcels.geometry.apply(lambda geom: count_restaurants(geom, restaurants) >= 5)
].copy()


# ---------- CONDITION 2: Office parcels with > 2 similar offices within 500m ----------
def count_similar_offices(parcel_geom, all_offices, self_idx, distance=500):
    buffer = parcel_geom.buffer(distance)
    nearby = all_offices[all_offices.geometry.intersects(buffer)]
    return nearby.shape[0] - 1  # Exclude self


office_valid = []
for idx, row in office_parcels.iterrows():
    count = count_similar_offices(row.geometry, office_parcels, idx)
    if count > 2:
        office_valid.append(row['ml'])


office_valid_df = office_parcels[office_parcels['ml'].isin(office_valid)]


# ---------- Combine results ----------
combined = pd.concat([retail_valid, office_valid_df]).drop_duplicates(subset='ml')
combined = combined.sort_values('ml')


# Convert back to original CRS
combined = combined.to_crs(parcels.crs)


# Output
result_ids = combined['ml'].tolist()
print(f"Found {len(result_ids)} parcels meeting conditional criteria")
print(f"Parcel IDs: {result_ids}")
   ",
    "Answer": " ['10-31', '10-38', '10-39', '102-25', '105-123', '105-58', '105-74', '105-77', '105-81', '105-89', '106-117', '106-123', '107-135', '107-136', '109-22', '109-51', '11-40', '110-16', '110-18', '110-21', '110-55', '110-90', '114A-66', '116-117', '117-1', '117-25', '117-29', '117-56', '118-1', '118-34', '118-79', '119-93', '119-95', '12-19', '120-17', '120-74', '121-13', '121-2', '121-94', '13-16', '13-23', '133-14', '133-15', '133-20', '133-23', '133-27', '133-28', '133-30', '133-33', '133-36', '133-49', '133-51', '134-59', '14-26', '14-36', '14-47', '14-58', '15-3', '15-30', '15-31', '152-52', '154-64', '154-65', '154-73', '156-55', '156-60', '16-23', '160-11', '160-14', '160-48', '160-57', '160-58', '160-59', '160-64', '160-67', '160-69', '160-71', '160-72', '160-77', '162-17', '162-36', '162-64', '162-65', '162-67', '162-68', '162-73', '165-53', '165-55', '165-57', '166-24', '166-33', '166-35', '166-37', '166-52', '166-77', '168-13', '168-20', '168-21', '168-22', '168-25', '168-33', '168-36', '168-41', '168-48', '168-49', '168-59', '168-60', '168-64', '169-100', '169-102', '169-42', '169-50', '169-81', '169-82', '169-84', '169-93', '169-98', '169-99', '17-10', '17-74', '17-84', '172-29', '174-26', '174-31', '175-68', '175-77', '178-1', '178-106', '178-117', '178-118', '178-133', '178-91', '179-42', '18-73', '18-74', '18-76', '181-65', '181-88', '182-8', '182-84', '182-98', '183-119', '183-97', '184-155', '184-168', '186-14', '189-57', '19-23', '190-33', '191-112', '192-39', '192-73', '192-74', '192-75', '196-153', '1A-105', '1A-172', '1A-190', '1A-200', '1A-201', '1A-209', '1A-70', '20-103', '20-31', '21-115', '21-120', '216-7', '219-37', '226-67', '229-150', '23-146', '23-149', '23-90', '230-42', '233-89', '24-133', '261-186', '261-77', '262-116', '265A-29', '265A-31', '265A-40', '265B-59', '265D-53', '267.2-267', '267.3-253', '267.4-288', '267.4-305', '267C-70', '267D-282', '267D-285', '267D-299', '267D-300', '267D-305', '267D-310', '267D-311', '267D-316', '267D-319', '267D-329', '267E-279', '267E-280', '267E-282', '267F-274', '267F-279', '267F-281', '267F-283', '267F-293', '267F-296', '267F-301', '267F-391', '268C-32', '268C-35', '27-34', '27-82', '273-29', '273-40', '273-51', '28-23', '28-31', '29-50', '31-20', '34-116', '35-34', '36-189', '36-248', '39-173', '39-179', '39-88', '40-153', '41-36', '41-38', '42-70', '42-86', '42-87', '42-94', '42-97', '42-99', '43-70', '43-73', '43-78', '43A-21', '44-100', '44-104', '44-105', '44-99', '46-12', '47-94', '54-25', '55-18', '68-19', '68-50', '69-159', '70-22', '70-74', '70-86', '75-44', '77-41', '8-75', '8-76', '80-172', '80-175', '80-3', '80-51', '81-103', '82-57', '83-1', '83-7', '83-92', '84-1', '84-67', '84-97', '85-76', '87-153', '88-53', '9-41', '90-13', '90-133', '90-14', '90-161', '90-169', '90-170', '90-185', '90-20', '90-52', '90-70', '91-118', '91-208', '91-63', '91-64', '91-81', '91-87', '93-48', '93-72', '93-73', '93-74', '93-75', '93-99', '94-6', '95-76', '95-79', '96-109', '96-110', '96-124', '96-98']   ",
    "Category": "Business_Environment_Constraints",
    "Subcategory": "Competitor Density"
  },