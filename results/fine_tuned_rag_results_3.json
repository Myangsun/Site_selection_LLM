[
  {
    "query": "Find commercial parcels within 500 meters of Harvard Square.",
    "method": "fine-tuned-rag-improved",
    "model": "ft:gpt-4o-mini-2024-07-18:mit:spatial-agent-20250508-011708:BUo8aWbm",
    "success": false,
    "code": "import geopandas as gpd\nimport pandas as pd\n\n# Load data\nparcels = gpd.read_file('../data/cambridge_parcels.geojson')\npoi = gpd.read_file('../data/cambridge_poi_processed.geojson')\ncensus = gpd.read_file('../data/cambridge_census_cambridge_pct.geojson')\nspend = pd.read_csv('../data/cambridge_spend_processed.csv')\n\n# Project to appropriate CRS for Cambridge, MA\nparcels_proj = parcels.to_crs(epsg=26986)\n\n# Define Harvard Square location\nharvard_square = gpd.GeoDataFrame(\n    geometry=[gpd.points_from_xy(-71.1189, 42.3736)],\n    crs=parcels.crs\n).to_crs(epsg=26986)\n\n# Create 500m buffer around Harvard Square\nharvard_buffer = harvard_square.buffer(500).iloc[0]\n\n# Filter commercial parcels\ncommercial_use_codes = [\n    '300', '302', '316', '323', '324', '325', '326', '327', \n    '330', '332', '334', '340', '341', '343', '345', '346', \n    '353', '362', '375', '404', '406', '0340', '0406'\n]\ncommercial_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(commercial_use_codes)]\n\n# Filter by proximity to Harvard Square\nnear_harvard = commercial_parcels[commercial_parcels.geometry.intersects(harvard_buffer)]\n\n# Sort by parcel ID (ml)\nresult_ids = near_harvard['ml'].sort_values().tolist()\n\n# Print results\nprint(result_ids)"
  },
  {
    "exact_match": 0.0,
    "result_match_rate": 0.21485411140583555,
    "precision": 0.21485411140583555,
    "recall": 1.0,
    "f1_score": 0.3537117903930131,
    "generated_count": 377,
    "ground_truth_count": 81,
    "correct_count": 81,
    "query": "Find parcels larger than 6000 square feet that are zoned for retail use.",
    "method": "fine-tuned-rag-improved",
    "model": "ft:gpt-4o-mini-2024-07-18:mit:spatial-agent-20250508-011708:BUo8aWbm",
    "success": true,
    "code": "import geopandas as gpd\nimport pandas as pd\n\n# Load data\nparcels = gpd.read_file('../data/cambridge_parcels.geojson')\npoi = gpd.read_file('../data/cambridge_poi_processed.geojson')\ncensus = gpd.read_file('../data/cambridge_census_cambridge_pct.geojson')\n\n# Project to appropriate CRS for Cambridge, MA\nparcels_proj = parcels.to_crs(epsg=26986)\n\n# Filter for retail parcels\nretail_codes = ['323', '324', '325', '326', '327', '330', '331', '332', '333', '334', '335', '336', '337', '338', '339', '340', '341', '342', '343', '344', '345', '346', '347', '348', '349']\nretail_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(retail_codes)].copy()\n\n# Filter for parcels > 6000 sq ft\nlarge_retail_parcels = retail_parcels[retail_parcels['land_area'] > 6000].copy()\n\n# Sort by parcel ID (ml)\nresult_ids = large_retail_parcels['ml'].sort_values().tolist()\n\n# Print results\nprint(result_ids)",
    "generated_ids": [
      "10-31",
      "10-38",
      "100-62",
      "100-86",
      "105-53",
      "105-67",
      "105-68",
      "105-77",
      "105-81",
      "105-82",
      "105-89",
      "105-93",
      "106-123",
      "106-124",
      "106-60",
      "107-117",
      "107-135",
      "107-136",
      "107-137",
      "107-9",
      "108-80",
      "109-22",
      "109-50",
      "109-51",
      "11-40",
      "110-16",
      "110-63",
      "110-91",
      "111-43",
      "114A-66",
      "116-100",
      "116-117",
      "116-12",
      "116-13",
      "117-29",
      "118-34",
      "119-51",
      "119-89",
      "119-95",
      "12-19",
      "120-48",
      "121-13",
      "121-2",
      "121-94",
      "125-73",
      "125-80",
      "128-63",
      "128-70",
      "128-72",
      "129-11",
      "129-55",
      "13-16",
      "13-23",
      "133-23",
      "133-33",
      "133-51",
      "134-33",
      "134-59",
      "136-15",
      "14-26",
      "14-36",
      "14-47",
      "14-58",
      "140-148",
      "140-157",
      "15-3",
      "15-30",
      "15-31",
      "152-17",
      "152-25",
      "152-52",
      "154-101",
      "156-25",
      "157-26",
      "16-11",
      "16-23",
      "160-11",
      "160-14",
      "160-48",
      "160-57",
      "160-59",
      "160-69",
      "162-26",
      "162-36",
      "162-54",
      "162-66",
      "162-67",
      "165-53",
      "165-55",
      "165-57",
      "165-60",
      "168-13",
      "168-21",
      "168-22",
      "168-25",
      "168-33",
      "168-36",
      "168-41",
      "168-59",
      "168-60",
      "168-64",
      "169-102",
      "169-42",
      "169-46",
      "169-47",
      "169-50",
      "169-84",
      "169-93",
      "169-98",
      "169-99",
      "17-74",
      "17-84",
      "172-29",
      "174-25",
      "174-26",
      "174-37",
      "175-37",
      "175-68",
      "175-75",
      "175-84",
      "176-15",
      "176-64",
      "177-71",
      "177-79",
      "178-1",
      "178-106",
      "178-117",
      "178-133",
      "178-43",
      "179-42",
      "179-87",
      "18-64",
      "18-65",
      "18-74",
      "18-75",
      "180-57",
      "181-65",
      "181-80",
      "181-88",
      "182-84",
      "182-88",
      "182-98",
      "183-100",
      "183-119",
      "183-97",
      "184-159",
      "184-168",
      "184-191",
      "184-31",
      "186-96",
      "189-57",
      "189-72",
      "189-88",
      "19-10",
      "19-23",
      "190-33",
      "191-112",
      "191-65",
      "191-85",
      "192-121",
      "192-177",
      "192-39",
      "196-154",
      "199-30",
      "199-31",
      "199-67",
      "1A-105",
      "1A-172",
      "1A-189",
      "1A-190",
      "1A-192",
      "1A-200",
      "1A-201",
      "1A-209",
      "1A-211",
      "1A-70",
      "20-31",
      "20-75",
      "200-22",
      "200-91",
      "203B-52",
      "21-118",
      "21-120",
      "21-121",
      "216-7",
      "226-46",
      "226-67",
      "229-117",
      "229-135",
      "23-149",
      "23-90",
      "230-71",
      "234-178",
      "236-148",
      "236-95",
      "24-133",
      "24-139",
      "248-82",
      "251-221",
      "251-255",
      "252-114",
      "252-160",
      "252-172",
      "252A-155",
      "252A-157",
      "254-86",
      "260-32",
      "260-46",
      "260-73",
      "260-74",
      "260-76",
      "261-77",
      "265A-29",
      "265A-31",
      "265A-7",
      "265B-26",
      "265B-28",
      "265B-57",
      "265B-59",
      "265B-61",
      "265C-25",
      "265D-53",
      "267.1-279",
      "267.2-267",
      "267.2-270",
      "267.3-253",
      "267.4-288",
      "267.4-305",
      "267.4-312",
      "267C-70",
      "267D-282",
      "267D-285",
      "267D-293",
      "267D-299",
      "267D-300",
      "267D-305",
      "267D-310",
      "267D-311",
      "267D-313",
      "267D-316",
      "267D-319",
      "267D-325",
      "267D-329",
      "267E-234",
      "267E-279",
      "267E-280",
      "267E-282",
      "267F-274",
      "267F-279",
      "267F-281",
      "267F-283",
      "267F-291",
      "267F-293",
      "267F-295",
      "267F-296",
      "267F-301",
      "267F-391",
      "268B-15",
      "268B-8",
      "268C-30",
      "268C-32",
      "268C-35",
      "27-82",
      "271-44",
      "273-2",
      "273-20",
      "273-29",
      "273-35",
      "273-40",
      "273-51",
      "28-23",
      "28-31",
      "29-50",
      "31-20",
      "34-8",
      "35-87",
      "35-88",
      "35-89",
      "36-247",
      "39-173",
      "39-174",
      "39-88",
      "40-197",
      "41-36",
      "41-38",
      "42-70",
      "42-86",
      "42-87",
      "42-97",
      "43-70",
      "43-73",
      "43-78",
      "43A-19",
      "43A-21",
      "44-100",
      "44-104",
      "44-105",
      "44-95",
      "44-99",
      "46-12",
      "47-94",
      "53-54",
      "54-25",
      "55-18",
      "66-99",
      "67-56",
      "67-61",
      "67-65",
      "68-50",
      "68-60",
      "68-75",
      "69-159",
      "7-37",
      "70-12",
      "70-22",
      "70-74",
      "70-86",
      "70-88",
      "70-91",
      "70-92",
      "74-1",
      "75-130",
      "8-75",
      "8-76",
      "8-88",
      "80-142",
      "80-175",
      "81-100",
      "81-103",
      "81-50",
      "83-1",
      "83-13",
      "83-80",
      "83-92",
      "84-1",
      "84-101",
      "84-85",
      "84-91",
      "84-97",
      "85-13",
      "85-76",
      "87-153",
      "87-19",
      "88-53",
      "9-41",
      "90-13",
      "90-133",
      "90-14",
      "90-155",
      "90-161",
      "90-162",
      "90-169",
      "90-170",
      "90-184",
      "90-193",
      "90-20",
      "90-55",
      "91-118",
      "91-119",
      "91-195",
      "91-200",
      "91-208",
      "91-87",
      "91-98",
      "92-125",
      "92-88",
      "93-73",
      "93-75",
      "93-78",
      "93-99",
      "95-60",
      "95-76",
      "95-77",
      "95-79",
      "96-109",
      "96-124",
      "96-98"
    ]
  },
  {
    "exact_match": 1.0,
    "result_match_rate": 1.0,
    "precision": 1.0,
    "recall": 1.0,
    "f1_score": 1.0,
    "generated_count": 57,
    "ground_truth_count": 57,
    "correct_count": 57,
    "query": "Find all parcels that have no more than 2 competing restaurants within 800 meters.",
    "method": "fine-tuned-rag-improved",
    "model": "ft:gpt-4o-mini-2024-07-18:mit:spatial-agent-20250508-011708:BUo8aWbm",
    "success": true,
    "code": "import geopandas as gpd\nimport pandas as pd\n\n# Load data\nparcels = gpd.read_file('../data/cambridge_parcels.geojson')\npoi = gpd.read_file('../data/cambridge_poi_processed.geojson')\ncensus = gpd.read_file('../data/cambridge_census_cambridge_pct.geojson')\nspending = pd.read_csv('../data/cambridge_spend_processed.csv')\n\n# Project to appropriate CRS for Cambridge, MA\nparcels_proj = parcels.to_crs(epsg=26986)\npoi_proj = poi.to_crs(epsg=26986)\n\n# Filter for restaurants in POI data\nrestaurant_types = ['restaurant', 'cafe', 'diner', 'fast_food', 'pizzeria']\nrestaurants = poi_proj[poi_proj['business_type'].isin(restaurant_types)].copy()\n\n# Function to count competing restaurants within 800m\ndef count_competing_restaurants(parcel_geom, restaurant_geoms, buffer_distance=800):\n    buffered_geom = parcel_geom.buffer(buffer_distance)\n    count = sum(1 for geom in restaurant_geoms if geom is not None and buffered_geom.contains(geom))\n    return count\n\n# Get restaurant geometries\nrestaurant_geoms = restaurants['geometry'].tolist()\n\n# Count restaurants for each parcel\nparcels_proj['competing_restaurants'] = parcels_proj.apply(\n    lambda row: count_competing_restaurants(row['geometry'], restaurant_geoms),\n    axis=1\n)\n\n# Filter parcels with no more than 2 competing restaurants\nfiltered_parcels = parcels_proj[parcels_proj['competing_restaurants'] <= 2].copy()\n\n# Sort by parcel ID (ml)\nresult_ids = sorted(filtered_parcels['ml'].tolist())\n\n# Print results\nprint(result_ids)",
    "generated_ids": [
      "242-33",
      "242-34",
      "242-36",
      "242-38",
      "242A-100",
      "242A-102",
      "242A-105",
      "242A-107",
      "242A-109",
      "242A-110",
      "242A-111",
      "242A-112",
      "242A-113",
      "242A-115",
      "242A-116",
      "242A-126",
      "242A-127",
      "242A-131",
      "242A-148",
      "242A-158",
      "242A-159",
      "242A-160",
      "242A-161",
      "242A-162",
      "242A-59",
      "242A-68",
      "242A-72",
      "242A-73",
      "242A-75",
      "242A-91",
      "242A-99",
      "242B-999",
      "243-1",
      "266-1",
      "266-10",
      "266-12",
      "266-13",
      "266-14",
      "266-15",
      "266-16",
      "266-17",
      "266-18",
      "266-19",
      "266-2",
      "266-20",
      "266-21",
      "266-3",
      "266-35",
      "266-36",
      "266-37",
      "266-38",
      "266-4",
      "266-5",
      "266-6",
      "266-7",
      "266-8",
      "266-9"
    ]
  },
  {
    "query": "Find the top 20 parcels in Cambridge with the most diverse mix of residential and commercial land uses within 500 meters.",
    "method": "fine-tuned-rag-improved",
    "model": "ft:gpt-4o-mini-2024-07-18:mit:spatial-agent-20250508-011708:BUo8aWbm",
    "success": false,
    "code": "import geopandas as gpd\nimport pandas as pd\n\n# Load data\nparcels = gpd.read_file('../data/cambridge_parcels.geojson')\npoi = gpd.read_file('../data/cambridge_poi_processed.geojson')\ncensus = gpd.read_file('../data/cambridge_census_cambridge_pct.geojson')\n\n# Project to appropriate CRS for Cambridge, MA\nparcels_proj = parcels.to_crs(epsg=26986)\npoi_proj = poi.to_crs(epsg=26986)\n\n# Define residential and commercial use codes\nresidential_codes = ['101', '1013', '1014', '102', '1020', '103', '104', '105', '109', '1093', '1094', '1095', '1096', '1099', '123', '124', '125', '130', '131', '132', '133', '134', '140', '146', '147', '148', '149', '150', '151', '152', '153', '154', '155', '156', '157', '158', '160', '161', '162', '163', '164', '165', '166', '167', '168', '170', '171', '172', '173', '174', '175', '176', '177', '178', '179', '180', '181', '182', '183', '184', '185', '186', '187', '188', '189', '190', '191', '192', '193', '194', '195', '196', '197', '198', '199']\ncommercial_codes = ['300', '302', '304', '306', '316', '323', '324', '325', '326', '327', '330', '332', '334', '340', '341', '343', '345', '346', '353', '362', '375', '404', '406', '412', '413', '421', '422', '440', '441', '442', '444', '445', '446', '447', '448', '449', '450', '451', '452', '453', '454', '455', '456', '457', '458', '459', '460', '461', '462', '463', '464', '465', '466', '467', '468', '469', '470', '471', '472', '473', '474', '475', '476', '477', '478', '479', '480', '481', '482', '483', '484', '490', '491', '492', '493', '494', '495', '496', '497', '498', '499']\n\n# Filter for residential and commercial parcels\nresidential_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(residential_codes)].copy()\ncommercial_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(commercial_codes)].copy()\n\n# Function to calculate diversity score\ndef calculate_diversity_score(parcel_geom, poi_geoms, residential_parcels, commercial_parcels, buffer_distance=500):\n    buffered_geom = parcel_geom.buffer(buffer_distance)\n    \n    # Count residential and commercial POIs within buffer\n    residential_count = sum(1 for geom in poi_geoms if geom and buffered_geom.contains(geom))\n    commercial_count = sum(1 for geom in poi_geoms if geom and buffered_geom.contains(geom))\n    \n    # Count residential and commercial parcels within buffer\n    residential_within_buffer = residential_parcels[residential_parcels.geometry.intersects(buffered_geom)].shape[0]\n    commercial_within_buffer = commercial_parcels[commercial_parcels.geometry.intersects(buffered_geom)].shape[0]\n    \n    # Calculate diversity score\n    score = (residential_count + commercial_count) + (residential_within_buffer + commercial_within_buffer)\n    return score\n\n# Get POI geometries\npoi_geoms = poi_proj.geometry.tolist()\n\n# Calculate diversity scores for residential parcels\nresidential_parcels['diversity_score'] = residential_parcels.geometry.apply(\n    lambda geom: calculate_diversity_score(geom, poi_geoms, residential_parcels, commercial_parcels)\n)\n\n# Sort by diversity score (higher is better)\ntop_diverse_parcels = residential_parcels.sort_values('diversity_score', ascending=False).head(20)\n\n# Get parcel IDs\nresult_ids = top_diverse_parcels['ml'].tolist()\n\n# Print results\nprint(result_ids)"
  },
  {
    "exact_match": 0.0,
    "result_match_rate": 0.85,
    "precision": 0.85,
    "recall": 0.85,
    "f1_score": 0.85,
    "generated_count": 20,
    "ground_truth_count": 20,
    "correct_count": 17,
    "query": "Find the top 20 commercial parcels in areas with the highest percentage of residents with advanced degrees.",
    "method": "fine-tuned-rag-improved",
    "model": "ft:gpt-4o-mini-2024-07-18:mit:spatial-agent-20250508-011708:BUo8aWbm",
    "success": true,
    "code": "import geopandas as gpd\nimport pandas as pd\n\n# Load data\nparcels = gpd.read_file('../data/cambridge_parcels.geojson')\npoi = gpd.read_file('../data/cambridge_poi_processed.geojson')\ncensus = gpd.read_file('../data/cambridge_census_cambridge_pct.geojson')\n\n# Project to appropriate CRS for Cambridge, MA\nparcels_proj = parcels.to_crs(epsg=26986)\ncensus_proj = census.to_crs(epsg=26986)\n\n# Filter for commercial parcels\ncommercial_use_codes = ['300', '302', '316', '323', '324', '325', '326', '327', '330', '332', '334', '340', '341', '343', '345', '346', '353', '362', '375', '404', '406', '0340', '0406']\ncommercial_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(commercial_use_codes)].copy()\n\n# Calculate centroids for spatial join\ncommercial_parcels['centroid'] = commercial_parcels.geometry.centroid\ncommercial_parcels_proj = commercial_parcels.set_geometry('centroid')\n\n# Join with census data to get pct_adv_deg\njoined = gpd.sjoin(commercial_parcels_proj, census_proj, how='left', predicate='within')\njoined = joined[joined['pct_adv_deg'].notnull()]\n\n# Sort by pct_adv_deg (higher is better)\nsorted_parcels = joined.sort_values('pct_adv_deg', ascending=False)\n\n# Get top 20 parcel IDs\ntop_20_ids = sorted_parcels['ml'].head(20).tolist()\n\n# Print results\nprint(top_20_ids)",
    "generated_ids": [
      "160-85",
      "160-69",
      "160-59",
      "133-20",
      "133-15",
      "133-51",
      "160-48",
      "160-67",
      "160-77",
      "160-76",
      "160-11",
      "160-14",
      "133-14",
      "160-58",
      "133-52",
      "160-84",
      "160-83",
      "128-71",
      "127-119",
      "128-72"
    ]
  },
  {
    "query": "Find the top 20 parcels with the highest consumer spending in surrounding areas.",
    "method": "fine-tuned-rag-improved",
    "model": "ft:gpt-4o-mini-2024-07-18:mit:spatial-agent-20250508-011708:BUo8aWbm",
    "success": false,
    "code": "import geopandas as gpd\nimport pandas as pd\n\n# Load data\nparcels = gpd.read_file('../data/cambridge_parcels.geojson')\npoi = gpd.read_file('../data/cambridge_poi_processed.geojson')\ncensus = gpd.read_file('../data/cambridge_census_cambridge_pct.geojson')\nspending = pd.read_csv('../data/cambridge_spend_processed.csv')\n\n# Convert to projected CRS for accurate distance calculations\nparcels_proj = parcels.to_crs(epsg=26986)\npoi_proj = poi.to_crs(epsg=26986)\n\n# Filter for commercial parcels\ncommercial_use_codes = [\n    '300', '302', '316', '323', '324', '325', '326', '327', '330', \n    '332', '334', '340', '341', '343', '345', '346', '353', '362', \n    '375', '404', '406', '0340', '0406'\n]\ncommercial_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(commercial_use_codes)].copy()\n\n# Calculate consumer spending for each commercial parcel\ndef calculate_spending(parcel_geom, poi_geoms, spending_df, buffer_distance=100):\n    buffered_geom = parcel_geom.buffer(buffer_distance)\n    poi_within_buffer = [geom for geom in poi_geoms if geom is not None and buffered_geom.contains(geom)]\n    \n    if len(poi_within_buffer) == 0:\n        return 0\n    \n    total_spending = 0\n    for geom in poi_within_buffer:\n        if geom is not None:\n            total_spending += spending_df.get(geom, 0)\n    \n    return total_spending\n\n# Create a spatial index for POI geometries\npoi_geoms = poi_proj['geometry'].tolist()\npoi_spending_dict = dict(zip(poi_proj['geometry'], poi_proj['spending']))\npoi_spending_dict = {k: v for k, v in poi_spending_dict.items() if k is not None}\n\n# Calculate spending for each commercial parcel\nspending_values = []\nfor idx, row in commercial_parcels.iterrows():\n    parcel_geom = row['geometry']\n    spending_value = calculate_spending(parcel_geom, poi_geoms, poi_spending_dict)\n    spending_values.append(spending_value)\n\n# Add spending values to parcels\ncommercial_parcels['spending'] = spending_values\n\n# Sort by spending (highest first)\ntop_spending_parcels = commercial_parcels.sort_values('spending', ascending=False)\n\n# Get top 20 parcel IDs\ntop_20_parcel_ids = top_spending_parcels.head(20)['ml'].tolist()\n\n# Print results\nprint(top_20_parcel_ids)"
  },
  {
    "query": "Find vacant commercial parcels larger than 3000 square feet that are within 800 meters of a subway station.",
    "method": "fine-tuned-rag-improved",
    "model": "ft:gpt-4o-mini-2024-07-18:mit:spatial-agent-20250508-011708:BUo8aWbm",
    "success": false,
    "code": "import geopandas as gpd\nimport pandas as pd\n\n# Load data\nparcels = gpd.read_file('../data/cambridge_parcels.geojson')\npoi = gpd.read_file('../data/cambridge_poi_processed.geojson')\ncensus = gpd.read_file('../data/cambridge_census_cambridge_pct.geojson')\n\n# Define projected CRS for Cambridge, MA\ncambridge_crs = 26986\n\n# Convert to projected CRS\nparcels_proj = parcels.to_crs(epsg=cambridge_crs)\n\n# Filter for commercial parcels\ncommercial_use_codes = [\n    '300', '302', '316', '323', '324', '325', '326', '327', '330', \n    '332', '334', '340', '341', '343', '345', '346', '353', '362', \n    '375', '404', '406', '0340', '0406', '0400', '0401', '0402', \n    '0403', '0404', '0405', '0410', '0411', '0412', '0413', '0414'\n]\ncommercial_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(commercial_use_codes)].copy()\n\n# Filter for vacant parcels\nvacant_parcels = commercial_parcels[commercial_parcels['status'] == 'vacant'].copy()\n\n# Filter for parcels > 3000 sq ft\nlarge_vacant_parcels = vacant_parcels[vacant_parcels['land_area'] > 3000].copy()\n\n# Load subway station data from POI\nsubway_stations = poi[poi['subtype'] == 'subway_station'].copy()\n\n# Create buffer of 800m around subway stations\nsubway_buffers = [geom.buffer(800) for geom in subway_stations.geometry]\nsubway_union_buffer = gpd.GeoSeries(subway_buffers).union_all()\n\n# Convert to projected CRS for accurate buffering\nsubway_union_buffer_proj = gpd.GeoSeries([subway_union_buffer]).set_crs(parcels.crs).to_crs(epsg=cambridge_crs)\n\n# Filter for parcels within 800m of subway stations\nparcels_near_subway = large_vacant_parcels[large_vacant_parcels.geometry.intersects(subway_union_buffer_proj[0])].copy()\n\n# Sort by parcel ID (ml)\nresult_ids = sorted(parcels_near_subway['ml'].tolist())\n\n# Print results\nprint(result_ids)"
  },
  {
    "exact_match": 0.0,
    "result_match_rate": 0.0761904761904762,
    "precision": 0.0761904761904762,
    "recall": 1.0,
    "f1_score": 0.14159292035398233,
    "generated_count": 105,
    "ground_truth_count": 8,
    "correct_count": 8,
    "query": "Find commercial parcels zoned for retail use with fewer than 3 competing retail businesses within 300 meters.",
    "method": "fine-tuned-rag-improved",
    "model": "ft:gpt-4o-mini-2024-07-18:mit:spatial-agent-20250508-011708:BUo8aWbm",
    "success": true,
    "code": "import geopandas as gpd\nimport pandas as pd\n\n# Load data\nparcels = gpd.read_file('../data/cambridge_parcels.geojson')\npoi = gpd.read_file('../data/cambridge_poi_processed.geojson')\ncensus = gpd.read_file('../data/cambridge_census_cambridge_pct.geojson')\n\n# Project to accurate CRS\nparcels_proj = parcels.to_crs(epsg=26986)\npoi_proj = poi.to_crs(epsg=26986)\n\n# Filter retail parcels\nretail_use_codes = ['323', '324', '325', '326', '327', '330']\nretail_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(retail_use_codes)].copy()\n\n# Function to count retail businesses within 300m\ndef count_competing_retail(parcel_geom, poi_geoms, buffer_distance=300):\n    buffered_geom = parcel_geom.buffer(buffer_distance)\n    retail_count = sum(1 for geom in poi_geoms if geom is not None and buffered_geom.contains(geom))\n    return retail_count\n\n# Get retail POI geometries\nretail_poi = poi_proj[poi_proj['business_type'].str.contains('retail', case=False, na=False)]\nretail_poi_geoms = retail_poi['geometry'].tolist()\n\n# Count competitors for each retail parcel\nretail_parcels['competitors'] = retail_parcels['geometry'].apply(\n    lambda geom: count_competing_retail(geom, retail_poi_geoms)\n)\n\n# Filter parcels with fewer than 3 competitors\nresult_parcels = retail_parcels[retail_parcels['competitors'] < 3].copy()\n\n# Sort by parcel ID\nresult_parcels = result_parcels.sort_values('ml')\n\n# Get parcel IDs\nresult_ids = result_parcels['ml'].tolist()\n\n# Print results\nprint(result_ids)",
    "generated_ids": [
      "100-62",
      "102-46",
      "108-54",
      "109-50",
      "110-91",
      "114A-120",
      "116-94",
      "119-90",
      "120-48",
      "122-12",
      "125-73",
      "126-27",
      "128-63",
      "128-72",
      "136-15",
      "139-83",
      "140-148",
      "141-80",
      "150-114",
      "157-26",
      "166-106",
      "166-13",
      "179-75",
      "180-57",
      "182-88",
      "182-89",
      "182-90",
      "183-100",
      "184-109",
      "184-159",
      "184-193",
      "189-4",
      "189-72",
      "191-65",
      "191-85",
      "192-121",
      "192-177",
      "195-59",
      "196-123",
      "196-154",
      "199-30",
      "199-31",
      "199-67",
      "199-90",
      "1A-189",
      "1A-192",
      "1A-211",
      "20-75",
      "20-82",
      "20-83",
      "200-22",
      "200-79",
      "21-121",
      "21-16",
      "226-46",
      "228-55",
      "229-117",
      "23-156",
      "234-178",
      "252-158",
      "252-172",
      "254-76",
      "254-78",
      "254-82",
      "255-21",
      "260-46",
      "260-76",
      "261-112",
      "261-6",
      "261-7",
      "265A-35",
      "265A-46",
      "265B-28",
      "267D-259",
      "267E-234",
      "268B-15",
      "271-32",
      "273-20",
      "34-8",
      "36-137",
      "42-81",
      "42-91",
      "69-162",
      "70-91",
      "70-92",
      "74-1",
      "74-6",
      "74-8",
      "75-128",
      "79-22",
      "81-100",
      "82-31",
      "83-15",
      "83-80",
      "83-90",
      "83-98",
      "83-99",
      "84-101",
      "84-12",
      "84-91",
      "85-66",
      "86-84",
      "88-48",
      "96-152",
      "97-111"
    ]
  },
  {
    "query": "find the top 20 commercial parcels within 1km of massachusetts avenue, prioritizing areas with higher consumer spending.",
    "method": "fine-tuned-rag-improved",
    "model": "ft:gpt-4o-mini-2024-07-18:mit:spatial-agent-20250508-011708:BUo8aWbm",
    "success": false,
    "code": "import geopandas as gpd\nimport pandas as pd\n\n# Load data\nparcels = gpd.read_file('../data/cambridge_parcels.geojson')\npoi = gpd.read_file('../data/cambridge_poi_processed.geojson')\ncensus = gpd.read_file('../data/cambridge_census_cambridge_pct.geojson')\nspending = pd.read_csv('../data/cambridge_spend_processed.csv')\n\n# Project to accurate CRS for Cambridge, MA\nparcels_proj = parcels.to_crs(epsg=26986)\npoi_proj = poi.to_crs(epsg=26986)\n\n# Filter commercial parcels\ncommercial_use_codes = [\n    '300', '302', '316', '323', '324', '325', '326', '327', '330', \n    '332', '334', '340', '341', '343', '345', '346', '353', '362', \n    '375', '404', '406', '0340', '0406', '0404'\n]\ncommercial_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(commercial_use_codes)].copy()\n\n# Define Massachusetts Avenue location points\nmass_ave_coords = [\n    (-71.1189, 42.3736),  # Near Harvard Square\n    (-71.1032, 42.3656),  # Near Central Square\n    (-71.0865, 42.3625)   # Near Kendall Square\n]\nmass_ave_points = gpd.GeoDataFrame(\n    geometry=gpd.points_from_xy([x for x, y in mass_ave_coords], [y for x, y in mass_ave_coords]),\n    crs=parcels.crs\n).to_crs(epsg=26986)\n\n# Buffer 1km around Massachusetts Avenue\nmass_ave_buffer = mass_ave_points.unary_union.buffer(1000)\nmass_ave_buffer_geom = gpd.GeoSeries([mass_ave_buffer], crs=parcels.crs).to_crs(epsg=26986)\n\n# Filter parcels within 1km of Massachusetts Avenue\nparcels_near_mass_ave = commercial_parcels[commercial_parcels.geometry.intersects(mass_ave_buffer_geom.iloc[0])].copy()\n\n# Join POI data to parcels\npoi_counts = poi_proj.groupby('ml').size().reindex(parcels_near_mass_ave['ml'], fill_value=0)\nparcels_near_mass_ave['poi_count'] = poi_counts\n\n# Join spending data to parcels\nspending_merged = pd.merge(\n    parcels_near_mass_ave[['ml']],\n    spending,\n    on='ml',\n    how='left'\n)\nspending_merged['spend_per_cap'] = spending_merged['spend_per_cap'].fillna(0)\n\n# Prioritize by spending and POI count\nspending_merged = spending_merged.sort_values(['spend_per_cap', 'poi_count'], ascending=False)\n\n# Get top 20 parcels\ntop_parcels = spending_merged.head(20)\n\n# Output parcel IDs\ntop_parcel_ids = top_parcels['ml'].tolist()\nprint(top_parcel_ids)"
  },
  {
    "query": "find commercial parcels larger than 8000 square feet in census tracts with at least 90% of residents aged 18-64.",
    "method": "fine-tuned-rag-improved",
    "model": "ft:gpt-4o-mini-2024-07-18:mit:spatial-agent-20250508-011708:BUo8aWbm",
    "success": false,
    "code": "import geopandas as gpd\nimport pandas as pd\n\n# Load data\nparcels = gpd.read_file('../data/cambridge_parcels.geojson')\npoi = gpd.read_file('../data/cambridge_poi_processed.geojson')\ncensus = gpd.read_file('../data/cambridge_census_cambridge_pct.geojson')\n\n# Project to accurate CRS\nparcels_proj = parcels.to_crs(epsg=26986)\ncensus_proj = census.to_crs(epsg=26986)\n\n# Filter commercial parcels > 8000 sq ft\ncommercial_codes
  },
  {
    "query": "find commercial parcels that are between 5000-10000 square feet, within 500 meters of a subway station, and have no more than 1 competitor within 500 meters.",
    "method": "fine-tuned-rag-improved",
    "model": "ft:gpt-4o-mini-2024-07-18:mit:spatial-agent-20250508-011708:BUo8aWbm",
    "success": false,
    "code": "import geopandas as gpd\nimport pandas as pd\n\n# Load data\nparcels = gpd.read_file('../data/cambridge_parcels.geojson')\npoi = gpd.read_file('../data/cambridge_poi_processed.geojson')\ncensus = gpd.read_file('../data/cambridge_census_cambridge_pct.geojson')\n\n# Project to appropriate CRS for Cambridge, MA\nparcels_proj = parcels.to_crs(epsg=26986)\npoi_proj = poi.to_crs(epsg=26986)\n\n# Filter commercial parcels\ncommercial_use_codes = [\n    '300', '302', '316', '323', '324', '325', '326', '327', '330', \n    '332', '334', '340', '341', '343', '345', '346', '353', '362', \n    '375', '404', '406', '0340', '0406', '0405', '0404', '0341'\n]\ncommercial_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(commercial_use_codes)].copy()\n\n# Filter by size (5000-10000 sq ft)\nsize_filtered = commercial_parcels[(commercial_parcels['land_area'] >= 5000) & (commercial_parcels['land_area'] <= 10000)].copy()\n\n# Define subway station locations (approximate)\nsubway_stations = gpd.GeoDataFrame({\n    'station': ['Alewife', 'Davis', 'Porter', 'Harvard', 'Central', 'Kendall', 'Park St', 'South Station'],\n    'geometry': [\n        gpd.points_from_xy([-71.1425, -71.1215, -71.1189, -71.1182, -71.1036, -71.0865, -71.0622, -71.0589], \n                            [42.3954, 42.3734, 42.3750, 42.3770, 42.3625, 42.3629, 42.3584, 42.3601])\n    ]\n}, geometry='geometry', crs='EPSG:4326')\n\nsubway_stations = subway_stations.to_crs(epsg=26986)\n\n# Filter by proximity to subway stations (within 500m)\ndef within_subway_buffer(parcel_geom, subway_geoms, buffer_distance=500):\n    buffered_subways = [geom.buffer(buffer_distance) for geom in subway_geoms]\n    return any(parcel_geom.intersects(buf) for buf in buffered_subways)\n\nsubway_geoms = subway_stations.geometry.tolist()\nnear_subway = size_filtered[size_filtered.geometry.apply(lambda geom: within_subway_buffer(geom, subway_geoms))].copy()\n\n# Count competitors (businesses) within 500m\ndef count_competitors(parcel_geom, poi_geoms, buffer_distance=500):\n    buffered_geom = parcel_geom.buffer(buffer_distance)\n    return sum(1 for geom in poi_geoms if buffered_geom.contains(geom))\n\npoi_geoms = poi_proj.geometry.tolist()\nnear_subway['competitor_count'] = near_subway.geometry.apply(lambda geom: count_competitors(geom, poi_geoms))\n\n# Filter by competitor count (no more than 1)\nfinal_parcels = near_subway[near_subway['competitor_count'] <= 1].copy()\n\n# Sort by parcel ID (ml)\nfinal_parcels = final_parcels.sort_values('ml')\n\n# Convert back to original CRS\nfinal_parcels = final_parcels.to_crs(parcels.crs)\n\n# Output parcel IDs\nresult_ids = final_parcels['ml'].tolist()\nprint(result_ids)"
  },
  {
    "exact_match": 0.0,
    "result_match_rate": 0.0,
    "precision": 0.0,
    "recall": 0.0,
    "f1_score": 0.0,
    "generated_count": 1,
    "ground_truth_count": 123,
    "correct_count": 0,
    "query": "find parcels that are zoned for mixed-use, within 400 meters of public transportation, and at least 200 meters away from industrial areas.",
    "method": "fine-tuned-rag-improved",
    "model": "ft:gpt-4o-mini-2024-07-18:mit:spatial-agent-20250508-011708:BUo8aWbm",
    "success": true,
    "code": "import geopandas as gpd\nimport pandas as pd\n\n# Load data\nparcels = gpd.read_file('../data/cambridge_parcels.geojson')\npoi = gpd.read_file('../data/cambridge_poi_processed.geojson')\ncensus = gpd.read_file('../data/cambridge_census_cambridge_pct.geojson')\n\n# Project to appropriate CRS for Cambridge, MA\nparcels_proj = parcels.to_crs(epsg=26986)\npoi_proj = poi.to_crs(epsg=26986)\n\n# Filter for mixed-use parcels\nmixed_use_codes = ['100', '101', '102', '104', '109', '110', '111', '112', '113', '114', '121', '130', '134', '145', '146', '147', '148', '149', '162', '163', '170', '171', '872', '877']\nmixed_use_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(mixed_use_codes)].copy()\n\n# Filter for parcels within 400m of public transportation (POI)\ntransit_types = ['Subway Station', 'Bus Station', 'Train Station', 'Transit Stop']\ntransit_poi = poi_proj[poi_proj['business_type'].isin(transit_types)]\ntransit_buffer = transit_poi.geometry.buffer(400).union_all()\nnear_transit_parcels = mixed_use_parcels[mixed_use_parcels.geometry.intersects(transit_buffer)].copy()\n\n# Filter for parcels at least 200m away from industrial areas\nindustrial_codes = ['300', '302', '303', '304', '306', '323', '324', '325', '326', '327', '330', '332', '334', '340', '341', '343', '345', '346', '353', '362', '375', '404', '406', '407', '408', '410', '411', '412', '413', '414', '415', '416', '417', '418', '419', '420', '421', '422', '423', '424', '425', '426', '427', '428', '429', '430', '431', '432', '433', '434', '435', '436', '437', '438', '439', '440', '441', '442', '443', '444', '445', '446', '447', '448', '449', '450', '451', '452', '453', '454', '455', '456', '457', '458', '459', '460', '461', '462', '463', '464', '465', '466', '467', '468', '469', '470', '471', '472', '473', '474', '475', '476', '477', '478', '479', '480', '481', '482', '483', '484', '485', '486', '487', '488', '489', '490', '491', '492', '493', '494', '495', '496', '497', '498', '499', '500', '501', '502', '503', '504', '505', '506', '507', '508', '509', '510', '511', '512', '513', '514', '515', '516', '517', '518', '519', '520', '521', '522', '523', '524', '525', '526', '527', '528', '529', '530', '531', '532', '533', '534', '535', '536', '537', '538', '539', '540', '541', '542', '543', '544', '545', '546', '547', '548', '549', '550', '551', '552', '553', '554', '555', '556', '557', '558', '559', '560', '561', '562', '563', '564', '565', '566', '567', '568', '569', '570', '571', '572', '573', '574', '575', '576', '577', '578', '579', '580', '581', '582', '583', '584', '585', '586', '587', '588', '589', '590', '591', '592', '593', '594', '595', '596', '597', '598', '599', '600', '601', '602', '603', '604', '605', '606', '607', '608', '609', '610', '611', '612', '613', '614', '615', '616', '617', '618', '619', '620', '621', '622', '623', '624', '625', '626', '627', '628', '629', '630', '631', '632', '633', '634', '635', '636', '637', '638', '639', '640', '641', '642', '643', '644', '645', '646', '647', '648', '649', '650', '651', '652', '653', '654', '655', '656', '657', '658', '659', '660', '661', '662', '663', '664', '665', '666', '667', '668', '669', '670', '671', '672', '673', '674', '675', '676', '677', '678', '679', '680', '681', '682', '683', '684', '685', '686', '687', '688', '689', '690', '691', '692', '693', '694', '695', '696', '697', '698', '699', '700', '701', '702', '703', '704', '705', '706', '707', '708', '709', '710', '711', '712', '713', '714', '715', '716', '717', '718', '719', '720', '721', '722', '723', '724', '725', '726', '727', '728', '729', '730', '731', '732', '733', '734', '735', '736', '737', '738', '739', '740', '741', '742', '743', '744', '745', '746', '747', '748', '749', '750', '751', '752', '753', '754', '755', '756', '757', '758', '759', '760', '761', '762', '763', '764', '765', '766', '767', '768', '769', '770', '771', '772', '773', '774', '775', '776', '777', '778', '779', '780', '781', '782', '783', '784', '785', '786', '787', '788', '789', '790', '791', '792', '793', '794', '795', '796', '797', '798', '799', '800', '801', '802', '803', '804', '805', '806', '807', '808', '809', '810', '811', '812', '813', '814', '815', '816', '817', '818', '819', '820', '821', '822', '823', '824', '825', '826', '827', '828', '829', '830', '831', '832', '833', '834', '835', '836', '837', '838', '839', '840', '841', '842', '843', '844', '845', '846', '847', '848', '849', '850', '851', '852', '853', '854', '855', '856', '857', '858', '859', '860', '861', '862', '863', '864', '865', '866', '867', '868', '869', '870', '871', '872', '873', '874', '875', '876', '877', '878', '879', '880', '881', '882', '883', '884', '885', '886', '887', '888', '889', '890', '891', '892', '893', '894', '895', '896', '897', '898', '899', '900', '901', '902', '903', '904', '905', '906', '907', '908', '909', '910', '911', '912', '913', '914', '915', '916', '917', '918', '919', '920', '921', '922', '923', '924', '925', '926', '927', '928', '929', '930', '931', '932', '933', '934', '935', '936', '937', '938', '939', '940', '941', '942', '943', '944', '945', '946', '947', '948', '949', '950', '951', '952', '953', '954', '955', '956', '957', '958', '959', '960', '961', '962', '963', '964', '965', '966', '967', '968', '969', '970', '971', '972', '973', '974', '975', '976', '977', '978', '979', '980', '981', '982', '983', '984', '985', '986', '987', '988', '989', '990', '991', '992', '993', '994', '995', '996', '997', '998', '999']\nindustrial_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(industrial_codes)]\nindustrial_buffer = industrial_parcels.geometry.buffer(200).union_all()\nnot_near_industrial_parcels = near_transit_parcels[~near_transit_parcels.geometry.intersects(industrial_buffer)].copy()\n\n# Sort by parcel ID (ml)\nresult_parcels = not_near_industrial_parcels.sort_values('ml')\n\n# Convert back to original CRS\nresult_parcels = result_parcels.to_crs(parcels.crs)\n\n# Get parcel IDs\nresult_ids = result_parcels['ml'].tolist()\n\n# Print results\nprint(result_ids)",
    "generated_ids": [
      ""
    ]
  },
  {
    "query": "find parcels that are either commercial places within 100m of harvard square or residential larger than 5000 square feet and within 200m of 50 restaurants.",
    "method": "fine-tuned-rag-improved",
    "model": "ft:gpt-4o-mini-2024-07-18:mit:spatial-agent-20250508-011708:BUo8aWbm",
    "success": false,
    "code": "import geopandas as gpd\nimport pandas as pd\n\n# Load data\nparcels = gpd.read_file('../data/cambridge_parcels.geojson')\npoi = gpd.read_file('../data/cambridge_poi_processed.geojson')\ncensus = gpd.read_file('../data/cambridge_census_cambridge_pct.geojson')\n\n# Project to appropriate CRS for Cambridge, MA\nparcels_proj = parcels.to_crs(epsg=26986)\npoi_proj = poi.to_crs(epsg=26986)\n\n# Define commercial use codes\ncommercial_use_codes = [\n    '300', '302', '316', '323', '324', '325', '326', '327', '330', \n    '332', '334', '340', '341', '343', '345', '346', '353', '362', \n    '375', '404', '406', '0340', '0406', '0400', '0401', '0402', \n    '0403', '0411', '0412', '0413', '0414', '0415', '0416', '0417', \n    '0418', '0419', '0420', '0421', '0422', '0423', '0424', '0425', \n    '0426', '0427', '0428', '0429', '0430', '0431', '0432', '0433', \n    '0434', '0435', '0436', '0437', '0438', '0439', '0440', '0441', \n    '0442', '0443', '0444', '0445', '0446', '0447', '0448', '0449', \n    '0450', '0451', '0452', '0453', '0454', '0455', '0456', '0457', \n    '0458', '0459', '0460', '0461', '0462', '0463', '0464', '0465', \n    '0466', '0467', '0468', '0469', '0470', '0471', '0472', '0473', \n    '0474', '0475', '0476', '0477', '0478', '0479', '0480', '0481', \n    '0482', '0483', '0484', '0485', '0486', '0487', '0488', '0489', \n    '0490', '0491', '0492', '0493', '0494', '0495', '0496', '0497', \n    '0498', '0499', '0500', '0501', '0502', '0503', '0504', '0505', \n    '0506', '0507', '0508', '0509', '0510', '0511', '0512', '0513', \n    '0514', '0515', '0516', '0517', '0518', '0519', '0520', '0521', \n    '0522', '0523', '0524', '0525', '0526', '0527', '0528', '0529', \n    '0530', '0531', '0532', '0533', '0534', '0535', '0536', '0537', \n    '0538', '0539', '0540', '0541', '0542', '0543', '0544', '0545', \n    '0546', '0547', '0548', '0549', '0550', '0551', '0552', '0553', \n    '0554', '0555', '0556', '0557', '0558', '0559', '0560', '0561', \n    '0562', '0563', '0564', '0565', '0566', '0567', '0568', '0569', \n    '0570', '0571', '0572', '0573', '0574', '0575', '0576', '0577', \n    '0578', '0579', '0580', '0581', '0582', '0583', '0584', '0585', \n    '0586', '0587', '0588', '0589', '0590', '0591', '0592', '0593', \n    '0594', '0595', '0596', '0597', '0598', '0599', '0600', '0601', \n    '0602', '0603', '0604', '0605', '0606', '0607', '0608', '0609', \n    '0610', '0611', '0612', '0613', '0614', '0615', '0616', '0617', \n    '0618', '0619', '0620', '0621', '0622', '0623', '0624', '0625', \n    '0626', '0627', '0628', '0629', '0630', '0631', '0632', '0633', \n    '0634', '0635', '0636', '0637', '0638', '0639', '0640', '0641', \n    '0642', '0643', '0644', '0645', '0646', '0647', '0648', '0649', \n    '0650', '0651', '0652', '0653', '0654', '0655', '0656', '0657', \n    '0658', '0659', '0660', '0661', '0662', '0663', '0664', '0665', \n    '0666', '0667', '0668', '0669', '0670', '0671', '0672', '0673', \n    '0674', '0675', '0676', '0677', '0678', '0679', '0680', '0681', \n    '0682', '0683', '0684', '0685', '0686', '0687', '0688', '0689', \n    '0690', '0691', '0692', '0693', '0694', '0695', '0696', '0697', \n    '0698', '0699', '0700', '0701', '0702', '0703', '0704', '0705', \n    '0706', '0707', '0708', '0709', '0710', '0711', '0712', '0713', \n    '0714', '0715', '0716', '0717', '0718', '0719', '0720', '0721', \n    '0722', '0723', '0724', '0725', '0726', '0727', '0728', '0729', \n    '0730', '0731', '0732', '0733', '0734', '0735', '0736', '0737', \n    '0738', '0739', '0740', '0741', '0742', '0743', '0744', '0745', \n    '0746', '0747', '0748', '0749', '0750', '0751', '0752', '0753', \n    '0754', '0755', '0756', '0757', '0758', '0759', '0760', '0761', \n    '0762', '0763', '0764', '0765', '0766', '0767', '0768', '0769', \n    '0770', '0771', '0772', '0773', '0774', '0775', '0776', '0777', \n    '0778', '0779', '0780', '0781', '0782', '0783', '0784', '0785', \n    '0786', '0787', '0788', '0789', '0790', '0791', '0792', '0793', \n    '0794', '0795', '0796', '0797', '0798', '0799', '0800', '0801', \n    '0802', '0803', '0804', '0805', '0806', '0807', '0808', '0809', \n    '0810', '0811', '0812', '0813', '0814', '0815', '0816', '0817', \n    '0818', '0819', '0820', '0821', '0822', '0823', '0824', '0825', \n    '0826', '0827', '0828', '0829', '0830', '0831', '0832', '0833', \n    '0834', '0835', '0836', '0837', '0838', '0839', '0840', '0841', \n    '0842', '0843', '0844', '0845', '0846', '0847', '0848', '0849', \n    '0850', '0851', '0852', '0853', '0854', '0855', '0856', '0857', \n    '0858', '0859', '0860', '0861', '0862', '0863', '0864', '0865', \n    '0866', '0867', '0868', '0869', '0870', '0871', '0872', '0873', \n    '0874', '0875', '0876', '0877', '0878', '0879', '0880', '0881', \n    '0882', '0883', '0884', '0885', '0886', '0887', '0888', '0889', \n    '0890', '0891', '0892', '0893', '0894', '0895', '0896', '0897', \n    '0898', '0899', '0900', '0901', '0902', '0903', '0904', '0905', \n    '0906', '0907', '0908', '0909', '0910', '0911', '0912', '0913', \n    '0914', '0915', '0916', '0917', '0918', '0919', '0920', '0921', \n    '0922', '0923', '0924', '0925', '0926', '0927', '0928', '0929', \n    '0930', '0931', '0932', '0933', '0934', '0935', '0936', '0937', \n    '0938', '0939', '0940', '0941', '0942', '0943', '0944', '0945', \n    '0946', '0947', '0948', '0949', '0950', '0951', '0952', '0953', \n    '0954', '0955', '0956', '0957', '0958', '0959', '0960', '0961', \n    '0962', '0963', '0964', '0965', '0966', '0967', '0968', '0969', \n    '0970', '0971', '0972', '0973', '0974', '0975', '0976', '0977', \n    '0978', '0979', '0980', '0981', '0982', '0983', '0984', '0985', \n    '0986', '0987', '0988', '0989', '0990', '0991', '0992', '0993', \n    '0994', '0995', '0996', '0997', '0998', '0999', '1000', '1001', \n    '1002', '1003', '1004', '1005', '1006', '1007', '1008', '1009', \n    '1010', '1011', '1012', '1013', '1014', '1015', '1016', '1017', \n    '1018', '1019', '1020', '1021', '1022', '1023', '1024', '1025', \n    '1026', '1027', '1028', '1029', '1030', '1031', '1032', '1033', \n    '1034', '1035', '1036', '1037', '1038', '1039', '1040', '1041', \n    '1042', '1043', '1044', '1045', '1046', '1047', '1048', '1049', \n    '1050', '1051', '1052', '1053', '1054', '1055', '1056', '1057', \n    '1058', '1059', '1060', '1061', '1062', '1063', '1064', '1065', \n    '1066', '1067', '1068', '1069', '1070', '1071', '1072', '1073', \n    '1074', '1075', '1076', '1077', '1078', '1079', '1080', '1081', \n    '1082', '1083', '1084', '1085', '1086', '1087', '1088', '1089', \n    '1090', '1091', '1092', '1093', '1094', '1095', '1096', '1097', \n    '1098', '1099', '1100', '1101', '1102', '1103', '1104', '1105', \n    '1106', '1107', '1108', '1109', '1110', '1111', '1112', '1113', \n    '1114', '1115', '1116', '1117', '1118', '1119', '1120', '1121', \n    '1122', '1123', '1124', '1125', '1126', '1127', '1128', '1129', \n    '1130', '1131', '1132', '1133', '1134', '1135', '1136', '1137', \n    '1138', '1139', '1140', '1141', '1142', '1143', '1144', '1145', \n    '1146', '1147', '1148', '1149', '1150', '1151', '1152', '1153', \n    '1154', '1155', '1156', '1157', '1158', '1159', '1160', '1161', \n    '1162', '1163', '1164', '1165', '1166', '1167', '1168', '1169', \n    '1170', '1171', '1172', '1173', '1174', '1175', '1176', '1177', \n    '1178', '1179', '1180', '1181', '1182', '1183', '1184', '1185', \n    '1186', '1187', '1188', '1189', '1190', '1191', '1192', '1193', \n    '1194', '1195', '1196', '1197', '1198', '1199', '1200', '1201', \n    '1202', '1203', '1204', '1205', '1206', '1207', '1208', '1209', \n    '1210', '1211', '1212', '1213', '1214', '1215', '1216', '1217', \n    '1218', '1219', '1220', '1221', '1222', '1223', '1224', '1225', \n    '1226', '1227', '1228', '1229', '1230', '1231', '1232', '1233', \n    '1234', '1235', '1236', '1237', '1238', '1239', '1240', '1241', \n    '1242', '1243', '1244', '1245', '1246', '1247', '1248', '1249', \n    '1250', '1251', '1252', '1253', '1254', '1255', '1256', '1257', \n    '1258', '1259', '1260', '1261', '1262', '1263', '1264', '1265', \n    '1266', '1267', '1268', '1269', '1270', '1271', '1272', '1273', \n    '1274', '1275', '1276', '1277', '1278', '1279', '1280', '1281', \n    '1282', '1283', '1284', '1285', '1286', '1287', '1288', '1289', \n    '1290', '1291', '1292', '1293', '1294', '1295', '1296', '1297', \n    '1298', '1299', '1300', '1301', '1302', '1303', '1304', '1305', \n    '1306', '1307', '1308', '1309', '1310', '1311', '1312', '1313', \n    '1314', '1315', '1316', '1317', '1318', '1319', '1320', '1321', \n    '1322', '1323', '1324', '1325', '1326', '1327', '1328', '1329', \n    '1330', '1331', '1332', '1333', '1334', '1335', '1336', '1337', \n    '1338', '1339', '1340', '1341', '1342', '1343', '1344', '1345', \n    '1346', '1347', '1348', '1349', '1350', '1351', '1352', '1353', \n    '1354', '1355', '1356', '1357', '1358', '1359', '1360', '1361', \n    '1362', '1363', '1364', '1365', '1366', '1367', '1368', '1369', \n    '1370', '1371', '1372', '1373', '1374', '1375', '1376', '1377', \n    '1378', '1379', '1380', '1381', '1382', '1383', '1384', '1385', \n    '1386', '1387', '1388', '1389', '1390', '1391', '1392', '1393', \n    '1394', '1395', '1396', '1397', '1398', '1399', '1400', '1401', \n    '1402', '1403', '1404', '1405', '1406', '1407', '1408', '1409', \n    '1410', '1411', '1412', '1413', '1414', '1415', '1416', '1417', \n    '1418', '1419', '1420', '1421', '1422', '1423', '1424', '1425', \n    '1426', '1427', '1428', '1429', '1430', '1431', '1432', '1433', \n    '1434', '1435', '1436', '1437', '1438', '1439', '1440', '1441', \n    '1442', '1443', '1444', '1445', '1446', '1447', '1448', '1449', \n    '1450', '1451', '1452', '1453', '1454', '1455', '1456', '1457', \n    '1458', '1459', '1460', '1461', '1462', '1463', '1464', '1465', \n    '1466', '1467', '1468', '1469', '1470', '1471', '1472', '1473', \n    '1474', '1475', '1476', '1477', '1478', '1479', '1480', '1481', \n    '1482', '1483', '1484', '1485', '1486', '1487', '1488', '1489', \n    '1490', '1491', '1492', '1493', '1494', '1495', '1496', '1497', \n    '1498', '1499', '1500', '1501', '1502', '1503', '1504', '1505', \n    '1506', '1507', '1508', '1509', '1510', '1511', '1512', '1513', \n    '1514', '1515', '1516', '1517', '1518', '1519', '1520', '1521', \n    '1522', '1523', '1524', '1525', '1526', '1527', '1528', '1529', \n    '1530', '1531', '1532', '1533', '1534', '1535', '1536', '1537', \n    '1538', '1539', '1540', '1541', '1542', '1543', '1544', '1545', \n    '1546', '1547', '1548', '1549', '1550', '1551', '1552', '1553', \n    '1554', '1555', '1556', '1557', '1558', '1559', '1560', '1561', \n    '1562', '1563', '1564', '1565', '1566', '1567', '1568', '1569', \n    '1570', '1571', '1572', '1573', '1574', '1575', '1576', '1577', \n    '1578', '1579', '1580', '1581', '1582', '1583', '1584', '1585', \n    '1586', '1587', '1588', '1589', '1590', '1591', '1592', '1593', \n    '1594', '1595', '1596', '1597', '1598', '1599', '1600', '1601', \n    '1602', '1603', '1604', '1605', '1606', '1607', '1608', '1609', \n    '1610', '1611', '1612', '1613', '1614', '1615', '1616', '1617', \n    '1618', '1619', '1620', '1621', '1622', '1623', '1624', '1625', \n    '1626', '1627', '1628', '1629', '1630', '1631', '1632', '1633', \n    '1634', '1635', '1636', '1637', '1638', '1639', '1640', '1641', \n    '1642', '1643', '1644', '1645', '1646', '1647', '1648', '1649', \n    '1650', '1651', '1652', '1653', '1654', '1655', '1656', '1657', \n    '1658', '1659', '1660', '1661', '1662', '1663', '1664', '1665', \n    '1666', '1667', '1668', '1669', '1670', '1671', '1672', '1673', \n    '1674', '1675', '1676', '1677', '1678', '1679', '1680', '1681', \n    '1682', '1683', '1684', '1685', '1686', '1687', '1688', '1689', \n    '1690', '1691', '1692', '1693', '1694', '1695', '1696', '1697', \n    '1698', '1699', '1700', '1701', '1702', '1703', '1704', '1705', \n    '1706', '1707', '1708', '1709', '1710', '1711', '1712', '1713', \n    '1714', '1715', '1716', '1717', '1718', '1719', '1720', '1721', \n    '1722', '1723', '1724', '1725', '1726', '1727', '1728', '1729', \n    '1730', '1731', '1732', '1733', '1734', '1735', '1736', '1737', \n    '1738', '1739', '1740', '1741', '1742', '1743', '1744', '1745', \n    '1746', '1747', '1748', '1749', '1750', '1751', '1752', '1753', \n    '1754', '1755', '1756', '1757', '1758', '1759', '1760', '1761', \n    '1762', '1763', '1764', '1765', '1766', '1767', '1768', '1769', \n    '1770', '1771', '1772', '1773', '1774', '1775', '1776', '1777', \n    '1778', '1779', '1780', '1781', '1782', '1783', '1784', '1785', \n    '1786', '1787', '1788', '1789', '1790', '1791', '1792', '1793', \n    '1794', '1795', '1796', '1797', '1798', '1799', '1800', '1801', \n    '1802', '1803', '1804', '1805', '1806', '1807', '1808', '1809', \n    '1810', '1811', '1812', '1813', '1814', '1815', '1816', '1817', \n    '1818', '1819', '1820', '1821', '1822', '1823', '1824', '1825', \n    '1826', '1827', '1828', '1829', '1830', '1831', '1832', '1833', \n    '1834', '1835', '1836', '1837', '1838', '1839', '1840', '1841', \n    '1842', '1843', '1844', '1845', '1846', '1847', '1848', '1849', \n    '1850', '1851', '1852', '1853', '1854', '1855', '1856', '1857', \n    '1858', '1859', '1860', '1861', '1862', '1863', '1864', '1865', \n    '1866', '1867', '1868', '1869', '1870', '1871', '1872', '1873', \n    '1874', '1875', '1876', '1877', '1878', '1879', '1880', '1881', \n    '1882', '1883', '1884', '1885', '1886', '1887', '1888', '1889', \n    '1890', '1891', '1892', '1893', '1894', '1895', '1896', '1897', \n    '1898', '1899', '1900', '1901', '1902', '1903', '1904', '1905', \n    '1906', '1907', '1908', '1909', '1910', '1911', '1912', '1913', \n    '1914', '1915', '1916', '1917', '1918', '1919', '1920', '1921', \n    '1922', '1923', '1924', '1925', '1926', '1927', '1928', '1929', \n    '1930', '1931', '1932', '1933', '1934', '1935', '1936', '1937', \n    '1938', '1939', '1940', '1941', '1942', '1943', '1944', '1945', \n    '1946', '1947', '1948', '1949', '1950', '1951', '1952', '1953', \n    '1954', '1955', '1956', '1957', '1958', '1959', '1960', '1961', \n    '1962', '1963', '1964', '1965', '1966', '1967', '1968', '1969', \n    '1970', '1971', '1972', '1973', '1974', '1975', '1976', '1977', \n    '1978', '1979', '1980', '1981', '1982', '1983', '1984', '1985', \n    '1986', '1987', '1988', '1989', '1990', '1991', '1992', '1993', \n    '1994', '1995', '1996', '1997', '1998', '1999', '2000', '2001', \n    '2002', '2003', '2004', '2005', '2006', '2007', '2008', '2009', \n    '2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', \n    '2018', '2019', '2020', '2021', '2022', '2023', '2024', '2025', \n    '2026', '2027', '2028', '2029', '2030', '2031', '2032', '2033', \n    '2034', '2035', '2036', '2037', '2038', '2039', '2040', '2041', \n    '2042', '2043', '2044', '2045', '2046', '2047', '2048', '2049', \n    '2050', '2051', '2052', '2053', '2054', '2055', '2056', '2057', \n    '2058', '2059', '2060', '2061', '2062', '2063', '2064', '2065', \n    '2066', '2067', '2068', '2069', '2070', '2071', '2072', '2073', \n    '2074', '2075', '2076', '2077', '2078', '2079', '2080', '2081', \n    '2082', '2083', '2084', '2085', '2086', '2087', '2088', '2089', \n    '2090', '2091', '2092', '2093', '2094', '2095', '2096', '2097', \n    '2098', '2099', '2100', '2101', '2102', '2103', '2104', '2105', \n    '2106', '2107', '2108', '2109', '2110', '2111', '2112', '2113', \n    '2114', '2115', '2116', '2117', '2118', '2119', '2120', '2121', \n    '2122', '2123', '2124', '2125', '2126', '2127', '2128', '2129', \n    '2130', '2131', '2132', '2133', '2134', '2135', '2136', '2137', \n    '2138', '2139', '2140', '2141', '2142', '2143', '2144', '2145', \n    '2146', '2147', '2148', '2149', '2150', '2151', '2152', '2153', \n    '2154', '2155', '2156', '2157', '2158', '2159', '2160', '2161', \n    '2162', '2163', '2164', '2165', '2166', '2167', '2168', '2169', \n    '2170', '2171', '2172', '2173', '2174', '2175', '2176', '2177', \n    '2178', '2179', '2180', '2181', '2182', '2183', '2184', '2185', \n    '2186', '2187', '2188', '2189', '2190', '2191', '2192', '2193', \n    '2194', '2195', '2196', '2197', '2198', '2199', '2200', '2201', \n    '2202', '2203', '2204', '2205', '2206', '2207', '2208', '2209', \n    '2210', '2211', '2212', '2213', '2214', '2215', '2216', '2217', \n    '2218', '2219', '2220', '2221', '2222', '2223', '2224', '2225', \n    '2226', '2227', '2228', '2229', '2230', '2231', '2232', '2233', \n    '2234', '2235', '2236', '2237', '2238', '2239', '2240', '2241', \n    '2242', '2243', '2244', '2245', '2246', '2247', '2248', '2249', \n    '2250', '2251', '2252', '2253', '2254', '2255', '2256', '2257', \n    '2258', '2259', '2260', '2261', '2262', '2263', '2264', '2265', \n    '2266', '2267', '2268', '2269', '2270', '2271', '2272', '2273', \n    '2274', '2275', '2276', '2277', '2278', '2279', '2280', '2281', \n    '2282', '2283', '2284', '2285', '2286', '2287', '2288', '2289', \n    '2290', '2291', '2292', '2293', '2294', '2295', '2296', '2297', \n    '2298', '2299', '2300', '2301', '2302', '2303', '2304', '2305', \n    '2306', '2307', '2308', '2309', '2310', '2311', '2312', '2313', \n    '2314', '2315', '2316', '2317', '2318', '2319', '2320', '2321', \n    '2322', '2323', '2324', '2325', '2326', '2327', '2328', '2329', \n    '2330', '2331', '2332', '2333', '2334', '2335', '2336', '2337', \n    '2338', '2339', '2340', '2341', '2342', '2343', '2344', '2345', \n    '2346', '2347', '2348', '2349', '2350', '2351', '2352', '2353', \n    '2354', '2355', '2356', '2357', '2358', '2359', '2360', '2361', \n    '2362', '2363', '2364', '2365', '2366', '2367', '2368', '2369', \n    '2370', '2371', '2372', '2373', '2374', '2375', '2376', '2377', \n    '2378', '2379', '2380', '2381', '2382', '2383', '2384', '2385', \n    '2386', '2387', '2388', '2389', '2390', '2391', '2392', '2393', \n    '2394', '2395', '2396', '2397', '2398', '2399', '2400', '2401', \n    '2402', '2403', '2404', '2405', '2406', '2407', '2408', '2409', \n    '2410', '2411', '2412', '2413', '2414', '2415', '2416', '2417', \n    '2418', '2419', '2420', '2421', '2422', '2423', '2424', '2425', \n    '2426', '2427', '2428', '2429', '2430', '2431', '2432', '2433', \n    '2434', '2435', '2436', '2437', '2438', '2439', '2440', '2441', \n    '2442', '2443', '2444', '2445', '2446', '2447', '2448', '2449', \n    '2450', '2451', '2452', '2453', '2454', '2455', '2456', '2457', \n    '2458', '2459', '2460', '2461', '2462', '2463', '2464', '2465', \n    '2466', '2467', '2468', '2469', '2470', '2471', '2472', '2473', \n    '2474', '2475', '2476', '2477', '2478', '2479', '2480', '2481', \n    '2482', '2483', '2484', '2485', '2486', '2487', '2488', '2489', \n    '2490', '2491', '2492', '2493', '2494', '2495', '2496', '2497', \n    '2498', '2499', '2500', '2501', '2502', '2503', '2504', '2505', \n    '2506', '2507', '2508', '2509', '2510', '2511', '2512', '2513', \n    '2514', '2515', '2516', '2517', '2518', '2519', '2520', '2521', \n    '2522', '2523', '2524', '2525', '2526', '2527', '2528', '2529', \n    '2530', '2531', '2532', '2533', '2534', '2535', '2536', '2537', \n    '2538', '2539', '2540', '2541', '2542', '2543', '2544', '2545', \n    '2546', '2547', '2548', '2549', '2550', '2551', '2552', '2553', \n    '2554', '2555', '2556', '2557', '2558', '2559', '2560', '2561', \n    '2562', '2563', '2564', '2565', '2566', '2567', '2568', '2569', \n    '2570', '2571', '2572', '2573', '2574', '2575', '2576', '2577', \n    '2578', '2579', '2580', '2581', '2582', '2583', '2584', '2585', \n    '2586', '2587', '2588', '2589', '2590', '2591', '2592', '2593', \n    '2594', '2595', '2596', '2597', '2598', '2599', '2600', '2601', \n    '2602', '2603', '2604', '2605', '2606', '2607', '2608', '2609', \n    '2610', '2611', '2612', '2613', '2614', '2615', '2616', '2617', \n    '2618', '2619', '2620', '2621', '2622', '2623', '2624', '2625', \n    '2626', '2627', '2628', '2629', '2630', '2631', '2632', '2633', \n    '2634', '2635', '2636', '2637', '2638', '2639', '2640', '2641', \n    '2642', '2643', '2644', '2645', '2646', '2647', '2648', '2649', \n    '2650', '2651', '2652', '2653', '2654', '2655', '2656', '2657', \n    '2658', '2659', '2660', '2661', '2662', '2663', '2664', '2665', \n    '2666', '2667', '2668', '2669', '2670', '2671', '2672', '2673', \n    '2674', '2675', '2676', '2677', '2678', '2679', '2680', '2681', \n    '2682', '2683', '2684', '2685', '2686', '2687', '2688', '2689', \n    '2690', '2691', '2692', '2693', '2694', '2695', '2696', '2697', \n    '2698', '2699', '2700', '2701', '2702', '2703', '2704', '2705', \n    '2706', '2707', '2708', '2709', '2710', '2711', '2712', '2713', \n    '2714', '2715', '2716', '2717', '2718', '2719', '2720', '2721', \n    '2722', '2723', '2724', '2725', '2726', '2727', '2728', '2729', \n    '2730', '2731', '2732', '2733', '2734', '2735', '2736', '2737', \n    '2738', '2739', '2740', '2741', '2742', '2743', '2744', '2745', \n    '2746', '2747', '2748', '2749', '2750', '2751', '2752', '2753', \n    '2754', '2755', '2756', '2757', '2758', '2759', '2760', '2761', \n    '2762', '2763', '2764', '2765', '2766', '2767', '2768', '2769', \n    '2770', '2771', '2772', '2773', '2774', '2775', '2776', '2777', \n    '2778', '2779', '2780', '2781', '2782', '2783', '2784', '2785', \n    '2786', '2787', '2788', '2789', '2790', '2791', '2792', '2793', \n    '2794', '2795', '2796', '2797', '2798', '2799', '2800', '2801', \n    '2802', '2803', '2804', '2805', '2806', '2807', '2808', '2809', \n    '2810', '2811', '2812', '2813', '2814', '2815', '2816', '2817', \n    '2818', '2819', '2820', '2821', '2822', '2823', '2824', '2825', \n    '2826', '2827', '2828', '2829', '2830', '2831', '2832', '2833', \n    '2834', '2835', '2836', '2837', '2838', '2839', '2840', '2841', \n    '2842', '2843', '2844', '2845', '2846', '2847', '2848', '2849', \n    '2850', '2851', '2852', '2853', '2854', '2855', '2856', '2857', \n    '2858', '2859', '2860', '2861', '2862', '2863', '2864', '2865', \n    '2866', '2867', '2868', '2869', '2870', '2871', '2872', '2873', \n    '2874', '2875', '2876', '2877', '2878', '2879', '2880', '2881', \n    '2882', '2883', '2884', '2885', '2886', '2887', '2888', '2889', \n    '2890', '2891', '2892', '2893', '2894', '2895', '2896', '2897', \n    '2898', '2899', '2900', '2901', '2902', '2903', '2904', '2905', \n    '2906', '2907', '2908', '2909', '2910', '2911', '2912', '2913', \n    '2914', '2915', '2916', '2917', '2918', '2919', '2920', '2921', \n    '2922', '2923', '2924', '2925', '2926', '2927', '2928', '2929', \n    '2930', '2931', '2932', '2933', '2934', '2935', '2936', '2937', \n    '2938', '2939', '2940', '2941', '2942', '2943', '2944', '2945', \n    '2946', '2947', '2948', '2949', '2950', '2951', '2952', '2953', \n    '2954', '2955', '2956', '2957', '2958', '2959', '2960', '2961', \n    '2962', '2963', '2964', '2965', '2966', '2967', '2968', '2969', \n    '2970', '2971', '2972', '2973', '2974', '2975', '2976', '2977', \n    '2978', '2979', '2980', '2981', '2982', '2983', '2984', '2985', \n    '2986', '2987', '2988', '2989', '2990', '2991', '2992', '2993', \n    '2994', '2995', '2996', '2997', '2998', '2999', '3000', '3001', \n    '3002', '3003', '3004', '3005', '3006', '3007', '3008', '3009', \n    '3010', '3011', '3012', '3013', '3014', '3015', '3016', '3017', \n    '3018', '3019', '3020', '3021', '3022', '3023', '3024', '3025', \n    '3026', '3027', '3028', '3029', '3030', '3031', '3032', '3033', \n    '3034', '3035', '3036', '3037', '3038', '3039', '3040', '3041', \n    '3042', '3043', '3044', '3045', '3046', '3047', '3048', '3049', \n    '3050', '3051', '3052', '3053', '3054', '3055', '3056', '3057', \n    '3058', '3059', '3060', '3061', '3062', '3063', '3064', '3065', \n    '3066', '3067', '3068', '3069', '3070', '3071', '3072', '3073', \n    '3074', '3075', '3076', '3077', '3078', '3079', '3080', '3081', \n    '3082', '3083', '3084', '3085', '3086', '3087', '3088', '3089', \n    '3090', '3091', '3092', '3093', '3094', '3095', '3096', '3097', \n    '3098', '3099', '3100', '3101', '3102', '3103', '3104', '3105', \n    '3106', '3107', '3108', '3109', '3110', '3111', '3112', '3113', \n    '3114', '3115', '3116', '3117', '3118', '3119', '3120', '3121', \n    '3122', '3123', '3124', '3125', '3126', '3127', '3128', '3129', \n    '3130', '3131', '3132', '3133', '3134', '3135', '3136', '3137', \n    '3138', '3139', '3140', '3141', '3142', '3143', '3144', '3145', \n    '3146', '3147', '3148', '3149', '3150', '3151', '3152', '3153', \n    '3154', '3155', '3156', '3157', '3158', '3159', '3160', '3161', \n    '3162', '3163', '3164', '3165', '3166', '3167', '3168', '3169', \n    '3170', '3171', '3172', '3173', '3174', '3175', '3176', '3177', \n    '3178', '3179', '3180', '3181', '3182', '3183', '3184', '3185', \n    '3186', '3187', '3188', '3189', '3190', '3191', '3192', '3193', \n    '3194', '3195', '3196', '3197', '3198', '3199', '3200', '3201', \n    '3202', '3203', '3204', '3205', '3206', '3207', '3208', '3209', \n    '3210', '3211', '3212', '3213', '3214', '3215', '3216', '3217', \n    '3218', '3219', '3220', '3221', '3222', '3223', '3224', '3225', \n    '3226', '3227', '3228', '3229', '3230', '3231', '3232', '3233', \n    '3234', '3235', '3236', '3237', '3238', '3239', '3240', '3241', \n    '3242', '3243', '3244', '3245', '3246', '3247', '3248', '3249', \n    '3250', '3251', '3252', '3253', '3254', '3255', '3256', '3257', \n    '3258', '3259', '3260', '3261', '3262', '3263', '3264', '3265', \n    '3266', '3267', '3268', '3269', '3270', '3271', '3272', '3273', \n    '3274', '3275', '3276', '3277', '3278', '3279', '3280', '3281', \n    '3282', '3283', '3284', '3285', '3286', '3287', '3288', '3289', \n    '3290', '3291', '3292', '3293', '3294', '3295', '3296', '3297', \n    '3298', '3299', '3300', '3301', '3302', '3303', '3304', '3305', \n    '3306', '3307', '3308', '3309', '3310', '3311', '3312', '3313', \n    '3314', '3315', '3316', '3317', '3318', '3319', '3320', '3321', \n    '3322', '3323', '3324', '3325', '3326', '3327', '3328', '3329', \n    '3330', '3331', '3332', '3333', '3334', '3335', '3336', '3337', \n    '3338', '3339', '3340', '3341', '3342', '3343', '3344', '3345', \n    '3346', '3347', '3348', '3349', '3350', '3351', '3352', '3353', \n    '3354', '3355', '3356', '3357', '3358', '3359', '3360', '3361', \n    '3362', '3363', '3364', '3365', '3366', '3367', '3368', '3369', \n    '3370', '3371', '3372', '3373', '3374', '3375', '3376', '3377', \n    '3378', '3379', '3380', '3381', '3382', '3383', '3384', '3385', \n    '3386', '3387', '3388', '3389', '3390', '3391', '3392', '3393', \n    '3394', '3395', '3396', '3397', '3398', '3399', '3400', '3401', \n    '3402', '3403', '3404', '3405', '3406', '3407', '3408', '3409', \n    '3410', '3411', '3412', '3413', '3414', '3415', '3416', '3417', \n    '3418', '3419', '3420', '3421', '3422', '3423', '3424', '3425', \n    '3426', '3427', '3428', '3429', '3430', '3431', '3432', '3433', \n    '3434', '3435', '3436', '3437', '3438', '3439', '3440', '3441', \n    '3442', '3443', '3444', '3445', '3446', '3447', '3448', '3449', \n    '3450', '3451', '3452', '3453', '3454', '3455', '3456', '3457', \n    '3458', '3459', '3460', '3461', '3462', '3463', '3464', '3465', \n    '3466', '3467', '3468', '3469', '3470', '3471', '3472', '3473', \n    '3474', '3475', '3476', '3477', '3478', '3479', '3480', '3481', \n    '3482', '3483', '3484', '3485', '3486', '3487', '3488', '3489', \n    '3490', '3491', '3492', '3493', '3494', '3495', '3496', '3497', \n    '3498', '3499', '3500', '3501', '3502', '3503', '3504', '3505', \n    '3506', '3507', '3508', '3509', '3510', '3511', '3512', '3513', \n    '3514', '3515', '3516', '3517', '3518', '3519', '3520', '3521', \n    '3522', '3523', '3524', '3525', '3526', '3527', '3528', '3529', \n    '3530', '3531', '3532', '3533', '3534', '3535', '3536', '3537', \n    '3538', '3539', '3540', '3541', '3542', '3543', '3544', '3545', \n    '3546', '3547', '3548', '3549', '3550', '3551', '3552', '3553', \n    '3554', '3555', '3556', '3557', '3558', '3559', '3560', '3561', \n    '3562', '3563', '3564', '3565', '3566', '3567', '3568', '3569', \n    '3570', '3571', '3572', '3573', '3574', '3575', '3576', '3577', \n    '3578', '3579', '3580', '3581', '3582', '3583', '3584', '3585', \n    '3586', '3587', '3588', '3589', '3590', '3591', '3592', '3593', \n    '3594', '3595', '3596', '3597', '3598', '3599', '3600', '3601', \n    '3602', '3603', '3604', '3605', '3606', '3607', '3608', '3609', \n    '3610', '3611', '3612', '3613', '3614', '3615', '3616', '3617', \n    '3618', '3619', '3620', '3621', '3622', '3623', '3624', '3625', \n    '3626', '3627', '3628', '3629', '3630', '3631', '3632', '3633', \n    '3634', '3635', '3636', '3637', '3638', '3639', '3640', '3641', \n    '3642', '3643', '3644', '3645', '3646', '3647', '3648', '3649', \n    '3650', '3651', '3652', '3653', '3654', '3655', '3656', '3657', \n    '3658', '3659', '3660', '3661', '3662', '3663', '3664', '3665', \n    '3666', '3667', '3668', '3669', '3670', '3671', '3672', '3673', \n    '3674', '3675', '3676', '3677', '3678', '3679', '3680', '3681', \n    '3682', '3683', '3684', '3685', '3686', '3687', '3688', '3689', \n    '3690', '3691', '3692', '3693', '3694', '3695', '3696', '3697', \n    '3698', '3699', '3700', '3701', '3702', '3703', '3704', '3705', \n    '3706', '3707', '3708', '3709', '3710', '3711', '3712', '3713', \n    '3714', '3715', '3716', '3717', '3718', '3719', '3720', '3721', \n    '3722', '3723', '3724', '3725', '3726', '3727', '3728', '3729', \n    '3730', '3731', '3732', '3733', '3734', '3735', '3736', '3737', \n    '3738', '3739', '3740', '3741', '3742', '3743', '3744', '3745', \n    '3746', '3747', '3748', '3749', '3750', '3751', '3752', '3753', \n    '3754', '3755', '3756', '3757', '3758', '3759', '3760', '3761', \n    '3762', '3763', '3764', '3765', '3766', '3767', '3768', '3769', \n    '3770', '3771', '3772', '3773', '3774', '3775', '3776', '3777', \n    '3778', '3779', '3780', '3781', '3782', '3783', '3784', '3785', \n    '3786', '3787', '3788', '3789', '3790', '3791', '3792', '3793', \n    '3794', '3795', '3796', '3797', '3798', '3799', '3800', '3801', \n    '3802', '3803', '3804', '3805', '3806', '3807', '3808', '3809', \n    '3810', '3811', '3812', '3813', '3814', '3815', '3816', '3817', \n    '3818', '3819', '3820', '3821', '3822', '3823', '3824', '3825', \n    '3826', '3827', '3828', '3829', '3830', '3831', '3832', '3833', \n    '3834', '3835', '3836', '3837', '3838', '3839', '3840', '3841', \n    '3842', '3843', '3844', '3845', '3846', '3847', '3848', '3849', \n    '3850', '3851', '3852', '3853', '3854', '3855', '3856', '3857', \n    '3858', '3859', '3860', '3861', '3862', '3863', '3864', '3865', \n    '3866', '3867', '3868', '3869', '3870', '3871', '3872', '3873', \n    '3874', '3875', '3876', '3877', '3878', '3879', '3880', '3881', \n    '3882', '3883', '3884', '3885', '3886', '3887', '3888', '3889', \n    '3890', '3891', '3892', '3893', '3894', '3895', '3896', '3897', \n    '3898', '3899', '3900', '3901', '3902', '3903', '3904', '3905', \n    '3906', '3907', '3908', '3909', '3910', '3911', '3912', '3913', \n    '3914', '3915', '3916', '3917', '3918', '3919', '3920', '3921', \n    '3922', '3923', '3924', '3925', '3926', '3927', '3928', '3929', \n    '3930', '3931', '3932', '3933', '3934', '3935', '3936', '3937', \n    '3938', '3939', '3940', '3941', '3942', '3943', '3944', '3945', \n    '3946', '3947', '3948', '3949', '3950', '3951', '3952', '3953', \n    '3954', '3955', '3956', '3957', '3958', '3959', '3960', '3961', \n    '3962', '3963', '3964', '3965', '3966', '3967', '3968', '3969', \n    '3970', '3971', '3972', '3973', '3974', '3975', '3976', '3977', \n    '3978', '3979', '3980', '3981', '3982', '3983', '3984', '3985', \n    '3986', '3987', '3988', '3989', '3990', '3991', '3992', '3993', \n    '3994', '3995', '3996', '3997', '3998', '3999', '4000', '4001', \n    '4002', '4003', '4004', '4005', '4006', '4007', '4008', '4009', \n    '4010', '4011', '4012', '4013', '4014', '4015', '4016', '4017', \n    '4018', '4019', '4020', '4021', '4022', '4023', '4024', '4025', \n    '4026', '4027', '4028', '4029', '4030', '4031', '4032', '4033', \n    '4034', '4035', '4036', '4037', '4038', '4039', '4040', '4041', \n    '4042', '4043', '4044', '4045', '4046', '4047', '4048', '4049', \n    '4050', '4051', '4052', '4053', '4054', '4055', '4056', '4057', \n    '4058', '4059', '4060', '4061', '4062', '4063', '4064', '4065', \n    '4066', '4067', '4068', '4069', '4070', '4071', '4072', '4073', \n    '4074', '4075', '4076', '4077', '4078', '4079', '4080', '4081', \n    '4082', '4083', '4084', '4085', '4086', '4087', '4088', '4089', \n    '4090', '4091', '4092', '4093', '4094', '4095', '4096', '4097', \n    '4098', '4099', '4100', '4101', '4102', '4103', '4104', '4105', \n    '4106', '4107', '4108', '4109', '4110', '4111', '4112', '4113', \n    '4114', '4115', '4116', '4117', '4118', '4119', '4120', '4121', \n    '4122', '4123', '4124', '4125', '4126', '4127', '4128', '4129', \n    '4130', '4131', '4132', '4133', '4134', '4135', '4136', '4137', \n    '4138', '4139', '4140', '4141', '4142', '4143', '4144', '4145', \n    '4146', '4147', '4148', '4149', '4150', '4151', '4152', '4153', \n    '4154', '4155', '4156', '4157', '4158', '4159', '4160', '4161', \n    '4162', '4163', '4164', '4165', '4166', '4167', '4168', '4169', \n    '4170', '4171', '4172', '4173', '4174', '4175', '4176', '4177', \n    '4178', '4179', '4180', '4181', '4182', '4183', '4184', '4185', \n    '4186', '4187', '4188', '4189', '4190', '4191', '4192', '4193', \n    '4194', '4195', '4196', '4197', '4198', '4199', '4200', '4201', \n    '4202', '4203', '4204', '4205', '4206', '4207', '4208', '4209', \n    '4210', '4211', '4212', '4213', '421"
  },
  {
    "exact_match": 0.0,
    "result_match_rate": 0.0,
    "precision": 0.0,
    "recall": 0.0,
    "f1_score": 0.0,
    "generated_count": 1,
    "ground_truth_count": 7,
    "correct_count": 0,
    "query": "find parcels that are zoned for retail and within 300m of a subway station and not within 100m of a competitor.",
    "method": "fine-tuned-rag-improved",
    "model": "ft:gpt-4o-mini-2024-07-18:mit:spatial-agent-20250508-011708:BUo8aWbm",
    "success": true,
    "code": "import geopandas as gpd\nimport pandas as pd\n\n# Load data\nparcels = gpd.read_file('../data/cambridge_parcels.geojson')\npoi = gpd.read_file('../data/cambridge_poi_processed.geojson')\ncensus = gpd.read_file('../data/cambridge_census_cambridge_pct.geojson')\nspend = pd.read_csv('../data/cambridge_spend_processed.csv')\n\n# Project to appropriate CRS for Cambridge, MA\nparcels_proj = parcels.to_crs(epsg=26986)\npoi_proj = poi.to_crs(epsg=26986)\n\n# Retail use codes\nretail_use_codes = ['300', '302', '316', '323', '324', '325', '326', '327', '330', '332', '334', '340', '341', '343', '345', '346', '353', '362', '375', '404', '406', '0340', '0406']\n\n# Filter for retail parcels\nretail_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(retail_use_codes)].copy()\n\n# Subway station locations (approximate)\nsubway_stations = gpd.GeoDataFrame({\n    'name': ['Alewife', 'Davis', 'Porter', 'Harvard', 'Central', 'Kendall', 'Charles', 'Park', 'Government'],\n    'geometry': [\n        gpd.points_from_xy([-71.1429], [42.3954])[0],\n        gpd.points_from_xy([-71.1215], [42.3734])[0],\n        gpd.points_from_xy([-71.1189], [42.3738])[0],\n        gpd.points_from_xy([-71.118], [42.3625])[0],\n        gpd.points_from_xy([-71.0862], [42.3629])[0],\n        gpd.points_from_xy([-71.0865], [42.3623])[0],\n        gpd.points_from_xy([-71.0706], [42.3581])[0],\n        gpd.points_from_xy([-71.0572], [42.3584])[0],\n        gpd.points_from_xy([-71.0602], [42.3601])[0]\n    ]\n}, crs=parcels_proj.crs)\n\nsubway_stations = subway_stations.to_crs(epsg=26986)\n\n# Filter for parcels within 300m of subway stations\nsubway_buffer = subway_stations.geometry.buffer(300).union_all()\nparcels_near_subway = retail_parcels[retail_parcels.geometry.intersects(subway_buffer)].copy()\n\n# Filter for competitor retail parcels (same use codes)\ncompetitor_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(retail_use_codes)].copy()\n\n# Exclude parcels within 100m of competitor retail parcels\nif not competitor_parcels.empty:\n    competitor_buffer = competitor_parcels.geometry.buffer(100).union_all()\n    parcels_near_subway_no_competitors = parcels_near_subway[~parcels_near_subway.geometry.intersects(competitor_buffer)].copy()\nelse:\n    parcels_near_subway_no_competitors = parcels_near_subway.copy()\n\n# Sort by parcel ID (ml)\nresult_parcels = parcels_near_subway_no_competitors.sort_values('ml')\n\n# Convert back to original CRS\nresult_parcels = result_parcels.to_crs(parcels.crs)\n\n# Output parcel IDs\nresult_ids = result_parcels['ml'].tolist()\nprint(result_ids)",
    "generated_ids": [
      ""
    ]
  },
  {
    "query": "find parcels that are either office space larger than 10,000 sq ft or retail space within 500m of high-density residential areas.",
    "method": "fine-tuned-rag-improved",
    "model": "ft:gpt-4o-mini-2024-07-18:mit:spatial-agent-20250508-011708:BUo8aWbm",
    "success": false,
    "code": "import geopandas as gpd\nimport pandas as pd\n\n# Load data\nparcels = gpd.read_file('../data/cambridge_parcels.geojson')\npoi = gpd.read_file('../data/cambridge_poi_processed.geojson')\ncensus = gpd.read_file('../data/cambridge_census_cambridge_pct.geojson')\n\n# Project to appropriate CRS for Cambridge, MA\nparcels_proj = parcels.to_crs(epsg=26986)\npoi_proj = poi.to_crs(epsg=26986)\ncensus_proj = census.to_crs(epsg=26986)\n\n# Filter office parcels > 10,000 sq ft\noffice_codes = ['340', '343', '345', '346', '353', '362', '404', '405', '406', '0340', '0343', '0345', '0346', '0353', '0362']\nlarge_office = parcels_proj[parcels_proj['use_code'].astype(str).isin(office_codes) & (parcels_proj['land_area'] > 10000)]\n\n# Filter retail parcels within 500m of high-density residential\nhigh_density_residential = census_proj[census_proj['pct_hh_3plus'] > 0.1]\nresidential_parcels = parcels_proj[parcels_proj['use_code'].astype(str).str.startswith('1')]\nhigh_density_residential_parcels = [p for p in residential_parcels['ml'] if any(abs(p - r) <= 100 for r in high_density_residential['ml'])]\nretail_codes = ['300', '302', '316', '324', '325', '326', '327', '330', '332', '334', '341', '343', '345', '346', '353', '362']\nretail_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(retail_codes)]\nnear_high_density = []\nfor retail in retail_parcels.itertuples():\n    if any(abs(p - r) <= 100 for r in high_density_residential_parcels):\n        near_high_density.append(retail.ml)\n        \n# Combine results\nresult_ids = set(large_office['ml']).union(set(near_high_density))\nresult_ids = sorted(result_ids)\n\n# Print results\nprint(result_ids)"
  },
  {
    "exact_match": 0.0,
    "result_match_rate": 0.5608974358974359,
    "precision": 0.5608974358974359,
    "recall": 0.4257907542579075,
    "f1_score": 0.4840940525587828,
    "generated_count": 312,
    "ground_truth_count": 411,
    "correct_count": 175,
    "query": "find commercial parcels that, if larger than 5000 sq ft, must be within 400m of public transit, or if smaller, must be within 200m of residential areas.",
    "method": "fine-tuned-rag-improved",
    "model": "ft:gpt-4o-mini-2024-07-18:mit:spatial-agent-20250508-011708:BUo8aWbm",
    "success": true,
    "code": "import geopandas as gpd\nimport pandas as pd\n\n# Load data\nparcels = gpd.read_file('../data/cambridge_parcels.geojson')\npoi = gpd.read_file('../data/cambridge_poi_processed.geojson')\ncensus = gpd.read_file('../data/cambridge_census_cambridge_pct.geojson')\n\n# Project to appropriate CRS for Cambridge, MA\nparcels_proj = parcels.to_crs(epsg=26986)\n\n# Define commercial use codes\ncommercial_use_codes = [\n    '300', '302', '316', '323', '324', '325', '326', '327', '330', \n    '332', '334', '340', '341', '343', '345', '346', '353', '362', \n    '375', '404', '406', '0340', '0406'\n]\n\n# Filter for commercial parcels\ncommercial_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(commercial_use_codes)].copy()\n\n# Define public transit locations (subway stations)\ntransit_stations = [\n    (-71.1215, 42.3736),  # Harvard Square\n    (-71.1032, 42.3656),  # Central Square\n    (-71.0865, 42.3625),  # Kendall/MIT\n    (-71.1215, 42.3736),  # Porter Square\n    (-71.1429, 42.3884)   # Alewife\n]\n\n# Create GeoDataFrame for transit stations\ntransit_gdf = gpd.GeoDataFrame(\n    {'station': ['Harvard', 'Central', 'Kendall', 'Porter', 'Alewife']},\n    geometry=gpd.points_from_xy([lon for lon, lat in transit_stations], \n                                  [lat for lon, lat in transit_stations]),\n    crs='EPSG:4326'\n)\ntransit_gdf = transit_gdf.to_crs(epsg=26986)\n\n# Filter by size\nlarge_parcels = commercial_parcels[commercial_parcels['land_area'] > 5000].copy()\nsmall_parcels = commercial_parcels[commercial_parcels['land_area'] <= 5000].copy()\n\n# Condition 1: Large parcels within 400m of transit\ndef within_transit_buffer(parcel_geom, transit_geoms, buffer=400):\n    return any(parcel_geom.distance(geom) <= buffer for geom in transit_geoms)\n\ntransit_geoms = transit_gdf.geometry.tolist()\nlarge_parcels['near_transit'] = large_parcels.geometry.apply(lambda geom: within_transit_buffer(geom, transit_geoms))\nvalid_large_parcels = large_parcels[large_parcels['near_transit']].copy()\n\n# Condition 2: Small parcels within 200m of residential areas\nresidential_use_codes = ['101', '102', '104', '105', '109', '111', '112', '113', '114', '123', '970']\nresidential_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(residential_use_codes)].copy()\n\ndef within_residential_buffer(parcel_geom, residential_geoms, buffer=200):\n    return any(parcel_geom.distance(geom) <= buffer for geom in residential_geoms)\n\nresidential_geoms = residential_parcels.geometry.tolist()\nsmall_parcels['near_residential'] = small_parcels.geometry.apply(lambda geom: within_residential_buffer(geom, residential_geoms))\nvalid_small_parcels = small_parcels[small_parcels['near_residential']].copy()\n\n# Combine valid parcels\nvalid_parcels = pd.concat([valid_large_parcels, valid_small_parcels], ignore_index=True)\n\n# Sort by parcel ID (ml)\nvalid_parcels = valid_parcels.sort_values('ml')\n\n# Get parcel IDs\nvalid_ids = valid_parcels['ml'].tolist()\n\n# Print results\nprint(valid_ids)",
    "generated_ids": [
      "10-39",
      "102-25",
      "102-46",
      "105-123",
      "105-53",
      "105-58",
      "105-68",
      "105-74",
      "105-77",
      "105-81",
      "105-82",
      "105-89",
      "106-109",
      "106-117",
      "106-123",
      "106-124",
      "107-117",
      "107-135",
      "107-136",
      "107-8",
      "107-9",
      "108-54",
      "110-18",
      "110-21",
      "110-55",
      "110-90",
      "114A-120",
      "116-94",
      "117-25",
      "117-56",
      "118-1",
      "118-34",
      "118-79",
      "119-93",
      "120-17",
      "120-74",
      "122-12",
      "126-131",
      "126-27",
      "127-139",
      "133-12",
      "133-14",
      "133-15",
      "133-20",
      "133-27",
      "133-28",
      "133-30",
      "133-48",
      "133-52",
      "139-83",
      "14-26",
      "14-36",
      "14-39",
      "14-44",
      "14-49",
      "14-58",
      "14-64",
      "150-114",
      "154-111",
      "154-64",
      "154-65",
      "154-73",
      "154-89",
      "159-2",
      "160-11",
      "160-14",
      "160-48",
      "160-57",
      "160-58",
      "160-59",
      "160-63",
      "160-64",
      "160-66",
      "160-67",
      "160-69",
      "160-71",
      "160-72",
      "160-76",
      "160-77",
      "160-83",
      "160-84",
      "160-85",
      "162-17",
      "162-18",
      "162-19",
      "162-26",
      "162-29",
      "162-36",
      "162-54",
      "162-64",
      "162-65",
      "162-67",
      "162-68",
      "162-73",
      "165-34",
      "165-53",
      "165-55",
      "165-57",
      "166-106",
      "166-13",
      "166-24",
      "166-33",
      "166-35",
      "166-37",
      "166-52",
      "166-77",
      "168-13",
      "168-20",
      "168-21",
      "168-22",
      "168-25",
      "168-33",
      "168-36",
      "168-41",
      "168-48",
      "168-49",
      "168-59",
      "168-60",
      "168-64",
      "169-100",
      "169-102",
      "169-42",
      "169-46",
      "169-47",
      "169-50",
      "169-67",
      "169-68",
      "169-7",
      "169-81",
      "169-82",
      "169-84",
      "169-86",
      "169-93",
      "169-98",
      "169-99",
      "17-10",
      "170-39",
      "173-65",
      "174-30",
      "174-31",
      "174-33",
      "174-73",
      "175-77",
      "178-79",
      "178-91",
      "18-73",
      "182-89",
      "182-90",
      "184-109",
      "184-155",
      "186-14",
      "189-4",
      "192-74",
      "196-123",
      "196-153",
      "20-83",
      "20-92",
      "200-79",
      "21-115",
      "21-124",
      "228-33",
      "228-55",
      "229-131",
      "229-150",
      "23-146",
      "23-156",
      "230-116",
      "230-41",
      "230-42",
      "230-97",
      "231-27",
      "233-147",
      "233-175",
      "234-193",
      "236-146",
      "242B-998",
      "252-158",
      "254-76",
      "254-78",
      "255-21",
      "260-32",
      "260-46",
      "260-73",
      "260-74",
      "261-112",
      "261-186",
      "261-6",
      "261-7",
      "261-77",
      "265A-29",
      "265A-31",
      "265A-35",
      "265A-39",
      "265A-40",
      "265A-43",
      "265A-46",
      "265A-7",
      "265B-26",
      "265B-28",
      "265B-59",
      "265B-61",
      "265C-25",
      "267F-274",
      "267F-279",
      "267F-281",
      "267F-293",
      "267F-301",
      "267F-391",
      "27-34",
      "271-32",
      "273-2",
      "273-20",
      "273-29",
      "273-35",
      "273-40",
      "273-51",
      "29-50",
      "30-35",
      "30-38",
      "30-40",
      "30-41",
      "30-42",
      "34-116",
      "34-28",
      "35-34",
      "36-137",
      "36-189",
      "36-248",
      "37-20",
      "40-153",
      "41-26",
      "42-13",
      "42-81",
      "42-94",
      "43-70",
      "43-71",
      "43-73",
      "43-76",
      "43-77",
      "43-78",
      "43A-16",
      "43A-24",
      "43A-28",
      "44-100",
      "44-104",
      "44-105",
      "44-106",
      "44-99",
      "46-12",
      "47-94",
      "47-97",
      "48-158",
      "69-162",
      "74-6",
      "74-8",
      "75-128",
      "75-44",
      "79-22",
      "80-172",
      "80-3",
      "80-51",
      "81-104",
      "82-31",
      "83-15",
      "83-7",
      "83-90",
      "83-98",
      "83-99",
      "84-67",
      "86-84",
      "88-53",
      "90-125",
      "90-127",
      "90-13",
      "90-133",
      "90-14",
      "90-155",
      "90-161",
      "90-162",
      "90-169",
      "90-170",
      "90-18",
      "90-185",
      "90-20",
      "90-52",
      "90-70",
      "91-118",
      "91-191",
      "91-208",
      "91-52",
      "91-63",
      "91-64",
      "91-7",
      "91-70",
      "91-81",
      "91-87",
      "92-127",
      "92-88",
      "93-48",
      "93-72",
      "93-73",
      "93-74",
      "93-75",
      "93-76",
      "93-78",
      "93-79",
      "93-80",
      "93-99",
      "94-6",
      "96-152",
      "97-111",
      "99-51"
    ]
  },
  {
    "exact_match": 0.0,
    "result_match_rate": 0.40569020021074814,
    "precision": 0.40569020021074814,
    "recall": 0.9482758620689655,
    "f1_score": 0.5682656826568265,
    "generated_count": 949,
    "ground_truth_count": 406,
    "correct_count": 385,
    "query": "find parcels that are: if zoned for commercial, must be larger than 8000 sq ft; if zoned for residential, must have less than 2 similar properties within 1000m",
    "method": "fine-tuned-rag-improved",
    "model": "ft:gpt-4o-mini-2024-07-18:mit:spatial-agent-20250508-011708:BUo8aWbm",
    "success": true,
    "code": "import geopandas as gpd\nimport pandas as pd\n\n# Load data\nparcels = gpd.read_file('../data/cambridge_parcels.geojson')\npoi = gpd.read_file('../data/cambridge_poi_processed.geojson')\ncensus = gpd.read_file('../data/cambridge_census_cambridge_pct.geojson')\nspending = pd.read_csv('../data/cambridge_spend_processed.csv')\n\n# Project to appropriate CRS for Cambridge, MA\nparcels_proj = parcels.to_crs(epsg=26986)\n\n# Filter commercial parcels larger than 8000 sq ft\ncommercial = parcels_proj[parcels_proj['use_code'].astype(str).str.startswith(('3','4','5','6','7','8','9'))]\nlarge_commercial = commercial[commercial['land_area'] > 8000]\n\n# Filter residential parcels with <2 similar properties within 1000m\nresidential = parcels_proj[parcels_proj['use_code'].astype(str).str.startswith(('1','2'))]\ndef count_similar_properties(parcel_geom, parcel_use_code, all_parcels, buffer_distance=1000):\n    similar_use_codes = [str(parcel_use_code)[:2] + str(i) for i in range(10)]\n    similar_parcels = all_parcels[all_parcels['use_code'].astype(str).str.startswith(tuple(similar_use_codes))]\n    buffered_geom = parcel_geom.buffer(buffer_distance)\n    count = similar_parcels[similar_parcels.geometry.intersects(buffered_geom)].shape[0]\n    return count\nresidential = residential.copy()\nresidential['similar_count'] = residential.apply(lambda row: count_similar_properties(row.geometry, row['use_code'], parcels_proj), axis=1)\nresidential = residential[residential['similar_count'] < 2]\n\n# Combine results\nvalid_parcels = pd.concat([large_commercial, residential]).drop_duplicates(subset='ml')\n\n# Sort by parcel ID\nvalid_ids = valid_parcels['ml'].sort_values().tolist()\n\n# Print results\nprint(valid_ids)",
    "generated_ids": [
      "10-16",
      "100-62",
      "100-68",
      "100-86",
      "102-2",
      "102-4",
      "103-20",
      "103-21",
      "104-109",
      "105-50",
      "105-60",
      "105-61",
      "105-66",
      "105-68",
      "105-77",
      "105-81",
      "105-82",
      "105-89",
      "105-8A",
      "106-108",
      "106-123",
      "106-124",
      "107-117",
      "107-135",
      "107-136",
      "107-137",
      "107-2",
      "107-26",
      "107-8",
      "107-9",
      "108-15",
      "108-18",
      "108-49",
      "108-80",
      "109-2",
      "109-21",
      "109-22",
      "11-145",
      "11-146",
      "11-40",
      "11-47",
      "110-48",
      "110-61",
      "110-63",
      "110-87",
      "110-91",
      "111-60",
      "114-130",
      "114A-17",
      "114A-66",
      "116-117",
      "116-118",
      "116-12",
      "116-43",
      "117-29",
      "118-30",
      "118-33",
      "118-67",
      "119-23",
      "119-89",
      "119-92",
      "119-94",
      "119-95",
      "12-19",
      "121-113",
      "121-13",
      "121-2",
      "121-94",
      "122-107",
      "122-199",
      "126-174",
      "127-119",
      "127-6",
      "128-63",
      "128-70",
      "128-71",
      "128-72",
      "128-73",
      "129-11",
      "129-47",
      "129-55",
      "129-58",
      "129-59",
      "13-16",
      "13-21",
      "13-23",
      "130-121",
      "130-144",
      "130-168",
      "131-65",
      "131-68",
      "131-70",
      "132-137",
      "132-152",
      "132-97",
      "133-23",
      "133-3",
      "133-33",
      "133-36",
      "133-50",
      "133-51",
      "133-61",
      "133-9",
      "134-1",
      "134-2",
      "134-3",
      "134-33",
      "134-59",
      "135-123",
      "135-2",
      "135-43",
      "136-15",
      "136-2",
      "136-20",
      "136-21",
      "136-34",
      "136-39",
      "137-1",
      "137-2",
      "137-39",
      "137-42",
      "138-2",
      "138-33",
      "14-26",
      "14-36",
      "14-39",
      "14-41",
      "14-44",
      "14-45",
      "14-47",
      "14-50",
      "14-51",
      "14-58",
      "14-64",
      "140-134",
      "140-138",
      "140-148",
      "140-156",
      "140-157",
      "140-61",
      "142-19",
      "142-20",
      "142-21",
      "142-44",
      "142-45",
      "143-11",
      "143-13",
      "143-17",
      "143-19",
      "143-20",
      "143-4",
      "144-1",
      "145-30",
      "145-36",
      "145-37",
      "145-38",
      "146A-110",
      "146A-145",
      "147-24",
      "147-35",
      "147-41",
      "147-46",
      "147-58",
      "149-1",
      "15-28",
      "15-29",
      "15-3",
      "15-30",
      "15-31",
      "152-17",
      "152-25",
      "152-52",
      "152-55",
      "153-85",
      "154-101",
      "155-14",
      "155-25",
      "155-29",
      "155-33",
      "155-43",
      "156-107",
      "156-25",
      "156-26",
      "156-37",
      "156-45",
      "156-47",
      "156-67",
      "156-88",
      "156-97",
      "157-20",
      "157-26",
      "157-61",
      "157-62",
      "157-64",
      "157-66",
      "157-68",
      "157-69",
      "158-25",
      "158-28",
      "159-1",
      "16-11",
      "16-23",
      "16-24",
      "16-28",
      "16-30",
      "16-32",
      "160-11",
      "160-14",
      "160-30",
      "160-38",
      "160-48",
      "160-57",
      "160-60",
      "160-69",
      "161-3",
      "161-5",
      "161-58",
      "161-73",
      "161-76",
      "161-85",
      "161-93",
      "161-94",
      "162-31",
      "162-54",
      "162-61",
      "162-66",
      "162-69",
      "164-5",
      "164-7",
      "165-24",
      "165-34",
      "165-53",
      "165-55",
      "165-57",
      "165-60",
      "167-11",
      "167-41",
      "167-96",
      "167-97",
      "168-13",
      "168-22",
      "168-33",
      "168-36",
      "168-41",
      "168-60",
      "169-100",
      "169-102",
      "169-12",
      "169-14",
      "169-4",
      "169-42",
      "169-46",
      "169-47",
      "169-5",
      "169-69",
      "169-79",
      "169-84",
      "169-93",
      "169-94",
      "169-98",
      "169-99",
      "17-64",
      "17-74",
      "17-84",
      "170-19",
      "170-34",
      "170-35",
      "170-38",
      "170-39",
      "170-4",
      "171-1",
      "172-29",
      "172-36",
      "172-59",
      "172-60",
      "172-71",
      "174-25",
      "175-37",
      "175-68",
      "175-75",
      "176-15",
      "177-34",
      "177-71",
      "177-79",
      "178-1",
      "178-117",
      "178-118",
      "178-133",
      "178-21",
      "179-73",
      "179-87",
      "18-64",
      "18-65",
      "18-74",
      "18-75",
      "18-77",
      "180-57",
      "181-52",
      "181-80",
      "181-88",
      "182-84",
      "182-88",
      "182-98",
      "183-119",
      "183-127",
      "183-97",
      "184-159",
      "184-168",
      "184-191",
      "184-198",
      "184-199",
      "184-31",
      "185-56",
      "185-58",
      "185-59",
      "186-90",
      "186-96",
      "187-59",
      "188-113",
      "189-57",
      "189-72",
      "189-93",
      "19-10",
      "19-23",
      "19-24",
      "190-33",
      "191-112",
      "191-65",
      "191-85",
      "192-141",
      "192-174",
      "192-39",
      "194-89",
      "195-143",
      "195-91",
      "196-154",
      "196-163",
      "196-164",
      "197-3",
      "197-4",
      "197-5",
      "198-20",
      "199-31",
      "1A-103",
      "1A-104",
      "1A-105",
      "1A-172",
      "1A-178",
      "1A-179",
      "1A-182",
      "1A-183",
      "1A-184",
      "1A-186",
      "1A-187",
      "1A-189",
      "1A-190",
      "1A-191",
      "1A-192",
      "1A-195",
      "1A-196",
      "1A-197",
      "1A-200",
      "1A-201",
      "1A-207",
      "1A-209",
      "1A-212",
      "1A-213",
      "1A-214",
      "1A-215",
      "1A-67",
      "1A-69",
      "1A-70",
      "1A-81",
      "20-104",
      "20-71",
      "20-75",
      "200-100",
      "200-22",
      "203A-74",
      "203A-76",
      "203A-77",
      "203B-52",
      "203B-69",
      "205-40",
      "208-3",
      "21-117",
      "21-118",
      "21-120",
      "212-29",
      "212-31",
      "212-35",
      "212-58",
      "213-2A",
      "214-48",
      "216-35",
      "216-7",
      "217-11",
      "217-12",
      "217-18",
      "219-28",
      "219-29",
      "219-37",
      "219-7",
      "219-8",
      "22-109",
      "22-132",
      "221-91",
      "223-45",
      "224-16",
      "224-27",
      "224-32",
      "224-39",
      "224-8",
      "226-30",
      "226-34",
      "226-35",
      "226-59",
      "226-67",
      "227-90",
      "228-1",
      "229-135",
      "23-149",
      "23-90",
      "230-71",
      "234-178",
      "235-77",
      "236-95",
      "238-10",
      "239-21",
      "239-55",
      "24-123",
      "24-133",
      "24-139",
      "24-94",
      "241-13",
      "241-14",
      "242-33",
      "242-34",
      "242-36",
      "242-38",
      "242B-1000",
      "242B-56",
      "243-1",
      "245-1",
      "246-15",
      "246A-61",
      "247-226",
      "248-79",
      "248-82",
      "25-27",
      "25-9",
      "251-221",
      "251-255",
      "252-114",
      "252-160",
      "252-172",
      "252A-155",
      "252A-157",
      "253-167",
      "256-80",
      "257-42",
      "257-53",
      "259-1",
      "26-77",
      "260-46",
      "260-73",
      "260-74",
      "260-76",
      "260-77",
      "260-80",
      "261-167",
      "261-77",
      "261-85",
      "264-102",
      "264-105",
      "265A-29",
      "265A-31",
      "265A-39",
      "265A-43",
      "265A-7",
      "265B-26",
      "265B-28",
      "265B-34",
      "265B-56",
      "265B-57",
      "265B-59",
      "265B-60",
      "265B-61",
      "265C-25",
      "265D-53",
      "265D-55",
      "265F-17",
      "266-31",
      "266-32",
      "266-34",
      "266-39",
      "266-40",
      "267.1-240",
      "267.1-278",
      "267.1-279",
      "267.1-282",
      "267.2-261",
      "267.2-263",
      "267.2-264",
      "267.2-266",
      "267.2-267",
      "267.2-270",
      "267.2-272",
      "267.2-273",
      "267.3-226",
      "267.3-228",
      "267.3-253",
      "267.3-254",
      "267.3-268",
      "267.3-275",
      "267.3-276",
      "267.3-277",
      "267.3-278",
      "267.3-279",
      "267.3-280",
      "267.3-285",
      "267.4-209",
      "267.4-218",
      "267.4-221",
      "267.4-247",
      "267.4-254",
      "267.4-264",
      "267.4-284",
      "267.4-285",
      "267.4-288",
      "267.4-295",
      "267.4-296",
      "267.4-305",
      "267.4-307",
      "267.4-310",
      "267.4-311",
      "267.4-312",
      "267.4-313",
      "267.4-315",
      "267.4-319",
      "267.4-322",
      "267.4-323",
      "267C-62",
      "267C-70",
      "267C-71",
      "267C-73",
      "267C-91",
      "267C-95",
      "267D-256",
      "267D-282",
      "267D-285",
      "267D-286",
      "267D-293",
      "267D-294",
      "267D-299",
      "267D-303",
      "267D-305",
      "267D-310",
      "267D-311",
      "267D-313",
      "267D-315",
      "267D-316",
      "267D-319",
      "267D-322",
      "267D-325",
      "267D-329",
      "267D-332",
      "267D-333",
      "267D-334",
      "267D-339",
      "267D-340",
      "267E-17",
      "267E-234",
      "267E-244",
      "267E-279",
      "267E-280",
      "267E-282",
      "267E-283",
      "267E-284",
      "267E-285",
      "267E-290",
      "267E-291",
      "267E-292",
      "267F-274",
      "267F-279",
      "267F-281",
      "267F-283",
      "267F-291",
      "267F-293",
      "267F-295",
      "267F-296",
      "267F-301",
      "267F-391",
      "267F-393",
      "268A-47",
      "268B-15",
      "268C-30",
      "268C-32",
      "268C-35",
      "268C-36",
      "268C-37",
      "269-117",
      "269-127",
      "269-136",
      "269-138",
      "269.5-101",
      "269.5-102",
      "27-101",
      "27-69",
      "27-70",
      "27-81",
      "27-82",
      "27-86",
      "27-93",
      "27-99",
      "271-44",
      "271-45",
      "271-6",
      "272-12",
      "273-1",
      "273-2",
      "273-20",
      "273-29",
      "273-35",
      "273-42",
      "273-43",
      "273-51",
      "274-1F",
      "274-1G",
      "274-1H",
      "274-2",
      "28-23",
      "28-39",
      "29-39",
      "29-49",
      "29-50",
      "30-35",
      "30-38",
      "30-40",
      "30-41",
      "30-42",
      "30-43",
      "31-15",
      "31-20",
      "31-21",
      "31-22",
      "32-37",
      "32-52",
      "32-53",
      "33-113",
      "33-88",
      "33-93",
      "34-110",
      "34-111",
      "34-136",
      "35-101",
      "35-36",
      "35-59",
      "35-87",
      "35-88",
      "35-89",
      "35-92",
      "35-95",
      "36-110",
      "36-164",
      "36-247",
      "37-127",
      "38-1",
      "39-169",
      "39-173",
      "39-174",
      "39-179",
      "39-88",
      "40-258",
      "41-26",
      "41-29",
      "41-36",
      "41-37",
      "41-38",
      "42-11",
      "42-33",
      "42-70",
      "42-86",
      "42-87",
      "42-97",
      "43-63",
      "43-70",
      "43-71",
      "43-73",
      "43-76",
      "43-77",
      "43-78",
      "43A-16",
      "43A-19",
      "43A-21",
      "43A-24",
      "43A-28",
      "43A-29",
      "44-100",
      "44-101",
      "44-102",
      "44-104",
      "44-105",
      "44-106",
      "44-71",
      "44-93",
      "44-95",
      "44-99",
      "46-12",
      "47-83",
      "47-88",
      "47-90",
      "47-94",
      "47-97",
      "48-129",
      "48-156",
      "48-157",
      "48-158",
      "48-159",
      "52A-19",
      "52A-21",
      "52A-22",
      "52A-31",
      "53-54",
      "53-59",
      "53-60",
      "53-61",
      "53-63",
      "53-64",
      "53-71",
      "53-72",
      "54-10",
      "54-16",
      "54-19",
      "54-25",
      "54-29",
      "55-16",
      "55-18",
      "55-19",
      "55-22",
      "55-23",
      "55-26",
      "55-27",
      "55-9",
      "56-4",
      "56-5",
      "56-7",
      "56-8",
      "56-9",
      "57-169",
      "57-170",
      "57-173",
      "58-120",
      "58-158",
      "58-161",
      "58-162",
      "58-165",
      "58-166",
      "58-74",
      "58-95",
      "59-37",
      "60-6",
      "61-14",
      "62-18",
      "62-34",
      "62-39",
      "62-40",
      "62-41",
      "62-42",
      "63-1",
      "63-118",
      "63-128",
      "63-131",
      "63-132",
      "63-134",
      "63-135",
      "64-6",
      "64-7",
      "65-47",
      "65-48",
      "66-10",
      "66-11",
      "66-12",
      "66-125",
      "66-153",
      "66-29",
      "66-73",
      "66-74",
      "66-82",
      "66-99",
      "67-14",
      "67-44",
      "67-47",
      "67-48",
      "67-49",
      "67-55",
      "67-65",
      "67-66",
      "67-67",
      "68-34",
      "68-47",
      "68-50",
      "68-56",
      "68-57",
      "68-58",
      "68-59",
      "68-60",
      "68-75",
      "68-76",
      "68-77",
      "69-110",
      "69-113",
      "69-148",
      "69-159",
      "69-165",
      "69-173",
      "69-179",
      "69-180",
      "69-182",
      "69-183",
      "69-62",
      "7-115",
      "7-29",
      "7-31",
      "7-34",
      "7-35",
      "7-37",
      "70-22",
      "70-34",
      "70-74",
      "70-85",
      "70-86",
      "70-88",
      "70-90",
      "70-92",
      "70-98",
      "70-99",
      "71-55",
      "71-56",
      "71-57",
      "74-1",
      "74-127",
      "74-25",
      "75-118",
      "75-130",
      "75-170",
      "75-172",
      "75-4",
      "76-134",
      "76-135",
      "76-96",
      "77-59",
      "78-249",
      "79-1",
      "8-75",
      "8-76",
      "8-88",
      "8-90",
      "8-91",
      "80-142",
      "80-175",
      "81-100",
      "81-103",
      "81-105",
      "81-106",
      "81-21",
      "81-3",
      "81-50",
      "83-13",
      "83-80",
      "84-1",
      "84-101",
      "84-85",
      "84-91",
      "84-97",
      "85-1",
      "85-63",
      "85-76",
      "85-92",
      "86-105",
      "86-23",
      "87-116",
      "87-153",
      "87-8",
      "88-10",
      "88-11",
      "88-12",
      "88-47",
      "88-53",
      "9-31",
      "9-40",
      "9-41",
      "9-61",
      "9-89",
      "9-90",
      "90-13",
      "90-133",
      "90-14",
      "90-146",
      "90-155",
      "90-161",
      "90-162",
      "90-169",
      "90-170",
      "90-171",
      "90-184",
      "90-193",
      "90-71",
      "90-95",
      "91-118",
      "91-119",
      "91-195",
      "91-200",
      "91-205",
      "91-208",
      "91-70",
      "91-79",
      "91-98",
      "92-117",
      "92-123",
      "92-125",
      "92-127",
      "92-128",
      "92-57",
      "92-88",
      "93-73",
      "93-99",
      "94-7",
      "95-57",
      "95-60",
      "95-70",
      "95-71",
      "95-72",
      "95-73",
      "95-74",
      "95-75",
      "95-76",
      "95-78",
      "95-79",
      "96-109",
      "96-117",
      "96-124",
      "96-149",
      "96-67",
      "96-98",
      "97-32",
      "97-35",
      "98-38",
      "99-81"
    ]
  },
  {
    "query": "find mixed-use parcels that, if north of massachusetts avenue, must have retail on the ground floor, otherwise must have at least 3000 sq ft of commercial space.",
    "method": "fine-tuned-rag-improved",
    "model": "ft:gpt-4o-mini-2024-07-18:mit:spatial-agent-20250508-011708:BUo8aWbm",
    "success": false,
    "code": "import geopandas as gpd\nimport pandas as pd\n\n# Load data\nparcels = gpd.read_file('../data/cambridge_parcels.geojson')\npoi = gpd.read_file('../data/cambridge_poi_processed.geojson')\ncensus = gpd.read_file('../data/cambridge_census_cambridge_pct.geojson')\n\n# Project to EPSG:26986 for accurate spatial analysis\nparcels_proj = parcels.to_crs(epsg=26986)\npoi_proj = poi.to_crs(epsg=26986)\n\n# Define mixed-use codes\nmixed_use_codes = ['100', '101', '102', '103', '104', '105', '106', '109', '110', '111', '112', '113', '114', '121', '130', '131', '132', '140', '146', '147', '148', '149', '150', '151', '152', '153', '154', '155', '156', '157', '158', '160', '161', '162', '163', '164', '165', '170', '171', '172', '175', '180', '181', '182', '183', '186', '192', '202', '203', '204', '205', '206', '207', '208', '209', '210', '211', '212', '213', '214', '215', '216', '217', '218', '219', '220', '221', '222', '223', '224', '225', '226', '227', '228', '229', '230', '231', '232', '233', '234', '235', '236', '237', '238', '239', '240', '241', '242', '243', '244', '245', '246', '247', '248', '249', '250', '251', '252', '253', '254', '255', '256', '257', '258', '259', '260', '261', '262', '263', '264', '265', '266', '267', '268', '269', '270', '271', '272', '273', '274', '275', '276', '277', '278', '279', '280', '281', '282', '283', '284', '285', '286', '287', '288', '289', '290', '291', '292', '293', '294', '295', '296', '297', '298', '299', '300', '301', '302', '303', '304', '305', '306', '307', '308', '309', '310', '311', '312', '313', '314', '315', '316', '317', '318', '319', '320', '321', '322', '323', '324', '325', '326', '327', '328', '329', '330', '331', '332', '333', '334', '335', '336', '337', '338', '339', '340', '341', '342', '343', '344', '345', '346', '347', '348', '349', '350', '351', '352', '353', '354', '355', '356', '357', '358', '359', '360', '361', '362', '363', '364', '365', '366', '367', '368', '369', '370', '371', '372', '373', '374', '375', '376', '377', '378', '379', '380', '381', '382', '383', '384', '385', '386', '387', '388', '389', '390', '391', '392', '393', '394', '395', '396', '397', '398', '399', '400', '401', '402', '403', '404', '405', '406', '407', '408', '409', '410', '411', '412', '413', '414', '415', '416', '417', '418', '419', '420', '421', '422', '423', '424', '425', '426', '427', '428', '429', '430', '431', '432', '433', '434', '435', '436', '437', '438', '439', '440', '441', '442', '443', '444', '445', '446', '447', '448', '449', '450', '451', '452', '453', '454', '455', '456', '457', '458', '459', '460', '461', '462', '463', '464', '465', '466', '467', '468', '469', '470', '471', '472', '473', '474', '475', '476', '477', '478', '479', '480', '481', '482', '483', '484', '485', '486', '487', '488', '489', '490', '491', '492', '493', '494', '495', '496', '497', '498', '499', '500', '501', '502', '503', '504', '505', '506', '507', '508', '509', '510', '511', '512', '513', '514', '515', '516', '517', '518', '519', '520', '521', '522', '523', '524', '525', '526', '527', '528', '529', '530', '531', '532', '533', '534', '535', '536', '537', '538', '539', '540', '541', '542', '543', '544', '545', '546', '547', '548', '549', '550', '551', '552', '553', '554', '555', '556', '557', '558', '559', '560', '561', '562', '563', '564', '565', '566', '567', '568', '569', '570', '571', '572', '573', '574', '575', '576', '577', '578', '579', '580', '581', '582', '583', '584', '585', '586', '587', '588', '589', '590', '591', '592', '593', '594', '595', '596', '597', '598', '599', '600', '601', '602', '603', '604', '605', '606', '607', '608', '609', '610', '611', '612', '613', '614', '615', '616', '617', '618', '619', '620', '621', '622', '623', '624', '625', '626', '627', '628', '629', '630', '631', '632', '633', '634', '635', '636', '637', '638', '639', '640', '641', '642', '643', '644', '645', '646', '647', '648', '649', '650', '651', '652', '653', '654', '655', '656', '657', '658', '659', '660', '661', '662', '663', '664', '665', '666', '667', '668', '669', '670', '671', '672', '673', '674', '675', '676', '677', '678', '679', '680', '681', '682', '683', '684', '685', '686', '687', '688', '689', '690', '691', '692', '693', '694', '695', '696', '697', '698', '699', '700', '701', '702', '703', '704', '705', '706', '707', '708', '709', '710', '711', '712', '713', '714', '715', '716', '717', '718', '719', '720', '721', '722', '723', '724', '725', '726', '727', '728', '729', '730', '731', '732', '733', '734', '735', '736', '737', '738', '739', '740', '741', '742', '743', '744', '745', '746', '747', '748', '749', '750', '751', '752', '753', '754', '755', '756', '757', '758', '759', '760', '761', '762', '763', '764', '765', '766', '767', '768', '769', '770', '771', '772', '773', '774', '775', '776', '777', '778', '779', '780', '781', '782', '783', '784', '785', '786', '787', '788', '789', '790', '791', '792', '793', '794', '795', '796', '797', '798', '799', '800', '801', '802', '803', '804', '805', '806', '807', '808', '809', '810', '811', '812', '813', '814', '815', '816', '817', '818', '819', '820', '821', '822', '823', '824', '825', '826', '827', '828', '829', '830', '831', '832', '833', '834', '835', '836', '837', '838', '839', '840', '841', '842', '843', '844', '845', '846', '847', '848', '849', '850', '851', '852', '853', '854', '855', '856', '857', '858', '859', '860', '861', '862', '863', '864', '865', '866', '867', '868', '869', '870', '871', '872', '873', '874', '875', '876', '877', '878', '879', '880', '881', '882', '883', '884', '885', '886', '887', '888', '889', '890', '891', '892', '893', '894', '895', '896', '897', '898', '899', '900', '901', '902', '903', '904', '905', '906', '907', '908', '909', '910', '911', '912', '913', '914', '915', '916', '917', '918', '919', '920', '921', '922', '923', '924', '925', '926', '927', '928', '929', '930', '931', '932', '933', '934', '935', '936', '937', '938', '939', '940', '941', '942', '943', '944', '945', '946', '947', '948', '949', '950', '951', '952', '953', '954', '955', '956', '957', '958', '959', '960', '961', '962', '963', '964', '965', '966', '967', '968', '969', '970', '971', '972', '973', '974', '975', '976', '977', '978', '979', '980', '981', '982', '983', '984', '985', '986', '987', '988', '989', '990', '991', '992', '993', '994', '995', '996', '997', '998', '999']\n\n# Filter mixed-use parcels\nmixed_use_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(mixed_use_codes)].copy()\n\n# Define Massachusetts Avenue\nmass_ave = gpd.GeoSeries([gpd.points_from_xy([-71.1189, -71.1189], [42.3736, 42.3739])]).to_crs(epsg=26986)\n\n# Split into north and south\nnorth_of_mass = mixed_use_parcels[mixed_use_parcels.geometry.centroid.y > mass_ave[0].y]\nsouth_of_mass = mixed_use_parcels[mixed_use_parcels.geometry.centroid.y <= mass_ave[0].y]\n\n# Retail on ground floor (assumed if ml is in POI)\nretail_ids = poi_proj[poi_proj['business_type'].str.contains('retail', case=False, na=False)]['ml'].tolist()\nnorth_with_retail = north_of_mass[north_of_mass['ml'].isin(retail_ids)]\n\n# Combine results\nresult_ids = pd.Series(north_with_retail['ml'].tolist() + south_of_mass['ml'].tolist()).drop_duplicates().tolist()\n\n# Sort by ml\nresult_ids.sort()\n\n# Print results\nprint(result_ids)"
  },
  {
    "query": "Find parcels between 1000-10000 square feet within 800 meters of Kendall/MIT station in census tracts where at least 5% of residents have advanced degrees.",
    "method": "fine-tuned-rag-improved",
    "model": "ft:gpt-4o-mini-2024-07-18:mit:spatial-agent-20250508-011708:BUo8aWbm",
    "success": false,
    "code": "import geopandas as gpd\nimport pandas as pd\n\n# Load data\nparcels = gpd.read_file('../data/cambridge_parcels.geojson')\npoi = gpd.read_file('../data/cambridge_poi_processed.geojson')\ncensus = gpd.read_file('../data/cambridge_census_cambridge_pct.geojson')\n\n# Project to accurate CRS\nparcels_proj = parcels.to_crs(epsg=26986)\ncensus_proj = census.to_crs(epsg=26986)\n\n# Filter by size\nsize_filtered = parcels_proj[(parcels_proj['land_area'] >= 1000) & (parcels_proj['land_area'] <= 10000)]\n\n# Define Kendall/MIT station\nkendall_point = gpd.GeoDataFrame(geometry=[gpd.points_from_xy(-71.0825, 42.3625)], crs=parcels.crs).to_crs(epsg=26986)\n\n# 800m buffer\nbuffer = kendall_point.buffer(800)[0]\nnear_kendall = size_filtered[size_filtered.geometry.intersects(buffer)]\n\n# Advanced degree filter\ncensus_proj = census_proj[census_proj['G003002'] > 0]\ncensus_proj['pct_adv'] = census_proj['G003003'] / census_proj['G003002']\nadv_deg_tracts = census_proj[census_proj['pct_adv'] >= 0.05]['tract'].unique()\nfinal_parcels = near_kendall[near_kendall['tract'].isin(adv_deg_tracts)]\n\n# Sort by ml\nresult_ids = sorted(final_parcels['ml'].tolist())\n\n# Print results\nprint(result_ids)"
  },
  {
    "exact_match": 0.0,
    "result_match_rate": 0.0,
    "precision": 0.0,
    "recall": 0.0,
    "f1_score": 0.0,
    "generated_count": 1,
    "ground_truth_count": 190,
    "correct_count": 0,
    "query": "Find office parcels with at least 7500 square feet that are within 400 meters of both a restaurant and a coffee shop.",
    "method": "fine-tuned-rag-improved",
    "model": "ft:gpt-4o-mini-2024-07-18:mit:spatial-agent-20250508-011708:BUo8aWbm",
    "success": true,
    "code": "import geopandas as gpd\nimport pandas as pd\n\n# Load data\nparcels = gpd.read_file('../data/cambridge_parcels.geojson')\npoi = gpd.read_file('../data/cambridge_poi_processed.geojson')\ncensus = gpd.read_file('../data/cambridge_census_cambridge_pct.geojson')\nspend = pd.read_csv('../data/cambridge_spend_processed.csv')\n\n# Project to accurate CRS\nparcels_proj = parcels.to_crs(epsg=26986)\n\n# Filter office parcels >7500 sqft\noffice_codes = ['340', '345', '346', '353', '362', '404', '405', '406', '434', '440', '442', '1004']\noffice_parcels = parcels_proj[parcels_proj['use_code'].astype(str).isin(office_codes)].copy()\nlarge_office_parcels = office_parcels[office_parcels['land_area'] > 7500].copy()\n\n# Filter POI for restaurants and coffee shops\nrestaurants = poi[poi['business_type'].str.contains('restaurant|cafe|diner|eatery', case=False, na=False)]\ncoffee_shops = poi[poi['business_type'].str.contains('coffee', case=False, na=False)]\n\n# Function to check both POI within 400m\ndef has_restaurant_and_coffee(parcel_geom, restaurants, coffee_shops, buffer_distance=400):\n    buffered_geom = parcel_geom.buffer(buffer_distance)\n    nearby_restaurants = restaurants[restaurants.geometry.intersects(buffered_geom)]\n    nearby_coffee = coffee_shops[coffee_shops.geometry.intersects(buffered_geom)]\n    return len(nearby_restaurants) > 0 and len(nearby_coffee) > 0\n\n# Filter large office parcels\nvalid_parcels = []\nfor idx, row in large_office_parcels.iterrows():\n    if has_restaurant_and_coffee(row.geometry, restaurants, coffee_shops):\n        valid_parcels.append(row['ml'])\n\n# Sort by parcel ID\nvalid_parcels.sort()\n\n# Print results\nprint(valid_parcels)",
    "generated_ids": [
      ""
    ]
  }
]